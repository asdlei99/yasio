{"config":{"lang":["ja"],"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stemmer"]},"docs":[{"location":"","title":"yasio \u4e2d\u6587\u6587\u6863","text":"<p>yasio \u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u8de8\u5e73\u53f0\u7684\u5f02\u6b65socket\u5e93\uff0c\u4e13\u6ce8\u4e8e\u5ba2\u6237\u7aef\u548c\u57fa\u4e8e\u5404\u79cd\u6e38\u620f\u5f15\u64ce\u7684\u6e38\u620f\u5ba2\u6237\u7aef\u7f51\u7edc\u670d\u52a1\u3002</p> <ul> <li> <p>\u8de8\u5e73\u53f0\u6027:</p> <ul> <li> <p>\u7f16\u8bd1\u5668: </p> <ul> <li>Visual Studio 2013+</li> <li>GCC4.7+</li> <li>xcode9+</li> <li>\u5176\u4ed6\u652f\u6301 C++11+ \u7684\u7f16\u8bd1\u5668</li> </ul> </li> <li> <p>\u67b6\u6784: x86, x64, ARM\u7b49\u3002</p> </li> <li>\u64cd\u4f5c\u7cfb\u7edf: Windows, macOS, Linux, FreeBSD, iOS, Android\u7b49\u3002</li> </ul> </li> <li> <p>\u672f\u8bed:</p> <ul> <li>\u7f51\u7edc\u670d\u52a1: <code>io_service</code></li> <li>\u4fe1\u9053: <code>io_channel</code></li> <li>\u4f20\u8f93\u4f1a\u8bdd: <code>io_transport</code></li> </ul> </li> <li> <p>\u6846\u67b6\u56fe:  </p> </li> </ul>"},{"location":"#_1","title":"\u5feb\u901f\u5f00\u59cb","text":"<p>\u6b64\u5b9e\u4f8b\u7a0b\u5e8f\u7b80\u5355\u5411 <code>tool.chinaz.com</code> \u53d1\u9001http\u8bf7\u6c42\u5e76\u6253\u5370\u54cd\u5e94\u6570\u636e\u3002</p> C++Lua <pre><code>#include \"yasio/yasio.hpp\"\n#include \"yasio/obstream.hpp\"\nusing namespace yasio;\nint main()\n{\nio_service service({\"tool.chinaz.com\", 80});\nservice.set_option(YOPT_S_DEFERRED_EVENT, 0); // dispatch network event on network thread\nservice.start([&amp;](event_ptr&amp;&amp; ev) {\nswitch (ev-&gt;kind())\n{\ncase YEK_ON_PACKET: {\nauto packet = std::move(ev-&gt;packet());\nfwrite(packet.data(), packet.size(), 1, stdout);\nfflush(stdout);\nbreak;\n}\ncase YEK_ON_OPEN:\nif (ev-&gt;status() == 0)\n{\nauto transport = ev-&gt;transport();\nif (ev-&gt;cindex() == 0)\n{\nobstream obs;\nobs.write_bytes(\"GET /index.htm HTTP/1.1\\r\\n\");\nobs.write_bytes(\"Host: tool.chinaz.com\\r\\n\");\nobs.write_bytes(\"User-Agent: Mozilla/5.0 (Windows NT 10.0; \"\n\"WOW64) AppleWebKit/537.36 (KHTML, like Gecko) \"\n\"Chrome/87.0.4820.88 Safari/537.36\\r\\n\");\nobs.write_bytes(\"Accept: */*;q=0.8\\r\\n\");\nobs.write_bytes(\"Connection: Close\\r\\n\\r\\n\");\nservice.write(transport, std::move(obs.buffer()));\n}\n}\nbreak;\ncase YEK_ON_CLOSE:\nprintf(\"The connection is lost.\\n\");\nbreak;\n}\n});\n// open channel 0 as tcp client\nservice.open(0, YCK_TCP_CLIENT);\ngetchar();\n}\n</code></pre> <pre><code>local ip138 = \"tool.chinaz.com\"\nlocal service = yasio.io_service.new({host=ip138, port=80})\nlocal respdata = \"\"\nservice:start(function(ev)\nlocal k = ev.kind()\nif (k == yasio.YEK_ON_PACKET) then\nrespdata = respdata .. ev:packet():to_string()\nelseif k == yasio.YEK_ON_OPEN then\nif ev:status() == 0 then -- connect succeed\nlocal transport = ev:transport()\nlocal obs = yasio.obstream.new()\nobs:write_bytes(\"GET / HTTP/1.1\\r\\n\")\nobs:write_bytes(\"Host: \" .. ip138 .. \"\\r\\n\")\nobs:write_bytes(\"User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.117 Safari/537.36\\r\\n\")\nobs:write_bytes(\"Accept: */*;q=0.8\\r\\n\")\nobs:write_bytes(\"Connection: Close\\r\\n\\r\\n\")\nservice:write(transport, obs)\nend\nelseif k == yasio.YEK_ON_CLOSE then\nprint(\"request finish, respdata: \" ..  respdata)\nend\nend)\n-- Open channel 0 as tcp client and start non-blocking tcp 3 times handshake\nservice:open(0, yasio.YCK_TCP_CLIENT)\n-- Call this function at thread which focus on the network event.\nfunction gDispatchNetworkEvent(...)\nservice:dispatch(128) -- dispatch max events is 128 per frame\nend\n_G.yservice = service -- Store service to global table as a singleton instance\n</code></pre>"},{"location":"#_2","title":"\u6d4b\u8bd5 &amp; \u793a\u4f8b","text":"<p>\u6ce8\u610f</p> <p>\u8fd0\u884cLua\u793a\u4f8b\u7a0b\u5e8f\uff0c\u4f1a\u6253\u5370\u5f02\u5e38\u4fe1\u606f <code>yasio - ibstream_view::consume out of range!</code>\uff0c\u8fd9\u662f\u793a\u4f8b\u7a0b\u5e8f\u91cc\u6545\u610f\u5199\u7684\uff0c\u8bf7\u4e0d\u5fc5\u5728\u610f\u3002</p> <ul> <li> <p>\u6d4b\u8bd5:</p> <ul> <li>echo_server: TCP/UDP/KCP \u56de\u5c04\u670d\u52a1\u5668</li> <li>echo_client: TCP/UDP/KCP \u56de\u5c04\u5ba2\u6237\u7aef</li> <li>ssltest: SSL\u6d4b\u8bd5\u5ba2\u6237\u7aef, \u8bf7\u6c42github.com\u4e3b\u9875\u5e76\u6253\u5370\u8fd4\u56de\u6570\u636e</li> <li>tcptest: TCP\u6d4b\u8bd5\u7a0b\u5e8f</li> <li>speedtest: TCP,UDP,KCP \u672c\u673a\u4f20\u8f93\u901f\u7387\u6d4b\u8bd5\u7a0b\u5e8f</li> <li>mcast: \u7ec4\u64ad\u6d4b\u8bd5\u7a0b\u5e8f</li> </ul> </li> <li> <p>\u793a\u4f8b:</p> <ul> <li>ftp_server: \u57fa\u4e8eyasio\u5b9e\u73b0\u7684\u4ec5\u652f\u6301\u4e0b\u8f7d\u7684ftp\u670d\u52a1\u5668\uff0c\u70b9\u51fb \u8bbf\u95ee\u3002</li> <li>lua: Lua\u793a\u4f8b\u7a0b\u5e8f\uff0c\u5305\u542b\u7b80\u6613\u7684\u5e76\u53d1http\u8bf7\u6c42\uff0cTCP\u62c6\u5305\u53c2\u6570\u8bbe\u7f6e\u793a\u4f8b\u4ee3\u7801</li> <li>xlua: xlua\u96c6\u6210\u6848\u4f8b</li> <li>yasio_unreal: yasio\u7684\u865a\u5e7b\u5f15\u64ce\u63d2\u4ef6</li> </ul> </li> </ul>"},{"location":"#_3","title":"\u7f16\u8bd1 \u6d4b\u8bd5 &amp; \u793a\u4f8b","text":"<ul> <li>\u786e\u4fdd\u5df2\u5b89\u88c5\u652f\u6301C++11\u6807\u51c6\u7684\u7f16\u8bd1\u5668\uff0c\u4f8b\u5982 <code>msvc</code>, <code>gcc</code>, <code>clang</code></li> <li>\u786e\u4fdd\u5df2\u5b89\u88c5 <code>git</code>, <code>cmake</code> installed</li> <li>\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4:</li> </ul> <pre><code>  git clone https://github.com/yasio/yasio\n  cd yasio\n  git submodule update --init --recursive cd build\n  # for xcode should be: cmake .. -GXcode\ncmake ..\n  cmake --build . --config Debug\n</code></pre>"},{"location":"faq/","title":"FAQ","text":""},{"location":"faq/#_1","title":"\u91cd\u70b9\u95ee\u9898\u89e3\u7b54","text":"do_select failed, ec=22, detail:Invalid argument <ul> <li>\u539f\u56e0: <ul> <li>macOS/ios/tvos\u5e73\u53f0\uff0c<code>socket.max_fd + 1</code>\u76f4\u5927\u4e8e<code>FD_SETSIZE(1024)</code></li> <li>Windows\u5e73\u53f0\u5de5\u4f5c\u6210\u957f\uff0c\u9650\u5236\u7684\u662f<code>select</code>\u80fd\u591f\u76d1\u542c\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u6570\u91cf\uff0c\u4f46\u4e0d\u53d7<code>socket.max_fd + 1</code>\u9650\u5236</li> <li>linux\u5e73\u53f0\uff0c\u53d7\u5230\u6587\u4ef6\u63cf\u8ff0\u7b26<code>socket.max_fd + 1</code>\u9650\u5236\uff0c\u8d85\u8fc7\u4f1a\u7acb\u5373\u8fd4\u56de1\uff0c\u4f46\u5b9e\u9645\u4e0a\u65e0\u6570\u636e\u53ef\u8bfb</li> <li>freebsd\u5e73\u53f0\uff0c\u7acb\u5373\u8fd4\u56de1\uff0c\u5373\u4f7f\u6709\u6570\u636e\u53ef\u8bfb\uff0c<code>is_set</code>\u5224\u65ad\u59cb\u7ec8\u8fd4\u56defalse \u89e3\u51b3\u529e\u6cd5: \u5347\u7ea7\u81f33.39.6+\u7248\u672c\uff0c\u4f7f\u7528<code>poll</code>\uff0c\u4e0d\u518d\u53d7\u5230\u4efb\u4f55\u9650\u5236</li> </ul> </li> </ul> \u5728iOS 14+\u8bbe\u5907\u4e0a\u8fde\u63a5\u672c\u5730\u5c40\u57df\u7f51\u4e3b\u673a\u4efb\u610f\u7aef\u53e3\u53f7\u62a5\u9519\uff1aec=65, detail:No route to host <ul> <li>\u89e3\u51b3\u65b9\u6848: \u6253\u5f00\u4f60\u7684iPhone\u3010\u8bbe\u7f6e\u3011\u3010\u9690\u79c1\u3011\u3010\u672c\u5730\u7f51\u7edc\u3011\u627e\u5230\u4f60\u7684\u5e94\u7528\uff0c\u5f00\u542f\u5373\u53ef\u3002</li> </ul> \u5728iOS\u8bbe\u5907\u4e0a\u8fde\u63a5\u670d\u52a1\u5668\u7aef\u53e3\u53f7\u4e3a10161\u65f6\u5931\u8d25\uff0c\u9519\u8bef\u4fe1\u606f\uff1aec=65, detail:No route to host <ul> <li>\u6839\u672c\u539f\u56e0:<ul> <li>\u5f53APP\u521d\u6b21\u542f\u52a8\u65f6\uff0c\u5728ios14.1+\u8bbe\u5907\u4e0a\uff0c\u4f1a\u63d0\u793a\u8bf7\u6c42 <code>Local Network Permission</code> \u6743\u9650\uff0c\u7528\u6237\u70b9\u62d2\u7edd\u3002</li> <li>\u7aef\u53e3\u53f7 10161 \u662f\u7cfb\u7edf\u4fdd\u7559\u7aef\u53e3\uff0c\u7528\u4e8e <code>SNMP via TLS</code> \u534f\u8bae\u3002 </li> </ul> </li> <li>\u89e3\u51b3\u65b9\u6848: \u4f7f\u7528\u5176\u4ed6\u7aef\u53e3\u53f7\u4f5c\u4e3aAPP\u670d\u52a1\u7aef\u53e3\uff0c\u5efa\u8bae\u4f7f\u7528\u52a8\u6001/\u79c1\u5bc6\u7aef\u53e3\uff0c\u8303\u56f4\uff1a 49152~65535\u3002</li> <li>\u5176\u4ed6\u53c2\u8003: https://www.speedguide.net/port.php</li> </ul> yasio\u662f\u5426\u4f9d\u8d56\u5176\u4ed6\u7f51\u7edc\u5e93? <p>yasio\u7684\u6838\u5fc3\u4ee3\u7801\u9ed8\u8ba4\u4e0d\u4f9d\u8d56\u4efb\u4f55\u7b2c\u4e09\u65b9\u5e93\uff0c\u4ece\u4f5c\u8005\u4ece\u4e1a\u8e0f\u5165\u901a\u4fe1\u884c\u4e1a\u5f00\u59cb\u5c31\u7422\u78e8\u7740\u7f16\u5199\u4e00\u4e2a\u8f7b\u91cf\u800c\u597d\u7528\u7684\u901a\u7528\u7f51\u7edc\u5e93\uff0cxxsocket\u5c31\u662fyasio\u7684\u8d77\u6e90\uff0c\u53ea\u6709\u5f02\u6b65\u6d88\u606f\u53d1\u9001\u7684\u8f6f\u4e2d\u65ad\u5668\u63d0\u53d6\u4e8eboost.asio\u3002</p> \u4e3a\u4ec0\u4e48\u4f7f\u7528yasio? <ol> <li>\u5f00\u6e90\u793e\u533a\u5df2\u77e5\u6bd4\u8f83\u6709\u540d\u7684\u7f51\u7edc\u5e93\u6709asio,libevent,libev,libuv\uff0c\u4ed6\u4eec\u63d0\u4f9b\u7684\u90fd\u662f\u975e\u5e38\u57fa\u7840\u7684\u975e\u963b\u585e\u591a\u8defio\u590d\u7528\u6a21\u578b\uff0c\u5e76\u4e14\uff0c\u5404\u5e73\u53f0\u5e95\u5c42\u4f1a\u4f7f\u7528iocp,kqueue,epoll,select\u7b49\u6a21\u578b\uff0c\u62ff\u6765\u505a\u5ba2\u6237\u7aef\u7f51\u7edc\uff0c\u5982\u8fde\u63a5\u7ba1\u7406\uff0cTCP\u7c98\u5305\u5904\u7406\u7b49\u90fd\u9700\u8981\u7a0b\u5e8f\u5458\u81ea\u5df1\u5904\u7406\u3002</li> <li>yasio\u5c06\u8fde\u63a5\u7ba1\u7406\uff0cTCP\u62c6\u5305\u90fd\u5c01\u88c5\u5230\u4e86\u5e95\u5c42\u3002</li> <li>yasio\u5c06TCP,UDP,KCP\u7edf\u4e00\u62bd\u8c61\u6210Transport\u66f4\u52a0\u65b9\u4fbf\u4f7f\u7528\u3002</li> <li>yasio\u66f4\u8f7b\u91cf\u7ea7\uff0c\u6240\u6709\u5e73\u53f0\u5747\u4f7f\u7528select\u6a21\u578b\u3002</li> </ol> yasio\u662f\u5426\u652f\u6301\u975e\u963b\u585e\u57df\u540d\u89e3\u6790? <p>\u652f\u6301\uff0c\u4f46\u9700\u8981\u4f9d\u8d56c-ares\u5e93\uff0c\u8fd9\u4e2a\u5e93\u662f\u5b8c\u5168\u5b9e\u73b0DNS\u534f\u8bae\uff0c\u5e76\u53ef\u4ee5\u5f88\u597d\u7684\u548c\u73b0\u6709select\u6a21\u578b\u7ed3\u5408\u4f7f\u7528\uff0c\u57df\u540d\u89e3\u6790\u65e0\u9700\u65b0\u5f00\u7ebf\u7a0b\u3002\u5982\u679c\u4e0d\u5f00\u542fc-ares\uff0cyasio\u5185\u90e8\u4f1a\u4e3a\u6bcf\u6b21\u57df\u540d\u89e3\u6790\u5f00\u7ebf\u7a0b\u3002\u4f46\u4f1a\u9ed8\u8ba4\u7f13\u5b5810\u5206\u949f\uff0c\u6240\u4ee5\u4e5f\u4e0d\u7528\u62c5\u5fc3\u5f00\u7ebf\u7a0b\u592a\u9891\u7e41\u3002</p> yasio\u662f\u5426\u652f\u6301SSL/TLS\u4f20\u8f93? <p>\u652f\u6301\uff0c\u4f46\u9700\u8981\u4f9d\u8d56OpenSSL\u6216\u8005MbedTLS\u3002</p> \u5982\u4f55\u4ece io_event \u4e2d\u8bbe\u7f6e\u548c\u83b7\u53d6 userdata <p>\u8bf7\u53c2\u8003\uff1ahttps://github.com/yasio/ftp_server/blob/master/ftp_server.cpp#L98</p> yasio\u662f\u5426\u5904\u7406 SIGPIPE \u4fe1\u53f7\uff1f <p>\u4ece <code>3.30</code> \u7248\u672c\u5f00\u59cb\u5df2\u5904\u7406\u3002 \u5982\u679c\u4e0d\u5904\u7406\uff0c\u5b9e\u6d4b\u8fc7iOS\u5728\u52a0\u8f7d\u8d44\u6e90\u6bd4\u8f83\u8017\u65f6\u4f1a\u89e6\u53d1SIGPIPE\u76f4\u63a5\u5bfc\u81f4APP\u95ea\u9000\uff0c\u5904\u7406\u540e\uff0c\u4ec5\u4ec5\u89e6\u53d1TCP\u8fde\u63a5\u65ad\u5f00\uff0c\u9519\u8bef\u780132\uff0c\u9519\u8bef\u4fe1\u606f: <code>Broken pipe</code> \u8be6\u89c1: https://github.com/yasio/yasio/issues/170</p> macOS \u4e0a\u53d1\u9001UDP\u5931\u8d25\uff0c\u62a5\u9519\u8bef\u780140\uff0c\u9519\u8bef\u4fe1\u606f <code>Message too long</code> \u600e\u4e48\u529e\uff1f <ul> <li>\u539f\u56e0: \u6570\u636e\u5305\u592a\u5927\uff0cmacOS\u7cfb\u7edfUDP\u53d1\u9001\u7f13\u51b2\u533a\u9ed8\u8ba4\u4e3a <code>9126</code> \u5b57\u8282\u3002</li> <li>\u89e3\u51b3\u65b9\u6848: \u901a\u8fc7socket\u9009\u9879\u5c06UDP\u53d1\u9001\u7f13\u51b2\u533a\u8bbe\u7f6e\u5927\u4e00\u70b9\uff0c\u4f8b\u5982:<ul> <li>xxsocket\u63a5\u53e3\u8bbe\u7f6e\u65b9\u5f0f\u4e3a: <code>sock_udp.set_optval(SOL_SOCKET, SO_SNDBUF, (int)65535);</code></li> <li>io_service\u8bbe\u7f6e\u65b9\u5f0f\u8bf7\u53c2\u89c1: https://github.com/yasio/yasio/blob/dev/tests/speed/main.cpp#L223</li> </ul> </li> </ul> io_service schedule \u53ef\u4ee5\u591a\u4e2a\u4efb\u52a1\u5417\uff1f <p>\u53ef\u4ee5\u3002</p> std::thread \u5728\u67d0\u4e9b\u5d4c\u5165\u5f0f\u5e73\u53f0\u7f16\u8bd1\u5668\u95ea\u9000\u600e\u4e48\u529e\uff1f <p>\u4fee\u6539\u7f16\u8bd1\u53c2\u6570\uff0c\u8be6\u89c1: https://github.com/yasio/yasio/issues/244</p> xxsocket \u51fd\u6570\u547d\u540d\u540e\u7f00_n\u548c_i\u7684\u610f\u601d\uff1f <p>_n\u662fnonblock\u7684\u610f\u601d\uff0c_i\u662finternal(\u65b0\u7248\u672c\u5df2\u53bb\u9664)\u3002</p> \u8bbe\u7f6e\u4e86YOPT_TCP_KEEPALIVE\uff0c\u8fd8\u9700\u8981\u5e94\u7528\u5c42\u5fc3\u8df3\u5417\uff1f <p>\u4e00\u822c\u4e0d\u9700\u8981\uff0c\u9664\u975e\u9700\u8981\u68c0\u6d4b\u7f51\u7edc\u5ef6\u65f6\u5c55\u793a\u7ed9\u7528\u6237\uff0c\u8be6\u89c1: https://github.com/yasio/yasio/issues/117</p> Lua\u7ed1\u5b9a\u95ea\u9000\u600e\u4e48\u529e\uff1f <ul> <li>c++11:<ul> <li>\u4f7f\u7528kaguya\u7ed1\u5b9a\u5e93\uff0c\u4f46\u8fd9\u4e2a\u5e93\u6709\u4e2a\u95ee\u9898\uff1a\u5728\u7ed1\u5b9ac++\u7c7b\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6784\u9020c++\u5bf9\u8c61\u8fc7\u7a0b\u662f\u5148\u901a\u8fc7lua_newuserdata, \u518d\u901a\u8fc7placement new\u6784\u9020\u5bf9\u8c61\uff0c\u5728xcode clang release\u4f18\u5316\u7f16\u8bd1\u4e0b\u4f1a\u76f4\u63a5\u95ea\u9000</li> <li>\u7ecf\u8fc7bing.com\u641c\u7d22\uff0c\u53d1\u73b0\u53ef\u901a\u8fc7\u5b9a\u4e49<code>LUAI_USER_ALIGNMENT_T=max_align_t</code>\u6765\u89e3\u51b3</li> <li>\u7ecf\u8fc7\u6d4b\u8bd5, max_align_t\u5728xcode clang\u4e0b\u5b9a\u4e49\u4e3along double\u7c7b\u578b\uff0c\u957f\u5ea6\u4e3a16\u4e2a\u5b57\u8282</li> <li>\u53c2\u8003: http://lua-users.org/lists/lua-l/2019-07/msg00197.html</li> </ul> </li> <li>c++14:<ul> <li>\u4f7f\u7528sol2\u7ed1\u5b9a\u5e93\uff0csol2\u53ef\u4ee5\u6210\u529f\u89e3\u51b3kaguya\u7684\u95ee\u9898\uff0c\u7ecf\u8fc7\u67e5\u770bsol2\u7684\u6e90\u7801\uff0c\u53d1\u73b0\u5176\u5728\u5185\u90e8\u5bf9lua_newuserdata\u8fd4\u56de\u7684\u5730\u5740\u505a\u4e86\u5bf9\u9f50\u5904\u7406\uff0c\u56e0\u6b64\u6210\u529f\u907f\u514d\u4e86clang release\u4f18\u5316\u5730\u5740\u4e0d\u5bf9\u9f50\u95ea\u9000\u95ee\u9898</li> </ul> </li> <li> <p>c++17:</p> <ul> <li>\u540c\u6837\u4f7f\u7528sol2\u5e93\uff0c\u4f46xcode\u4f1a\u63d0\u793aios11\u4ee5\u4e0b\u4e0d\u652f\u6301C++17\u9ed8\u8ba4<code>new</code>\u64cd\u4f5c\u7b26\u7684<code>Aligned allocation/deallocation</code>\uff0c\u901a\u8fc7\u6dfb\u52a0\u7f16\u8bd1\u9009\u9879-faligned-allocation\u53ef\u901a\u8fc7\u7f16\u8bd1\uff1b</li> <li>ios10\u4ee5\u4e0b\u4e0d\u652f\u6301stl\u7684shared_mutex(yasio\u6700\u8fd1\u505a\u4e86\u517c\u5bb9\uff0c\u5bf9\u4e8eApple\u5e73\u53f0\u4e00\u5f8b\u4f7f\u7528pthread\u5b9e\u73b0)</li> </ul> </li> <li> <p>\u601d\u8003\uff1a</p> <ul> <li>Lua\u865a\u62df\u673a\u5b9e\u73b0\u4e2d\u9ed8\u8ba4\u6700\u5927\u5bf9\u9f50\u7c7b\u578b\u662fdouble\uff0c\u800c<code>max_align_t</code>\u7c7b\u578b\u662fC11\u6807\u51c6\u624d\u5f15\u5165\u7684\uff1a https://en.cppreference.com/w/c/types/max_align_t \uff0c\u56e0\u6b64Lua\u4f5c\u4e3aANSI C89\u6807\u51c6\u517c\u5bb9\u5b9e\u73b0\u5e76\u672a\u5b8c\u7f8e\u5904\u7406\u5404\u4e2a\u7f16\u8bd1\u5668\u5730\u5740\u5bf9\u9f50\u95ee\u9898\uff0c\u800c\u662f\u7559\u7ed9\u4e86\u7528\u6237\u5b9a\u4e49: <code>LUAI_USER_ALIGNMENT_T</code></li> <li>\u5728C++11\u7f16\u8bd1\u7cfb\u7edf\u4e0b\u5df2\u7ecf\u5f15\u5165 <code>std::max_align_t</code>\u7c7b\u578b: https://en.cppreference.com/w/cpp/types/max_align_t</li> </ul> </li> </ul> <p>\u91cd\u8981: max_align_t\u5404\u5e73\u53f0\u5b9a\u4e49\u8bf7\u67e5\u770bllvm\u9879\u76ee\u7684 __stddef_max_align_t.h</p> Can't load xxx.bundle on macOS? <p>The file <code>xxx.bundle</code> needs change attr by command <code>sudo xattr -r -d com.apple.quarantine xxx.bundle</code> </p> xxsocket\u7684resolve\u7cfb\u5217\u51fd\u6570socktype\u53c2\u6570\u4f5c\u7528\uff1f <ul> <li>winsock\u5b9e\u73b0\u53ef\u4ee5\u5ffd\u7565</li> <li>\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\u5982\u679c\u8bbe\u7f6e\u4e3a0\u4f1a\u8fd4\u56de\u591a\u4e2a\u5730\u5740\uff0c\u5373\u4f7f\u76f4\u63a5\u4f20IP\u3002</li> </ul>"},{"location":"faq/#_2","title":"\u66f4\u591a\u5e38\u89c1\u95ee\u9898","text":"<p>\u8bf7\u53c2\u9605 \u9879\u76ee\u5e2e\u52a9\u53f0</p>"},{"location":"interop/","title":"yasio Interop","text":"<p>\u4e3a\u4e86\u652f\u6301Unity C#\uff0c yasio\u63d0\u4f9b\u4e86C\u8bed\u8a00\u63a5\u53e3\u5bfc\u51fa\uff0c\u8be6\u89c1: https://github.com/yasio/yasio/blob/dev/yasio/bindings/yasio_ni.cpp \u5b8c\u6574demo\uff0c\u8bf7\u67e5\u770b: https://github.com/yasio/yasio_unity</p>"},{"location":"preprocessor/","title":"yasio \u5b8f\u5b9a\u4e49","text":"<p>\u4ee5\u4e0b\u5b8f\u5b9a\u4e49\u53ef\u4ee5\u63a7\u5236 <code>yasio</code> \u5e93\u7684\u67d0\u4e9b\u884c\u4e3a\uff0c\u53ef\u4ee5\u5728 yasio/detail/config.hpp \u5b9a\u4e49\u6216\u8005\u5728\u7f16\u8bd1\u5668\u9884\u5904\u7406\u5668\u5b9a\u4e49</p> Name Description YASIO_HAVE_KCP \u662f\u5426\u542f\u7528kcp\u4f20\u8f93\u652f\u6301\uff0c\u9700\u8981kcp\u5df2\u7ecf\u5728\u8f6f\u4ef6\u7f16\u8bd1\u7cfb\u7edf\u4e2d\uff0c\u9ed8\u8ba4\u5173\u95ed\u3002 YASIO_HEADER_ONLY \u662f\u5426\u4ee5\u4ec5\u5934\u6587\u4ef6\u7684\u65b9\u5f0f\u4f7f\u7528yasio\u6838\u5fc3\u7ec4\u4ef6\uff0c\u9ed8\u8ba4\u5173\u95ed\u3002 YASIO_SSL_BACKEND \u9009\u62e9SSL\u5e93\u4ee5\u652f\u6301SSL\u5ba2\u6237\u7aef\uff0c\u9700\u8981\u8f6f\u4ef6\u7f16\u8bd1\u7cfb\u7edf\u5305\u542bOpenSSL/MbedTLS\u5e93\uff0c3.36.0\u65b0\u589e(\u540c\u65f6\u79fb\u9664YASIO_HAVE_SSL)\uff0c\u6b64\u5b8f\u53ea\u80fd\u53d6\u503c <code>1</code>(\u4f7f\u7528OpenSSL) \u6216\u8005 <code>2</code> (\u4f7f\u7528mbedtls)\u3002 YASIO_ENABLE_UDS \u662f\u5426\u542f\u7528unix domain socket\u652f\u6301\uff0c\u76ee\u524d\u4ec5\u7c7bunix\u7cfb\u7edf\u548cwin10 RS5+\u652f\u6301\uff0c\u9ed8\u8ba4\u5173\u95ed\u3002 YASIO_HAVE_CARES \u662f\u5426\u542f\u7528c-ares\u5f02\u6b65\u57df\u540d\u89e3\u6790\u5e93\uff0c\u5f53\u7f16\u8bd1\u7cfb\u7edf\u5305\u542bc-ares\u65f6\u53ef\u542f\u7528\uff0c\u6709\u6548\u907f\u514d\u6bcf\u6b21\u89e3\u6790\u57df\u540d\u90fd\u65b0\u5f00\u7ebf\u7a0b\u3002yasio\u6709DNS\u7f13\u5b58\u673a\u5236\uff0c\u8d85\u65f6\u65f6\u95f4\u9ed8\u8ba410\u5206\u949f\uff0c\u56e0\u6b64\u65e0c-ares\u4e5f\u4e0d\u4f1a\u9020\u6210\u592a\u5927\u7684\u6027\u80fd\u635f\u8017\u3002 YASIO_VERBOSE_LOG \u662f\u5426\u6253\u5370\u8be6\u7ec6\u65e5\u5fd7\uff0c\u9ed8\u8ba4\u5173\u95ed\u3002 YASIO_NT_COMPAT_GAI \u662f\u5426\u542f\u7528Windows XP\u7cfb\u7edf\u4e0b\u4f7f\u7528 <code>getaddrinfo</code> API\u652f\u6301\u3002 YASIO_USE_SPSC_QUEUE \u662f\u5426\u4f7f\u7528SPSC(\u5355\u751f\u4ea7\u8005\u5355\u6d88\u8d39\u8005)\u961f\u5217\uff0c\u4ec5\u5f53\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u8c03\u7528io_service::write\u65f6\u653e\u53ef\u542f\u7528\uff0c\u9ed8\u8ba4\u5173\u95ed\u3002 YASIO_USE_SHARED_PACKET \u662f\u5426\u4f7f\u7528 <code>std::shared_ptr</code> \u5305\u88c5\u7f51\u7edc\u5305\uff0c\u4f7f\u5176\u80fd\u5728\u591a\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\uff0c\u9ed8\u8ba4\u5173\u95ed\u3002 YASIO_HAVE_HALF_FLOAT \u662f\u5426\u542f\u7528\u534a\u7cbe\u5ea6\u6d6e\u70b9\u6570\u652f\u6301\uff0c\u4f9d\u8d56 half.hpp\u3002 YASIO_DISABLE_OBJECT_POOL \u662f\u5426\u7981\u7528\u5bf9\u8c61\u6c60\u7684\u4f7f\u7528\uff0c\u9ed8\u8ba4\u542f\u7528\u3002 YASIO_DISABLE_CONCURRENT_SINGLETON \u662f\u5426\u7981\u7528\u5e76\u53d1\u5355\u5229\u7c7b\u6a21\u677f\u3002 YASIO_ENABLE_PASSIVE_EVENT \u662f\u5426\u542f\u7528\u670d\u52a1\u7aef\u4fe1\u9053open/close\u4e8b\u4ef6\u4ea7\u751f\uff0c\u9ed8\u8ba4\u5173\u95ed\u3002 YASIO_DISABLE_POLL \u662f\u5426\u7981\u7528<code>poll</code>\uff0c\u9ed8\u8ba4\u542f\u7528\u3002\u81ea3.39.6\uff0c\u5e95\u5c42\u591a\u8defio\u590d\u7528\u6a21\u578b\u4f7f\u7528<code>poll</code>\uff0c\u5982\u9700\u7ee7\u7eed\u4f7f\u7528<code>select</code>\u6a21\u578b\uff0c\u5b9a\u4e49\u6b64\u9884\u5904\u7406\u5668\u5373\u53ef"},{"location":"unpacking/","title":"yasio \u7c98\u5305\u5904\u7406","text":"<p>yasio\u7684\u7c98\u5305\u5904\u7406\u4e0d\u4ec5\u9488\u5bf9TCP\uff0c\u5bf9\u4e8eUDP\uff0c\u5982\u679c\u53d1\u9001\u7aef\u6709\u7ec4\u5305\u53d1\u9001\u673a\u5236\uff0c\u4e5f\u662f\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u5904\u7406\u3002\u6574\u4f53\u6765\u8bb2\u6709\u4e24\u79cd\u65b9\u5f0f: </p> <ul> <li>\u901a\u8fc7io_service\u9009\u9879 YOPT_C_UNPACK_PARAMS \u8bbe\u7f6e\u4fe1\u9053\u53c2\u6570\u3002</li> <li>\u901a\u8fc7io_service\u9009\u9879 <code>YOPT_C_LFBFD_FN</code> \u8bbe\u7f6e\u81ea\u5b9a\u4e49\u5305\u957f\u5ea6\u89e3\u7801\u51fd\u6570 decode_len_fn_t \u3002</li> </ul> <p>\u6ce8\u610f</p> <p>\u81ea\u5b9a\u4e49\u89e3\u7801\u5305\u957f\u5ea6\u51fd\u6570\u5b9e\u73b0\u65f6\uff0c\u5f53\u4ece\u5b57\u8282\u6d41\u4e2d\u8bfb\u53d6int\u503c\u65f6\uff0c\u4e00\u5b9a\u4e0d\u8981\u4f7f\u7528\u6307\u9488\u5f3a\u8f6c\uff0c\u5426\u5219\u53ef\u80fd\u89e6\u53d1ARM\u82af\u7247\u5b57\u8282\u5bf9\u9f50\u95ee\u9898 <code>SIGBUS</code> \u5f02\u5e38\u95ea\u9000\u3002\u53ef\u4ee5\u53c2\u8003\u5185\u7f6e\u89e3\u7801\u5305\u957f\u5ea6\u51fd\u6570\u5b9e\u73b0 <code>io_channel::__builtin_decode_len</code>\u3002</p>"},{"location":"unpacking/#yopt_c_unpack_params","title":"YOPT_C_UNPACK_PARAMS","text":"<p>\u8bbe\u7f6e\u4fe1\u9053\u62c6\u5305\u53c2\u6570\u3002</p>"},{"location":"unpacking/#_1","title":"\u53c2\u6570","text":"<p>max_frame_length \u6700\u5927\u5305\u957f\u5ea6\uff0c\u8d85\u8fc7\u5c06\u89c6\u4e3a\u5f02\u5e38\u5305\u3002</p> <p>length_field_offset \u5305\u957f\u5ea6\u5b57\u6bb5\u76f8\u5bf9\u4e8e\u6d88\u606f\u5305\u6570\u636e\u9996\u5b57\u8282\u504f\u79fb\u3002</p> <p>length_field_length \u5305\u957f\u5ea6\u5b57\u6bb5\u5927\u5c0f\uff0c\u652f\u63011~4\u5b57\u8282\u6574\u6570(<code>uint8_t,uint16_t,uint24_t,int32_t</code>)\u3002</p> <p>length_adjustment \u5305\u957f\u5ea6\u8c03\u6574\u503c\u3002\u901a\u5e38\u5e94\u7528\u5c42\u4e8c\u8fdb\u5236\u534f\u8bae\u90fd\u4f1a\u8bbe\u8ba1\u6d88\u606f\u5934\u548c\u6d88\u606f\u4f53\uff0c\u5f53\u957f\u5ea6\u5b57\u6bb5\u503c\u5305\u542b\u6d88\u606f\u5934\u65f6\uff0c\u5219\u6b64\u503c\u4e3a <code>0</code>\uff0c\u5426\u5219\u4e3a <code>\u6d88\u606f\u5934\u957f\u5ea6</code>\u3002</p>"},{"location":"unpacking/#_2","title":"\u6ce8\u610f","text":"<p>\u6d88\u606f\u5305\u957f\u5ea6\u5b57\u6bb5\u5fc5\u987b\u4f7f\u7528\u7f51\u7edc\u5b57\u8282\u5e8f\u7f16\u7801\u3002\u8bf7\u67e5\u770b\u5185\u7f6e\u89e3\u7801\u5305\u957f\u5ea6\u5b9e\u73b0:</p> <pre><code>int io_channel::__builtin_decode_len(void* d, int n)\n{\nint loffset = uparams_.length_field_offset;\nint lsize   = uparams_.length_field_length;\nif (loffset &gt;= 0)\n{\nint len = 0;\nif (n &gt;= (loffset + lsize))\n{\n::memcpy(&amp;len, (uint8_t*)d + loffset, lsize);\nlen = yasio::network_to_host(len, lsize);\nlen += uparams_.length_adjustment;\nif (len &gt; uparams_.max_frame_length)\nlen = -1;\n}\nreturn len;\n}\nreturn n;\n}\n</code></pre>"},{"location":"unpacking/#decode_len_fn_t","title":"decode_len_fn_t","text":"<p>\u4fe1\u9053\u89e3\u7801\u6d88\u606f\u5305\u957f\u5ea6\u51fd\u6570\u539f\u578b\u3002</p> <pre><code>typedef std::function&lt;int(void* d, int n)&gt; decode_len_fn_t;\n</code></pre>"},{"location":"unpacking/#_3","title":"\u53c2\u6570","text":"<p>d \u5f85\u89e3\u5305\u6570\u636e\u9996\u5b57\u8282\u5730\u5740\u3002</p> <p>n \u5f85\u89e3\u5305\u6570\u636e\u957f\u5ea6\u3002</p>"},{"location":"unpacking/#_4","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u6d88\u606f\u5305\u6570\u636e\u5b9e\u9645\u957f\u5ea6\u3002</p> <ul> <li><code>&gt; 0</code>: \u89e3\u7801\u5305\u957f\u5ea6\u6210\u529f\u3002</li> <li><code>== 0</code>: \u63a5\u6536\u6570\u636e\u4e0d\u8db3\u4ee5\u89e3\u7801\u6d88\u606f\u5305\u5b9e\u9645\u957f\u5ea6\uff0cyasio\u5e95\u5c42\u4f1a\u7ee7\u7eed\u63a5\u6536\u6570\u636e\uff0c\u4e00\u65e6\u6536\u5230\u65b0\u6570\u636e\uff0c\u4f1a\u518d\u6b21\u8c03\u7528\u6b64\u51fd\u6570\u3002</li> <li><code>&lt; 0</code>: \u89e3\u7801\u5305\u957f\u5ea6\u5f02\u5e38\uff0c\u4f1a\u89e6\u53d1\u5f53\u524d\u4f20\u8f93\u4f1a\u8bdd\u65ad\u5f00\u3002</li> </ul>"},{"location":"unpacking/#_5","title":"\u6ce8\u610f","text":"<p>\u89e3\u7801\u6d88\u606f\u5305\u957f\u5ea6\u51fd\u6570\u5fc5\u987b\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u4f8b\u5982\u5bf9\u4e8eLua\u5219\u4e0d\u652f\u6301\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u89e3\u7801\u6d88\u606f\u5305\u957f\u5ea6\u51fd\u6570\u3002</p>"},{"location":"api/reference/endpoint-class/","title":"endpoint Class","text":"<p>\u5c01\u88c5\u5e95\u5c42 <code>bsd socket</code> \u5730\u5740\uff0c\u652f\u6301IPv4\u548cIPv6\uff0c\u5305\u542bIP\u5730\u5740\u548c\u7aef\u53e3\u4fe1\u606f\uff0c\u53ef\u76f4\u63a5\u7528\u4e8e\u5e95\u5c42 socket API: <code>bind/connect/sendto/recvfrom</code>\u3002</p>"},{"location":"api/reference/endpoint-class/#_1","title":"\u8bed\u6cd5","text":"<pre><code>namespace yasio { inline namespace inet { inline namespace ip { struct endpoint; } } }\n</code></pre>"},{"location":"api/reference/endpoint-class/#_2","title":"\u6210\u5458","text":"Name Description endpoint::endpoint \u6784\u9020\u4e00\u4e2a <code>endpoint</code> \u5bf9\u8c61"},{"location":"api/reference/endpoint-class/#_3","title":"\u516c\u5171\u65b9\u6cd5","text":"Name Description endpoint::operator bool \u68c0\u67e5\u662f\u5426\u662f\u4e00\u4e2a\u6709\u6548\u5730\u5740 endpoint::operator= \u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d endpoint::operator&amp; \u53d6\u5730\u5740\u8fd0\u7b97\u7b26\u91cd\u8f7d endpoint::as_is \u4ece\u5df2\u77e5\u5730\u5740\u7c7b\u578b\u6784\u9020 endpoint::as_in \u4eceip\uff0c\u7aef\u53e3\u7b49\u5730\u5740\u4fe1\u606f\u6784\u9020 endpoint::as_un \u6784\u9020\u4e3aunix domain socket\u5730\u5740 endpoint::as_is_raw \u4ece\u8fde\u7eed\u5185\u5b58\u5730\u5740\u6784\u9020 endpoint::zeroset \u6e05\u96f6 endpoint::af \u8bbe\u7f6e\u6216\u83b7\u53d6\u5730\u5740\u7c7b\u578b(\u65cf) endpoint::ip \u8bbe\u7f6e\u6216\u83b7\u53d6\u5b57\u7b26\u4e32\u5f62\u5f0fip endpoint::port \u8bbe\u7f6e\u6216\u83b7\u53d6\u7aef\u53e3 endpoint::addr_v4 \u8bbe\u7f6e\u6216\u83b7\u53d6IPv4\u5730\u5740 endpoint::is_global \u68c0\u67e5\u662f\u5426\u662f\u5168\u5c40\u5730\u5740 endpoint::len \u83b7\u53d6\u5730\u5740\u957f\u5ea6 endpoint::to_string \u5c06\u5730\u5740\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32 endpoint::format_to \u683c\u5f0f\u5316\u5730\u5740\u5230\u5b57\u7b26\u4e32"},{"location":"api/reference/endpoint-class/#endpointendpoint","title":"endpoint::endpoint","text":"<p>\u6784\u9020 <code>endpoint</code> \u5bf9\u8c61\u3002</p> <pre><code>endpoint::endpoint();\nendpoint::endpoint(const endpoint&amp; rhs);\nexplicit endpoint::endpoint(const addrinfo* ai);\nexplicit endpoint::endpoint(const sockaddr* sa);\nexplicit endpoint::endpoint(const char* str_ep);\nendpoint::endpoint(const char* ip, unsigned short port);\nendpoint::endpoint(uint32_t addrv4, unsigned short port);\nendpoint::endpoint(int family, const void* addr, unsigned short port);\n</code></pre>"},{"location":"api/reference/endpoint-class/#_4","title":"\u53c2\u6570","text":"<p>rhs \u6784\u9020endpoint\u7684\u53f3\u503c<code>endpoint</code>\u5bf9\u8c61</p> <p>ai \u6784\u9020endpoint\u7684addrinfo\u4fe1\u606f</p> <p>sa \u6784\u9020endpoint\u7684sockaddr\u4fe1\u606f</p> <p>str_ep \u5b57\u7b26\u4e32\u8868\u793a\u7684IP\u548c\u7aef\u53e3\u4fe1\u606f\uff0c\u683c\u5f0f\u4e3a <code>127.0.0.1:2022</code> \u6216 <code>[fe80::1]:2033</code></p> <p>ip \u6784\u9020endpoint\u7684IPv4\u6216IPv6\u5730\u5740\u5b57\u7b26\u4e32</p> <p>port \u6784\u9020endpoint\u7684\u7aef\u53e3</p> <p>addrv4 \u6784\u9020endpoint\u76844\u5b57\u8282\u65e0\u7b26\u53f7\u6574\u6570\u8868\u793a\u7684IPv4\u5730\u5740\u503c</p> <p>family \u6784\u9020endpoint\u7684\u5730\u5740\u7c7b\u578b</p> <p>addr \u6784\u9020endpoint\u5730\u5740\uff0c\u5730\u5740\u7c7b\u578b\u7531family\u51b3\u5b9a</p>"},{"location":"api/reference/endpoint-class/#endpointoperator-bool","title":"endpoint::operator bool","text":"<p>\u68c0\u67e5\u662f\u5426\u662f\u4e00\u4e2a\u6709\u6548\u5730\u5740\u3002</p> <pre><code>explicit operator bool() const;\n</code></pre>"},{"location":"api/reference/endpoint-class/#_5","title":"\u8fd4\u56de\u503c","text":"<p><code>true</code>: \u5730\u5740\u6709\u6548\uff0c <code>false</code>\uff1a\u5730\u5740\u65e0\u6548</p>"},{"location":"api/reference/endpoint-class/#endpointoperator","title":"endpoint::operator =","text":"<p>\u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u3002</p> <pre><code>endpoint&amp; operator=(const endpoint&amp; rhs) const;\n</code></pre>"},{"location":"api/reference/endpoint-class/#_6","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u5bf9\u8c61\u81ea\u8eab\u7684\u5f15\u7528\u3002</p>"},{"location":"api/reference/endpoint-class/#_7","title":"\u793a\u4f8b","text":"<pre><code>#include \"yasio/xxsocket.h\"\nint main() {\nyasio::endpoint ep(\"127.0.0.1\", 2021);\nyasio::endpoint ep1(\"127.0.0.1\", 2022);\nyasio::endpoint ep3{ep};\nep3 = ep1;\nreturn 0;\n}\n</code></pre>"},{"location":"api/reference/endpoint-class/#endpointoperator_1","title":"endpoint::operator &amp;","text":"<p>\u53d6\u5730\u5740\u8fd0\u7b97\u7b26\u91cd\u8f7d\u3002</p> <pre><code>sockaddr* operator&amp;();\nconst sockaddr* operator&amp;() const;\n</code></pre>"},{"location":"api/reference/endpoint-class/#_8","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56desockaddr*\u7c7b\u578b\uff0c\u53ef\u76f4\u63a5\u7528\u6237\u5e95\u5c42bsd socket API\u3002</p>"},{"location":"api/reference/endpoint-class/#_9","title":"\u6ce8\u610f","text":"<p>\u5982\u679c\u9700\u8981\u83b7\u53d6<code>ip::endpoint*</code>\u7c7b\u578b\u6307\u9488\uff0c\u8bf7\u4f7f\u7528<code>std::addressof</code>\u3002</p>"},{"location":"api/reference/endpoint-class/#_10","title":"\u793a\u4f8b","text":"<pre><code>#include \"yasio/xxsocket.h\"\nint main() {\nyasio::endpoint ep(\"127.0.0.1\", 2021);\nyasio::socket sock(AF_INET, SOCK_STREAM, 0);\n::connect(sock.native_handle(), &amp;ep, ep.len());\nreturn 0;\n}\n</code></pre>"},{"location":"api/reference/endpoint-class/#endpointas_is","title":"endpoint::as_is","text":"<p>\u7531\u5df2\u77e5\u5730\u5740\u4fe1\u606f\u6784\u9020\u3002</p> <pre><code>endpoint&amp; as_is(const endpoint&amp; rhs);\nendpoint&amp; as_is(const addrinfo* info);\nendpoint&amp; as_is(const sockaddr* addr);\nendpoint&amp; as_is(const char* str_ep);\n</code></pre>"},{"location":"api/reference/endpoint-class/#_11","title":"\u53c2\u6570","text":"<p>rhs \u5df2\u6709<code>endpoint</code>\u5bf9\u8c61</p> <p>info addrinfo*\u5730\u5740\u4fe1\u606f</p> <p>addr sockaddr*\u7c7b\u578b\u5730\u5740</p> <p>str_ep \u5b57\u7b26\u4e32\u8868\u793a\u7684IP\u548c\u7aef\u53e3\u4fe1\u606f\uff0c\u683c\u5f0f\u4e3a <code>127.0.0.1:2022</code> \u6216 <code>[fe80::1]:2033</code></p>"},{"location":"api/reference/endpoint-class/#_12","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u5bf9\u8c61\u81ea\u8eab\u7684\u5f15\u7528\u3002</p>"},{"location":"api/reference/endpoint-class/#endpointas_in","title":"endpoint::as_in","text":"<p>\u7531\u5730\u5740\u7c7b\u578b\u3001\u5730\u5740\u548c\u7aef\u53e3\u53c2\u6570\u6784\u9020\u3002</p> <pre><code>endpoint&amp; as_in(int family, const void* addr_in, u_short port);\nendpoint&amp; as_in(const char* addr, unsigned short port);\nendpoint&amp; as_in(uint32_t addrv4, u_short port);\n</code></pre>"},{"location":"api/reference/endpoint-class/#_13","title":"\u53c2\u6570","text":"<p>family \u5730\u5740\u7c7b\u578b</p> <p>addr_in in\u5730\u5740\uff0c\u7c7b\u578b\u7531\u53c2\u6570<code>family</code>\u51b3\u5b9a</p> <p>addr \u5b57\u7b26\u4e32\u8868\u793a\u7684IPv4\u6216IPv4\u5730\u5740</p> <p>addrv4 4\u5b57\u8282\u65e0\u7b26\u53f7\u6574\u6570\u8868\u793a\u7684IPv4\u5730\u5740</p> <p>port \u7aef\u53e3\u53f7</p>"},{"location":"api/reference/endpoint-class/#_14","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u5bf9\u8c61\u81ea\u8eab\u7684\u5f15\u7528\u3002</p>"},{"location":"api/reference/endpoint-class/#endpointas_un","title":"endpoint::as_un","text":"<p>\u6784\u9020\u4e3aUnix domain socket\u7684endpoint\uff0c\u5f53\u7f16\u8bd1\u5668\u5b8f <code>YASIO_ENABLE_UDS</code> \u5b9a\u4e49\u65f6\u53ef\u7528\u3002</p> <pre><code>endpoint&amp; as_un(const char* name);\n</code></pre>"},{"location":"api/reference/endpoint-class/#_15","title":"\u53c2\u6570","text":"<p>name Unix domain socket\u672c\u5730\u78c1\u76d8\u8def\u5f84\uff0c\u4e0d\u80fd\u8d85\u8fc7<code>sizeof(sockaddr::sun_path)</code></p>"},{"location":"api/reference/endpoint-class/#_16","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u5bf9\u8c61\u81ea\u8eab\u7684\u5f15\u7528\u3002</p>"},{"location":"api/reference/endpoint-class/#endpointas_is_raw","title":"endpoint::as_is_raw","text":"<p>\u7531\u5df2\u77e5\u5730\u5740\u4fe1\u606f\u6784\u9020\u3002</p> <pre><code>endpoint&amp; as_is_raw(const void* ai_addr, size_t ai_addrlen);\n</code></pre>"},{"location":"api/reference/endpoint-class/#_17","title":"\u53c2\u6570","text":"<p>ai_addr \u5730\u5740\u6307\u9488</p> <p>ai_addrlen \u5730\u5740\u957f\u5ea6</p>"},{"location":"api/reference/endpoint-class/#_18","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u5bf9\u8c61\u81ea\u8eab\u7684\u5f15\u7528\u3002</p>"},{"location":"api/reference/endpoint-class/#endpointzeroset","title":"endpoint::zeroset","text":"<p>\u6e05\u7a7a\u5730\u5740\u3002</p> <pre><code>void zeroset();\n</code></pre>"},{"location":"api/reference/endpoint-class/#endpointaf","title":"endpoint::af","text":"<p>\u8bbe\u7f6e\u6216\u83b7\u53d6endpoint\u7684\u5730\u5740\u7c7b\u578b\u3002</p> <pre><code>void af(int v);\nint af() const;\n</code></pre>"},{"location":"api/reference/endpoint-class/#_19","title":"\u53c2\u6570","text":"<p>v \u5730\u5740\u7c7b\u578b\uff1a \u53d6\u503c <code>AF_INET</code>\u3001<code>AF_INET6</code></p>"},{"location":"api/reference/endpoint-class/#_20","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u5730\u5740\u7c7b\u578b\u3002</p>"},{"location":"api/reference/endpoint-class/#endpointip","title":"endpoint::ip","text":"<p>\u8bbe\u7f6e\u6216\u83b7\u53d6ip\u5b57\u7b26\u4e32\u3002</p> <pre><code>void ip(const char* v);\nstd::string ip() const;\n</code></pre>"},{"location":"api/reference/endpoint-class/#_21","title":"\u53c2\u6570","text":"<p>v \u5b57\u7b26\u4e32\u8868\u793a\u7684IPv4\u6216IPv6\u5730\u5740\uff0c\u4f8b\u5982: 127.0.0.1\u3001fe80::1</p>"},{"location":"api/reference/endpoint-class/#_22","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u5b57\u7b26\u4e32\u8868\u793a\u7684IPv4\u6216IPv6\u5730\u5740\u3002</p>"},{"location":"api/reference/endpoint-class/#endpointport","title":"endpoint::port","text":"<p>\u8bbe\u7f6e\u6216\u83b7\u53d6\u7aef\u53e3\u53f7\u3002</p> <pre><code>void port(u_short v);\nu_short port() const;\n</code></pre>"},{"location":"api/reference/endpoint-class/#_23","title":"\u53c2\u6570","text":"<p>v \u7aef\u53e3\u53f7</p>"},{"location":"api/reference/endpoint-class/#_24","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u7aef\u53e3\u53f7\u3002</p>"},{"location":"api/reference/endpoint-class/#endpointaddr_v4","title":"endpoint::addr_v4","text":"<p>\u8bbe\u7f6e\u6216\u83b7\u53d64\u5b57\u8282\u65e0\u7b26\u53f7\u6574\u6570\u8868\u793a\u7684IPv4\u5730\u5740\u3002</p> <pre><code>void addr_v4(uint32_t addr);\nuint32_t addr_v4() const;\n</code></pre>"},{"location":"api/reference/endpoint-class/#_25","title":"\u53c2\u6570","text":"<p>addr <code>uint32_t</code> \u8868\u793a\u7684IPv4\u5730\u5740\uff0c\u4f1a\u5c06 <code>endpoint</code> \u7684\u5730\u5740\u7c7b\u578b\u4fee\u6539\u4e3a <code>AF_INET</code>\u3002</p>"},{"location":"api/reference/endpoint-class/#_26","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de4\u5b57\u8282\u65e0\u7b26\u53f7\u6574\u6570\u8868\u793a\u7684IPv4\u5730\u5740\uff0c\u5982\u679c\u5730\u5740\u7c7b\u578b\u4e0d\u662fIPv4\u5219\u8fd4\u56de<code>0</code></p>"},{"location":"api/reference/endpoint-class/#endpointlen","title":"endpoint::len","text":"<p>\u8bbe\u7f6e\u6216\u83b7\u53d6\u5730\u5740\u957f\u5ea6\u3002</p> <pre><code>void len(int n);\nint len() const;\n</code></pre>"},{"location":"api/reference/endpoint-class/#_27","title":"\u53c2\u6570","text":"<p>n \u5730\u5740\u957f\u5ea6</p>"},{"location":"api/reference/endpoint-class/#_28","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u5730\u5740\u957f\u5ea6\u3002</p>"},{"location":"api/reference/endpoint-class/#endpointis_global","title":"endpoint::is_global","text":"<p>\u5224\u65ad\u5730\u5740\u662f\u5426\u4e3a\u5168\u5c40\u5730\u5740\uff0c\u975e\u56de\u73af\u5730\u5740\u3002</p> <pre><code>bool is_global() const;\n</code></pre>"},{"location":"api/reference/endpoint-class/#_29","title":"\u8fd4\u56de\u503c","text":"<p><code>true</code>: \u5168\u5c40\u5730\u5740\uff0c<code>false</code>: \u672c\u673a\u56de\u73af\u5730\u5740\u3002</p>"},{"location":"api/reference/endpoint-class/#endpointto_string","title":"endpoint::to_string","text":"<p>\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u3002</p> <pre><code>std::string to_string(int flags = endpoint::fmt_default) const;\n</code></pre>"},{"location":"api/reference/endpoint-class/#_30","title":"\u53c2\u6570","text":"<p>flags \u683c\u5f0f\u5316\u6807\u5fd7\u4f4d\uff0c\u8be6\u89c1: endpoint::fmt_xxx</p>"},{"location":"api/reference/endpoint-class/#_31","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u5b57\u7b26\u4e32\u8868\u793a\u7684IPv4\u6216IPv6\u5730\u5740\uff0c\u662f\u5426\u5305\u542b\u7aef\u53e3\u53d6\u51b3\u4e8e\u53c2\u6570<code>flags</code>\u3002</p>"},{"location":"api/reference/endpoint-class/#endpointformat_to","title":"endpoint::format_to","text":"<p>\u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u3002</p> <pre><code>size_t format_to(std::string&amp; buf, int flags = 0) const;\nsize_t format_to(char* buf, size_t buf_len, int flags) const;\n</code></pre>"},{"location":"api/reference/endpoint-class/#_32","title":"\u53c2\u6570","text":"<p>buf \u683c\u5f0f\u5316\u76ee\u6807\u7f13\u51b2\u533a\u3002</p> <p>buf_len \u683c\u5f0f\u5316\u76ee\u6807\u7f13\u51b2\u533a\u5927\u5c0f\uff0c\u5fc5\u987b\u786e\u4fdd\u5927\u4e8e <code>endpoint::max_fmt_len</code>\u3002</p> <p>flags \u683c\u5f0f\u5316\u6807\u5fd7\u4f4d\uff0c\u8be6\u89c1: endpoint::fmt_xxx</p>"},{"location":"api/reference/endpoint-class/#_33","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u5b57\u7b26\u4e32\u8868\u793a\u7684IPv4\u6216IPv6\u5730\u5740\uff0c\u662f\u5426\u5305\u542b\u7aef\u53e3\u53d6\u51b3\u4e8e\u53c2\u6570<code>flags</code>\u3002</p>"},{"location":"api/reference/endpoint-class/#endpointfmt_xxx","title":"endpoint::fmt_xxx","text":"<p>\u5730\u5740\u683c\u5f0f\u5316\u6807\u5fd7\u4f4d\u679a\u4e3e\u503c</p> <pre><code>struct endpoint {\nenum\n{\nfmt_no_local   = 1,\nfmt_no_port    = 2,\nfmt_no_port_0  = 4,\nfmt_no_un_path = 8,\nfmt_default    = fmt_no_port_0 | fmt_no_un_path,\n};\n}\n</code></pre> <ul> <li>fmt_no_local: \u5ffd\u7565\u56de\u73af\u5730\u5740</li> <li>fmt_no_port: \u5ffd\u7565\u7aef\u53e3</li> <li>fmt_no_port_0: \u5ffd\u75650\u7aef\u53e3</li> <li>fmt_no_un_path: \u5ffd\u7565unix path</li> <li>fmt_default: \u5ffd\u75650\u7aef\u53e3\u548cunix path</li> </ul>"},{"location":"api/reference/ibstream-class/","title":"ibstream_view Class","text":"<p>\u63d0\u4f9b\u4e8c\u8fdb\u5236\u53cd\u5e8f\u5217\u5316\u529f\u80fd\u3002</p> <p>\u6ce8\u610f</p> <p>\u5728\u53cd\u5e8f\u5217\u5316\u8fc7\u7a0b\u4e2d\uff0c\u5f53\u5269\u4f59\u6570\u636e\u4e0d\u8db3\u65f6\u4f1a\u629b\u51fa <code>std::out_of_range</code> \u5f02\u5e38\u3002</p>"},{"location":"api/reference/ibstream-class/#_1","title":"\u8bed\u6cd5","text":"<pre><code>namespace yasio { // \u53cd\u5e8f\u5217\u5316\u8fc7\u7a0b\uff0c\u4f1a\u81ea\u52a8\u8f6c\u6362\u5b57\u8282\u5e8f\uff0c\u9002\u7528\u4e8e\u7f51\u7edc\u4f20\u8f93\nusing ibstream_view = basic_ibstream_view&lt;endian::network_convert_tag&gt;; // \u53cd\u5e8f\u5217\u5316\u8fc7\u7a0b\uff0c\u65e0\u5b57\u8282\u5e8f\u8f6c\u6362\uff0c\u6027\u80fd\u66f4\u5feb\nusing fast_ibstream_view = basic_ibstream_view&lt;endian::host_convert_tag&gt;;\n}\n</code></pre>"},{"location":"api/reference/ibstream-class/#_2","title":"\u6210\u5458","text":""},{"location":"api/reference/ibstream-class/#_3","title":"\u516c\u5171\u6784\u9020","text":"Name Description ibstream_view::ibstream_view \u6784\u90201\u4e2a <code>ibstream_view</code> \u5bf9\u8c61"},{"location":"api/reference/ibstream-class/#_4","title":"\u516c\u5171\u65b9\u6cd5","text":"Name Description ibstream_view::reset \u91cd\u7f6e\u5f85\u53cd\u5e8f\u5217\u5316\u6570\u636e ibstream_view::read \u51fd\u6570\u6a21\u677f\uff0c\u8bfb\u53d6\u6570\u503c ibstream_view:read_ix \u51fd\u6570\u6a21\u677f\uff0c\u8bfb\u53d6(7bit Encoded Int/Int64)\u6574\u6570\u503c ibstream_view:read_v \u8bfb\u53d6\u5e26\u957f\u5ea6\u57df(7bit Encoded Int/Int64)\u7684\u4e8c\u8fdb\u5236\u6570\u636e ibstream_view:read_byte \u8bfb\u53d61\u4e2a\u5b57\u8282 ibstream_view:read_bytes \u8bfb\u53d6\u6307\u5b9a\u957f\u5ea6\u4e8c\u8fdb\u5236\u6570\u636e ibstream_view::empty \u68c0\u67e5\u6d41\u662f\u5426\u4e3a\u7a7a ibstream_view::data \u83b7\u53d6\u6d41\u6570\u636e\u6307\u9488 ibstream_view::length \u83b7\u53d6\u6d41\u5927\u5c0f ibstream_view::advance \u5411\u524d\u79fb\u52a8\u6d41\u7684\u8bfb\u53d6\u6e38\u6807 ibstream_view::seek \u79fb\u52a8\u6d41\u7684\u8bfb\u53d6\u6e38\u6807"},{"location":"api/reference/ibstream-class/#_5","title":"\u6ce8\u610f","text":"<p><code>ibstream_view</code> \u501f\u9274C++17\u6807\u51c6\u7684 <code>std::string_view</code>, \u610f\u5473\u7740\u5728\u521d\u59cb\u5316\u548c\u53cd\u5e8f\u5217\u5316\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u4ea7\u751f\u4efb\u4f55GC\u3002</p>"},{"location":"api/reference/ibstream-class/#_6","title":"\u8981\u6c42","text":"<p>\u5934\u6587\u4ef6: ibstream.hpp</p>"},{"location":"api/reference/ibstream-class/#ibstream_viewibstream_view","title":"ibstream_view::ibstream_view","text":"<p>\u6784\u9020\u4e00\u4e2a <code>ibstream_view</code> \u5bf9\u8c61\u3002</p> <pre><code>ibstream_view();\nibstream_view(const void* data, size_t size);\nibstream_view(const obstream* obs);\n</code></pre>"},{"location":"api/reference/ibstream-class/#_7","title":"\u53c2\u6570","text":"<p>data \u5f85\u53cd\u5e8f\u5217\u5316\u4e8c\u8fdb\u5236\u6570\u636e\u9996\u5730\u5740\u3002</p> <p>size \u5f85\u53cd\u5e8f\u5217\u5316\u4e8c\u8fdb\u5236\u6570\u636e\u5927\u5c0f\u3002</p> <p>obs \u5df2\u5e8f\u5217\u5316\u7684\u6d41\u3002</p>"},{"location":"api/reference/ibstream-class/#ibstream_viewreset","title":"ibstream_view::reset","text":"<p>\u91cd\u7f6e <code>ibstream_view</code> \u7f13\u51b2\u89c6\u56fe\u3002</p> <pre><code>void ibstream_view::reset(const void* data, size_t size);\n</code></pre>"},{"location":"api/reference/ibstream-class/#_8","title":"\u53c2\u6570","text":"<p>data \u5f85\u53cd\u5e8f\u5217\u5316\u4e8c\u8fdb\u5236\u6570\u636e\u9996\u5730\u5740\u3002</p> <p>size \u5f85\u53cd\u5e8f\u5217\u5316\u4e8c\u8fdb\u5236\u6570\u636e\u5927\u5c0f\u3002</p>"},{"location":"api/reference/ibstream-class/#ibstream_viewread","title":"ibstream_view::read","text":"<p>\u4ece\u6d41\u4e2d\u8bfb\u53d6\u6570\u503c\u3002</p> <pre><code>template&lt;typename _Nty&gt;\n_Nty ibstream_view::read();\n</code></pre>"},{"location":"api/reference/ibstream-class/#_9","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u8bfb\u5230\u7684\u503c</p>"},{"location":"api/reference/ibstream-class/#_10","title":"\u6ce8\u610f","text":"<p>_Nty \u5b9e\u9645\u7c7b\u578b\u53ef\u4ee5\u662f\u4efb\u610f1~8\u5b57\u8282\u6574\u6570\u7c7b\u578b\u6216\u6d6e\u70b9\u7c7b\u578b\u3002</p>"},{"location":"api/reference/ibstream-class/#ibstream_viewread_ix","title":"ibstream_view::read_ix","text":"<p>\u8bfb\u53d67Bit Encoded Int\u538b\u7f29\u7f16\u7801\u7684\u6574\u6570\u503c\u3002</p> <pre><code>template&lt;typename _Intty&gt;\n_Intty ibstream_view::read_ix();\n</code></pre>"},{"location":"api/reference/ibstream-class/#_11","title":"\u8fd4\u56de\u503c","text":"<p>32/64\u4f4d\u6574\u6570\u503c\u3002</p>"},{"location":"api/reference/ibstream-class/#_12","title":"\u6ce8\u610f","text":"<p>_Intty \u7684\u5fc5\u987b\u662f\u4ee5\u4e0b\u7c7b\u578b</p> <ul> <li>int32_t</li> <li>int64_t</li> </ul> <p>\u672c\u51fd\u6570\u517c\u5bb9\u4e8e Microsoft dotnet \u5982\u4e0b\u51fd\u6570</p> <ul> <li>BinaryReader.Read7BitEncodedInt()</li> <li>BinaryReader.Read7BitEncodedInt64()</li> </ul>"},{"location":"api/reference/ibstream-class/#ibstream_viewread_v","title":"ibstream_view::read_v","text":"<p>\u8bfb\u53d6\u53d8\u957f\u4e8c\u8fdb\u5236\u6570\u636e\u3002</p> <pre><code>cxx17::string_view read_v();\n</code></pre>"},{"location":"api/reference/ibstream-class/#_13","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u8bfb\u53d6\u5230\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u89c6\u56fe\uff0c\u65e0GC\u3002</p>"},{"location":"api/reference/ibstream-class/#_14","title":"\u6ce8\u610f","text":"<p>\u672c\u51fd\u6570\u4f1a\u5148\u8bfb\u53d67bit Encoded Int\u538b\u7f29\u7f16\u7801\u7684\u957f\u5ea6\u503c\uff0c\u518d\u8c03\u7528 read_bytes \u8bfb\u53d6\u4e8c\u8fdb\u5236\u5b57\u8282\u6570\u636e\u3002</p>"},{"location":"api/reference/ibstream-class/#ibstream_viewread_byte","title":"ibstream_view::read_byte","text":"<p>\u8bfb\u53d61\u4e2a\u5b57\u8282\u3002</p> <pre><code>uint8_t read_byte();\n</code></pre>"},{"location":"api/reference/ibstream-class/#_15","title":"\u8fd4\u56de\u503c","text":"<p>uint8_t\u503c\u3002</p>"},{"location":"api/reference/ibstream-class/#_16","title":"\u6ce8\u610f","text":"<p>\u672c\u51fd\u6570\u7b49\u4ef7\u4e8e <code>ibstream_view::read&lt;uint8_t&gt;</code></p>"},{"location":"api/reference/ibstream-class/#ibstream_viewread_bytes","title":"ibstream_view::read_bytes","text":"<p>\u8bfb\u53d6\u6307\u5b9a\u957f\u5ea6\u5b57\u8282\u6570\u636e\uff0c\u65e0GC\u3002</p> <pre><code>cxx17::string_view read_bytes();\n</code></pre>"},{"location":"api/reference/ibstream-class/#_17","title":"\u8fd4\u56de\u503c","text":"<p>\u4e8c\u8fdb\u5236\u6570\u636e\u7684 <code>cxx17::string_view</code> \u7c7b\u578b\u89c6\u56fe\u3002</p>"},{"location":"api/reference/ibstream-class/#ibstream_viewempty","title":"ibstream_view::empty","text":"<p>\u5224\u65ad\u6d41\u662f\u5426\u4e3a\u7a7a\u3002</p> <pre><code>bool empty() const;\n</code></pre>"},{"location":"api/reference/ibstream-class/#_18","title":"\u8fd4\u56de\u503c","text":"<p><code>true</code> \u7a7a; <code>false</code> \u6d41\u4e2d\u81f3\u5c11\u5305\u542b1\u4e2a\u5b57\u8282\u3002</p>"},{"location":"api/reference/ibstream-class/#_19","title":"\u6ce8\u610f","text":"<p>\u6b64\u65b9\u6cd5\u7b49\u4ef7\u4e8e length == 0\u3002</p>"},{"location":"api/reference/ibstream-class/#ibstream_viewdata","title":"ibstream_view::data","text":"<p>\u8fd4\u56de\u6d41\u6570\u636e\u6307\u9488\u3002</p> <pre><code>const char* data() const;\n</code></pre>"},{"location":"api/reference/ibstream-class/#_20","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u6307\u5411\u6d41\u4e2d\u7b2c\u4e00\u4e2a\u5b57\u8282\u7684\u6307\u9488\u3002</p>"},{"location":"api/reference/ibstream-class/#ibstream_viewlength","title":"ibstream_view::length","text":"<p>\u83b7\u53d6\u6d41\u957f\u5ea6\u3002</p> <pre><code>size_t length() const;\n</code></pre>"},{"location":"api/reference/ibstream-class/#_21","title":"\u8fd4\u56de\u503c","text":"<p>\u5f53\u524d\u6d41\u957f\u5ea6\u3002</p>"},{"location":"api/reference/ibstream-class/#ibstream_viewadvance","title":"ibstream_view::advance","text":"<p>\u5411\u524d\u79fb\u52a8\u6d41\u8bfb\u53d6\u6e38\u6807\u3002</p> <pre><code>void advance(ptrdiff_t offset);\n</code></pre>"},{"location":"api/reference/ibstream-class/#_22","title":"\u53c2\u6570","text":"<p>offset \u8981\u5411\u524d\u79fb\u52a8\u7684\u504f\u79fb\u91cf\u3002</p>"},{"location":"api/reference/ibstream-class/#_23","title":"\u6ce8\u610f","text":"<p>\u82e5*offset*\u4f20\u8d1f\u6570\uff0c\u5219\u53cd\u5411\u53ef\u79fb\u52a8\u8bfb\u53d6\u6e38\u6807\u3002</p>"},{"location":"api/reference/ibstream-class/#ibstream_viewseek","title":"ibstream_view::seek","text":"<p>\u79fb\u52a8\u8bfb\u53d6\u6e38\u6807\u3002</p> <pre><code>ptrdiff_t seek(ptrdiff_t offset, int whence);\n</code></pre>"},{"location":"api/reference/ibstream-class/#_24","title":"\u53c2\u6570","text":"<p>offset \u548c*whence*\u76f8\u5173\u7684\u504f\u79fb\u91cf\u3002</p> <p>whence \u542b\u4e49\u7b49\u540c\u4e8eC\u6807\u51c6\u5e93\u679a\u4e3e\u503c\uff1a <code>SEEK_SET</code>,<code>SEEK_CUR</code>,<code>SEEK_END</code>\u3002</p>"},{"location":"api/reference/ibstream-class/#_25","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u79fb\u52a8\u540e\u76f8\u5bf9\u4e8e\u6d41\u9996\u5b57\u8282\u504f\u79fb\u3002</p>"},{"location":"api/reference/ibstream-class/#ibstream-class","title":"ibstream Class","text":"<p>\u63d0\u4f9b\u4e8c\u8fdb\u5236\u6570\u636e\u52a0\u8f7d\u548c\u53cd\u5e8f\u5217\u5316\u529f\u80fd\u3002</p>"},{"location":"api/reference/ibstream-class/#_26","title":"\u8bed\u6cd5","text":"<pre><code>namespace yasio { using ibstream = basic_ibstream&lt;endian::network_convert_tag&gt;; // \u53cd\u5e8f\u5217\u5316\u8fc7\u7a0b\uff0c\u65e0\u5b57\u8282\u5e8f\u8f6c\u6362\uff0c\u6027\u80fd\u66f4\u5feb\nusing fast_ibstream = basic_ibstream&lt;endian::host_convert_tag&gt;; }\n</code></pre>"},{"location":"api/reference/ibstream-class/#_27","title":"\u6210\u5458","text":""},{"location":"api/reference/ibstream-class/#_28","title":"\u516c\u5171\u6784\u9020\u51fd\u6570","text":"Name Description ibstream::ibstream \u6784\u90201\u4e2a <code>ibstream</code> \u5bf9\u8c61"},{"location":"api/reference/ibstream-class/#_29","title":"\u516c\u5171\u65b9\u6cd5","text":"Name Description ibstream::load \u4ece\u6587\u4ef6\u52a0\u8f7d\u6d41"},{"location":"api/reference/ibstream-class/#_30","title":"\u7ee7\u627f\u5c42\u6b21\u7ed3\u6784","text":"<p>ibstream_view</p> <p><code>ibstream</code></p>"},{"location":"api/reference/ibstream-class/#ibstreamibstream","title":"ibstream::ibstream","text":"<p>\u6784\u9020\u4e00\u4e2a <code>ibstream</code> \u5bf9\u8c61\u3002</p> <pre><code>ibstream(yasio::sbyte_buffer blob);\nibstream(const obstream* obs);\n</code></pre>"},{"location":"api/reference/ibstream-class/#_31","title":"\u53c2\u6570","text":"<p>blob \u8f93\u5165\u4e8c\u8fdb\u5236\u6d41\u3002</p> <p>obs \u5df2\u5e8f\u5217\u5316\u7684 <code>obstream</code> \u5bf9\u8c61\u3002</p>"},{"location":"api/reference/ibstream-class/#ibstreamload","title":"ibstream::load","text":"<p>\u4ece\u6587\u4ef6\u52a0\u8f7d.</p> <pre><code>bool load(const char* filename) const;\n</code></pre>"},{"location":"api/reference/ibstream-class/#_32","title":"\u8fd4\u56de\u503c","text":"<p><code>true</code> \u52a0\u8f7d\u6210\u529f\uff0c<code>false</code> \u52a0\u8f7d\u5931\u8d25\u3002</p>"},{"location":"api/reference/ibstream-class/#_33","title":"\u793a\u4f8b","text":"<p>\u8bf7\u67e5\u770b obstream::save</p>"},{"location":"api/reference/ibstream-class/#_34","title":"\u8bf7\u53c2\u9605","text":"<p>obstream Class</p> <p>io_service Class</p>"},{"location":"api/reference/io_channel-class/","title":"io_channel Class","text":"<p>\u8d1f\u8d23\u7ba1\u7406 TCP/SSL/UDP/KCP \u8fde\u63a5\u548c\u4f20\u8f93\u4f1a\u8bdd\u3002</p>"},{"location":"api/reference/io_channel-class/#_1","title":"\u8bed\u6cd5","text":"<pre><code>namespace yasio { inline namespace inet { class io_channel; } }\n</code></pre>"},{"location":"api/reference/io_channel-class/#_2","title":"\u6210\u5458","text":""},{"location":"api/reference/io_channel-class/#_3","title":"\u516c\u5171\u65b9\u6cd5","text":"Name Description io_channel::get_service \u83b7\u53d6\u7ba1\u7406\u4fe1\u9053\u7684io_service io_channel::index \u83b7\u53d6\u4fe1\u9053\u7d22\u5f15 io_channel::remote_port \u83b7\u53d6\u4fe1\u9053\u8fdc\u7a0b\u7aef\u53e3 io_channel::bytes_transferred \u83b7\u53d6\u4f20\u8f93\u5b57\u8282\u6570 io_channel::connect_id \u83b7\u53d6\u8fde\u63a5ID"},{"location":"api/reference/io_channel-class/#_4","title":"\u6ce8\u610f","text":"<p>\u5f53io_service\u5bf9\u8c61\u6784\u9020\u540e\uff0c\u6700\u5927\u4fe1\u9053\u6570\u91cf\u4e0d\u53ef\u6539\u53d8\uff0c  \u4fe1\u9053\u53e5\u67c4\u53ef\u901a\u8fc7 <code>io_service::channel_at</code> \u83b7\u53d6\u3002</p>"},{"location":"api/reference/io_channel-class/#io_channelget_service","title":"io_channel::get_service","text":"<p>\u83b7\u53d6\u7ba1\u7406\u4fe1\u9053\u7684io_service\u5bf9\u8c61\u3002</p> <pre><code>io_service&amp; get_service()\n</code></pre>"},{"location":"api/reference/io_channel-class/#io_channelindex","title":"io_channel::index","text":"<p>\u83b7\u53d6\u4fe1\u9053\u7d22\u5f15\u3002</p> <pre><code>int index() const\n</code></pre>"},{"location":"api/reference/io_channel-class/#io_channelremote_port","title":"io_channel::remote_port","text":"<p>\u83b7\u53d6\u4fe1\u9053\u8fdc\u7a0b\u7aef\u53e3.</p> <pre><code>u_short remote_port() const;\n</code></pre>"},{"location":"api/reference/io_channel-class/#_5","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u4fe1\u9053\u8fdc\u7a0b\u7aef\u53e3\u53f7</p> <ul> <li>\u5bf9\u4e8e\u5ba2\u6237\u7aef\u4fe1\u9053\u8868\u793a\u901a\u4fe1\u7684\u8fdc\u7aef\u7aef\u53e3 </li> <li>\u5bf9\u4e8e\u670d\u52a1\u7aef\u4fe1\u9053\u8868\u793a\u76d1\u542c\u7aef\u53e3</li> </ul>"},{"location":"api/reference/io_channel-class/#io_channelbytes_transferred","title":"io_channel::bytes_transferred","text":"<p>\u83b7\u53d6\u5ba2\u6237\u7aef\u63a5\u6536\u603b\u5b57\u8282\u6570</p> <pre><code>long long bytes_transferred() const;\n</code></pre>"},{"location":"api/reference/io_channel-class/#_6","title":"\u8fd4\u56de\u503c","text":"<p>\u4ece\u8fde\u63a5\u5efa\u7acb\u5f00\u59cb\u5230\u5f53\u524d\uff0c\u63a5\u6536\u603b\u5b57\u8282\u6570\uff0c\u7528\u4e8e\u7edf\u8ba1\u5ba2\u6237\u7aef\u63a5\u6536\u6d41\u91cf</p>"},{"location":"api/reference/io_channel-class/#io_channelconnect_id","title":"io_channel::connect_id","text":"<p>\u83b7\u53d6\u5ba2\u6237\u7aef\u4fe1\u9053\u9012\u589e\u7684\u5b9e\u65f6\u8fde\u63a5id</p> <pre><code>unsigned int connect_id() const;\n</code></pre>"},{"location":"api/reference/io_channel-class/#_7","title":"\u8fd4\u56de\u503c","text":"<p>\u5ba2\u6237\u7aef\u4fe1\u9053\u5f53\u524d\u8fde\u63a5id</p>"},{"location":"api/reference/io_channel-class/#_8","title":"\u8bf7\u53c2\u9605","text":"<p>io_service Class</p> <p>io_event Class</p>"},{"location":"api/reference/io_event-class/","title":"io_event Class","text":"<p>\u7f51\u7edc\u4e8b\u4ef6\u7531 io_service \u7ebf\u7a0b\u4ea7\u751f\u3002</p>"},{"location":"api/reference/io_event-class/#_1","title":"\u8bed\u6cd5","text":"<pre><code>namespace yasio { inline namespace inet { class io_event; } }\n</code></pre>"},{"location":"api/reference/io_event-class/#_2","title":"\u6210\u5458","text":""},{"location":"api/reference/io_event-class/#_3","title":"\u516c\u5171\u65b9\u6cd5","text":"Name Description io_event::kind \u83b7\u53d6\u4e8b\u4ef6\u7c7b\u578b io_event::status \u83b7\u53d6\u4e8b\u4ef6\u72b6\u6001 io_event::passive \u68c0\u67e5\u662f\u5426\u662f\u88ab\u52a8\u4e8b\u4ef6 io_event::packet \u83b7\u53d6\u4e8b\u4ef6\u6d88\u606f\u5305 io_event::packet_view \u83b7\u53d6\u4e8b\u4ef6\u6d88\u606f\u5305view io_event::timestamp \u83b7\u53d6\u4e8b\u4ef6\u65f6\u95f4\u6233 io_event::transport \u83b7\u53d6\u4e8b\u4ef6\u4f20\u8f93\u4f1a\u8bdd io_event::transport_id \u83b7\u53d6\u4e8b\u4ef6\u4f20\u8f93\u4f1a\u8bddID io_event::transport_ud \u8bbe\u7f6e\u6216\u83b7\u53d6\u4e8b\u4ef6\u4f20\u8f93\u4f1a\u8bdd\u7528\u6237\u6570\u636e"},{"location":"api/reference/io_event-class/#io_eventkind","title":"io_event::kind","text":"<p>\u83b7\u53d6\u4e8b\u4ef6\u7c7b\u578b\u3002</p> <pre><code>int kind() const;\n</code></pre>"},{"location":"api/reference/io_event-class/#_4","title":"\u8fd4\u56de\u503c","text":"<p>\u4e8b\u4ef6\u7c7b\u578b\uff0c\u53ef\u4ee5\u662f\u4ee5\u4e0b\u503c:</p> <ul> <li><code>YEK_ON_PACKET</code>: \u6d88\u606f\u4e8b\u4ef6</li> <li><code>YEK_ON_OPEN</code>: \u6253\u5f00\u4e8b\u4ef6\uff0c\u5bf9\u4e8e\u5ba2\u6237\u7aef\u4fe1\u9053\uff0c\u4ee3\u8868\u8fde\u63a5\u54cd\u5e94</li> <li><code>YEK_ON_CLOSE</code>: \u5173\u95ed\u4e8b\u4ef6\uff0c\u5bf9\u4e8e\u5ba2\u6237\u7aef\u4fe1\u9053\uff0c\u4ee3\u8868\u8fde\u63a5\u4e22\u5931</li> </ul>"},{"location":"api/reference/io_event-class/#io_eventstatus","title":"io_event::status","text":"<p>\u83b7\u53d6\u4e8b\u4ef6\u72b6\u6001\u3002</p> <pre><code>int status() const;\n</code></pre>"},{"location":"api/reference/io_event-class/#_5","title":"\u8fd4\u56de\u503c","text":"<ul> <li>0: \u6b63\u5e38</li> <li>\u975e0: \u51fa\u9519, \u7528\u6237\u53ea\u9700\u8981\u7b80\u5355\u6253\u5370\u5373\u53ef\u3002</li> </ul>"},{"location":"api/reference/io_event-class/#io_eventpassive","title":"io_event::passive","text":"<p>\u68c0\u67e5\u662f\u5426\u662f\u88ab\u52a8\u4e8b\u4ef6</p> <pre><code>int passive() const\n</code></pre>"},{"location":"api/reference/io_event-class/#_6","title":"\u8fd4\u56de\u503c","text":"<ul> <li>0: \u975e\u88ab\u52a8\u4e8b\u4ef6\uff0c\u5305\u62ec\u5ba2\u6237\u7aef\u4fe1\u9053\u7684\u8fde\u63a5\u6253\u5f00\u3001\u5173\u95ed\u4e8b\u4ef6\u548c\u4f20\u8f93\u4f1a\u8bdd\u7684\u6d88\u606f\u4e8b\u4ef6\u3002</li> <li>1: open\u6216close\u670d\u52a1\u5668\u4fe1\u9053\u65f6\u4ea7\u751f\uff0c\u4ec5\u5f53\u6253\u5f00\u7f16\u8bd1\u914d\u7f6e<code>YASIO_ENABLE_PASSIVE_EVENT</code>\u624d\u4f1a\u4ea7\u751f\u3002 \u4e14\u4e3a\u4fdd\u6301\u517c\u5bb9\uff0c\u6b64\u884c\u4e3a\u9ed8\u8ba4\u662f\u5173\u95ed\u7684\u3002</li> </ul>"},{"location":"api/reference/io_event-class/#io_eventpacket","title":"io_event::packet","text":"<p>\u83b7\u53d6\u4e8b\u4ef6\u643a\u5e26\u7684\u6d88\u606f\u5305</p> <pre><code>yasio::sbyte_buffer&amp; packet()\n</code></pre>"},{"location":"api/reference/io_event-class/#_7","title":"\u8fd4\u56de\u503c","text":"<p>\u6d88\u606f\u6570\u636e\u7684view\u3002</p>"},{"location":"api/reference/io_event-class/#io_eventpacket_view","title":"io_event::packet_view","text":"<p>\u83b7\u53d6\u4e8b\u4ef6\u643a\u5e26\u7684\u6d88\u606f\u6570\u636eview\uff0c\u4ec5\u5f53io_service\u8bbe\u7f6e<code>YOPT_S_FORWARD_PACKET</code>\u65f6\u6709\u6548\u3002\u6b64\u6570\u636e\u5728\u4e8b\u4ef6\u56de\u8c03\u7ed3\u675f\u540e\u4f1a\u5931\u6548\uff0c\u4e1a\u52a1\u5e94\u53ca\u65f6\u4fdd\u5b58\u3002</p> <pre><code>packet_view_t packet_view()\n</code></pre>"},{"location":"api/reference/io_event-class/#_8","title":"\u8fd4\u56de\u503c","text":"<p>\u6d88\u606f\u5305\u7684\u5f15\u7528, \u7528\u6237\u53ef\u4ee5\u4f7f\u7528<code>std::move</code>\u65e0GC\u65b9\u5f0f\u4ece\u4e8b\u4ef6\u53d6\u8d70\u6d88\u606f\u5305\u3002</p>"},{"location":"api/reference/io_event-class/#io_eventtimestamp","title":"io_event::timestamp","text":"<p>\u83b7\u53d6\u4e8b\u4ef6\u4ea7\u751f\u7684\u5fae\u79d2\u7ea7\u65f6\u95f4\u6233\u3002</p> <pre><code>highp_time_t timestamp() const;\n</code></pre>"},{"location":"api/reference/io_event-class/#_9","title":"\u8fd4\u56de\u503c","text":"<p>\u548c\u7cfb\u7edf\u65f6\u95f4\u65e0\u5173\u7684\u5fae\u79d2\u7ea7\u65f6\u95f4\u6233\u3002</p>"},{"location":"api/reference/io_event-class/#io_eventtransport","title":"io_event::transport","text":"<p>\u83b7\u53d6\u4e8b\u4ef6\u7684\u4f20\u8f93\u4f1a\u8bdd\u53e5\u67c4\u3002</p> <pre><code>transport_handle_t transport() const;\n</code></pre>"},{"location":"api/reference/io_event-class/#_10","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u53e5\u67c4\uff0c\u5f53\u6536\u5230\u65ad\u5f00\u4e8b\u4ef6\u65f6\uff0c\u4f20\u8f93\u4f1a\u8bdd\u53e5\u67c4\u5df2\u5931\u6548\uff0c\u4ec5\u53ef\u7528\u4f5c\u5730\u5740\u503c\u6bd4\u8f83\u3002</p>"},{"location":"api/reference/io_event-class/#io_eventtransport_id","title":"io_event::transport_id","text":"<p>\u83b7\u53d6\u4e8b\u4ef6\u7684\u4f20\u8f93\u4f1a\u8bddID\u3002</p> <pre><code>unsigned int transport_id() const;\n</code></pre>"},{"location":"api/reference/io_event-class/#_11","title":"\u8fd4\u56de\u503c","text":"<p>32\u4f4d\u65e0\u7b26\u53f7\u6574\u6570\u8303\u56f4\u5185\u7684\u552f\u4e00ID\u3002</p>"},{"location":"api/reference/io_event-class/#io_eventtransport_ud","title":"io_event::transport_ud","text":"<p>\u8bbe\u7f6e\u6216\u83b7\u53d6\u4f20\u8f93\u4f1a\u8bdd\u7528\u6237\u6570\u636e\u3002</p> <pre><code>template&lt;typename _Uty&gt;\n_Uty io_event::transport_ud();\ntemplate&lt;typename _Uty&gt;\nvoid io_event::transport_ud(_Uty uservalue);\n</code></pre>"},{"location":"api/reference/io_event-class/#_12","title":"\u6ce8\u610f","text":"<p>\u7528\u6237\u9700\u8981\u81ea\u5df1\u7ba1\u7406 userdata \u7684\u5185\u5b58, \u4f8b\u5982:  </p> <ul> <li>\u6536\u5230\u8fde\u63a5\u5efa\u7acb\u6210\u529f\u4e8b\u4ef6\u65f6\u5b58\u50a8userdata</li> <li>\u6536\u5230\u8fde\u63a5\u4e22\u5931\u4e8b\u4ef6\u65f6\u6e05\u7406userdata</li> </ul>"},{"location":"api/reference/io_event-class/#_13","title":"\u8bf7\u53c2\u9605","text":"<p>io_service Class</p> <p>io_channel Class</p>"},{"location":"api/reference/io_service-class/","title":"io_service Class","text":"<p>\u5145\u5206\u5229\u7528 <code>socket.select</code> \u591a\u8def\u590d\u7528\u6a21\u578b\u5b9e\u73b0\u7f51\u7edc\u670d\u52a1\uff0c\u63d0\u4f9b\u7ed9\u4e0a\u5c42\u7edf\u4e00\u7684\u63a5\u53e3\u6765\u8fdb\u884c <code>tcp, udp, kcp, ssl-client</code> \u901a\u4fe1\u3002</p>"},{"location":"api/reference/io_service-class/#_1","title":"\u8bed\u6cd5","text":"<pre><code>namespace yasio { inline namespace inet { class io_service; } }\n</code></pre>"},{"location":"api/reference/io_service-class/#_2","title":"\u6210\u5458","text":""},{"location":"api/reference/io_service-class/#_3","title":"\u516c\u5171\u6784\u9020\u51fd\u6570","text":"Name Description io_service::io_service \u6784\u90201\u4e2a <code>io_service</code> \u5bf9\u8c61"},{"location":"api/reference/io_service-class/#_4","title":"\u516c\u5171\u65b9\u6cd5","text":"Name Description io_service::start \u542f\u52a8\u7f51\u7edc\u670d\u52a1 io_service::stop \u505c\u6b62\u7f51\u7edc\u670d\u52a1 io_service::is_running \u5224\u65ad\u7f51\u7edc\u670d\u52a1\u662f\u5426\u8fd0\u884c\u4e2d io_service::is_stopping \u5224\u65ad\u7f51\u7edc\u670d\u52a1\u662f\u5426\u505c\u6b62\u4e2d io_service::open \u6253\u5f00\u4fe1\u9053 io_service::close \u5173\u95ed\u4f20\u8f93\u4f1a\u8bdd io_service::is_open \u68c0\u6d4b\u4fe1\u9053\u6216\u4f1a\u8bdd\u662f\u5426\u6253\u5f00 io_service::dispatch \u5206\u6d3e\u7f51\u7edc\u4e8b\u4ef6 io_service::write \u5f02\u6b65\u53d1\u9001\u6570\u636e io_service::write_to \u5f02\u6b65\u53d1\u9001DGRAM\u6570\u636e io_service::schedule \u6ce8\u518c\u5b9a\u65f6\u5668 io_service::init_globals \u663e\u793a\u521d\u59cb\u5316\u5168\u5c40\u6570\u636e io_service::cleanup_globals \u6e05\u7406\u5168\u5c40\u6570\u636e io_service::channel_at \u83b7\u53d6\u4fe1\u9053\u53e5\u67c4 io_service::set_option \u8bbe\u7f6e\u9009\u9879"},{"location":"api/reference/io_service-class/#_5","title":"\u6ce8\u610f","text":"<p>\u9ed8\u8ba4\u4f20\u8f93\u4f1a\u8bdd\u7684\u521b\u5efa\u4f1a\u4f7f\u7528\u5bf9\u8c61\u6c60 <code>object_pool</code>\u3002</p>"},{"location":"api/reference/io_service-class/#_6","title":"\u8981\u6c42","text":"<p>\u5934\u6587\u4ef6: yasio.hpp</p>"},{"location":"api/reference/io_service-class/#io_serviceio_service","title":"io_service::io_service","text":"<p>\u6784\u9020 <code>io_service</code> \u5bf9\u8c61\u3002</p> <pre><code>io_service::io_service();\nio_service::io_service(int channel_count);\nio_service::io_service(const io_hostent&amp; channel_ep);\nio_service::io_service(const io_hostent* channel_eps, int channel_count);\n</code></pre>"},{"location":"api/reference/io_service-class/#_7","title":"\u53c2\u6570","text":"<p>channel_count \u4fe1\u9053\u6570\u91cf\u3002</p> <p>channel_ep \u4fe1\u9053\u8fdc\u7aef\u5730\u5740\u3002</p> <p>channel_eps \u4fe1\u9053\u8fdc\u7aef\u5730\u5740\u6570\u7ec4\u9996\u5730\u5740\u3002</p>"},{"location":"api/reference/io_service-class/#_8","title":"\u793a\u4f8b","text":"<pre><code>#include \"yasio/yasio.hpp\"\nint main() {\nusing namespace yasio;\nio_service s1; // s1 only support 1 channel\nio_service s2(5); // s2 support 5 channels concurrency\nio_service s3(io_hostent{\"github.com\", 443}); // s3 support 1 channel\nio_hostent hosts[] = {  {\"192.168.1.66\", 20336},\n{\"192.168.1.88\", 20337},\n};\nio_service s4(hosts, YASIO_ARRAYSIZE(hosts)); // s4 support 2 channels concurrency\nreturn 0;\n}\n</code></pre>"},{"location":"api/reference/io_service-class/#io_servicestart","title":"io_service::start","text":"<p>\u542f\u52a8\u7f51\u7edc\u670d\u52a1\u3002</p> <pre><code>void start(io_event_cb_t cb);\n</code></pre>"},{"location":"api/reference/io_service-class/#_9","title":"\u53c2\u6570","text":"<p>cb \u7f51\u7edc\u4e8b\u4ef6\u56de\u8c03\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5728 io_service::dispatch \u8c03\u7528\u8005\u7ebf\u7a0b\u8c03\u5ea6\u3002</p>"},{"location":"api/reference/io_service-class/#_10","title":"\u793a\u4f8b","text":"<pre><code>#include \"yasio/yasio.hpp\"\nint main() {\nusing namespace yasio;\nauto service = yasio_shared_service(io_hostent{host=\"ip138.com\", port=80});\nservice-&gt;start([](event_ptr&amp;&amp; ev) {\nauto kind = ev-&gt;kind();\nif (kind == YEK_ON_OPEN)\n{\nif (ev-&gt;status() == 0)\nprintf(\"[%d] connect succeed.\\n\", ev-&gt;cindex());\nelse\nprintf(\"[%d] connect failed!\\n\", ev-&gt;cindex());\n}\n});\nreturn 0;\n}\n</code></pre>"},{"location":"api/reference/io_service-class/#io_servicestop","title":"io_service::stop","text":"<p>\u505c\u6b62\u7f51\u7edc\u670d\u52a1\u3002</p> <pre><code>void stop()\n</code></pre>"},{"location":"api/reference/io_service-class/#_11","title":"\u6ce8\u610f","text":"<ul> <li>\u5f53\u5728\u975e\u7f51\u7edc\u670d\u52a1\u7ebf\u7a0b\u8c03\u7528\u6b64\u51fd\u6570\u65f6\uff0c\u4f1a\u7b49\u5f85\u670d\u52a1\u7ebf\u7a0b\u9000\u51fa\u5e76\u8fdb\u5165 <code>IDLE</code> \u72b6\u6001\uff0c\u6b64\u72b6\u6001\u4e0b\u53ef\u4ee5\u518d\u6b21\u8c03\u7528 <code>start</code> \u91cd\u65b0\u542f\u52a8\u670d\u52a1\u3002</li> <li>\u5f53\u5728\u7f51\u7edc\u670d\u52a1\u81ea\u8eab\u7ebf\u7a0b\u8c03\u7528\u4e86\u6b21\u51fd\u6570\u65f6\uff0c\u4f1a\u8fdb\u5165 <code>STOPPING</code> \u72b6\u6001\uff0c\u4e1a\u52a1\u5e94\u8be5\u5728\u975e\u7f51\u7edc\u670d\u52a1\u7ebf\u7a0b\u5224\u65ad\u662f\u5426\u4f9d\u7136\u5904\u4e8e <code>STOPPING</code> \u72b6\u6001\u6765\u51b3\u5b9a\u662f\u5426\u518d\u6b21\u8c03\u7528<code>stop</code>\uff0c\u4f8b\u5982: <pre><code>if (service-&gt;is_stopping()) {\nservice-&gt;stop();\n}\n</code></pre></li> </ul>"},{"location":"api/reference/io_service-class/#io_serviceis_running","title":"io_service::is_running","text":"<p>\u5224\u65ad\u7f51\u7edc\u670d\u52a1\u662f\u5426\u5728\u8fd0\u884c\u4e2d\u3002</p> <pre><code>bool is_running() const\n</code></pre>"},{"location":"api/reference/io_service-class/#_12","title":"\u8fd4\u56de\u503c","text":"<p><code>true</code>: \u7f51\u7edc\u670d\u52a1\u8fd0\u884c\u4e2d\uff0c<code>false</code>: \u7f51\u7edc\u670d\u52a1\u5904\u4e8e\u5176\u4ed6\u72b6\u6001</p>"},{"location":"api/reference/io_service-class/#io_serviceis_stopping","title":"io_service::is_stopping","text":"<p>\u5224\u65ad\u7f51\u7edc\u670d\u52a1\u662f\u5426\u5728\u505c\u6b62\u4e2d\u3002</p> <pre><code>bool is_stopping() const\n</code></pre>"},{"location":"api/reference/io_service-class/#_13","title":"\u8fd4\u56de\u503c","text":"<p><code>true</code>: \u7f51\u7edc\u670d\u52a1\u505c\u6b62\u4e2d\uff0c<code>false</code>: \u7f51\u7edc\u670d\u52a1\u5904\u4e8e\u5176\u4ed6\u72b6\u6001</p>"},{"location":"api/reference/io_service-class/#io_serviceopen","title":"io_service::open","text":"<p>\u6253\u5f00\u4fe1\u9053\u3002</p> <pre><code>bool open(size_t cindex, int kind);\n</code></pre>"},{"location":"api/reference/io_service-class/#_14","title":"\u53c2\u6570","text":"<p>cindex \u4fe1\u9053\u7d22\u5f15\u3002</p> <p>kind \u4fe1\u9053\u7c7b\u578b\u3002</p>"},{"location":"api/reference/io_service-class/#_15","title":"\u8fd4\u56de\u503c","text":"<p><code>true</code>: \u4fe1\u9053\u6253\u5f00\u64cd\u4f5c\u8bf7\u6c42\u6210\u529f\uff0c<code>false</code>: \u4fe1\u9053\u6b63\u5728\u6253\u5f00\u8fc7\u7a0b\u4e2d\u3002</p>"},{"location":"api/reference/io_service-class/#_16","title":"\u6ce8\u610f","text":"<p>\u5bf9\u4e8e<code>TCP</code>, \u5c06\u4f1a\u8bf7\u6c42\u5185\u6838\u53d1\u8d77\u975e\u963b\u585e3\u6b21\u63e1\u624b\u6765\u5efa\u7acb\u53ef\u9760\u8fde\u63a5\u3002</p> <p>cindex \u7684\u503c\u5fc5\u987b\u5c0f\u4e8eio_service\u521d\u59cb\u5316\u65f6\u7684\u4fe1\u9053\u6570\u91cf\u3002</p> <p>kind \u5fc5\u987b\u662f\u4ee5\u4e0b\u679a\u4e3e\u503c\u4e4b\u4e00:</p> <ul> <li><code>YCK_TCP_CLIENT</code></li> <li><code>YCK_TCP_SERVER</code></li> <li><code>YCK_UDP_CLIENT</code></li> <li><code>YCK_UDP_SERVER</code></li> <li><code>YCK_KCP_CLIENT</code></li> <li><code>YCK_KCP_SERVER</code></li> <li><code>YCK_SSL_CLIENT</code></li> <li><code>YCK_SSL_SERVER</code>: \u5fc5\u987b\u5728\u542f\u52a8io_service\u524d\u901a\u8fc7\u9009\u9879<code>YOPT_S_SSL_CERT</code>\u8bbe\u7f6e\u6709\u6548\u7684\u8bc1\u4e66\u548c\u79c1\u94a5\u6587\u4ef6\u624d\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002</li> </ul>"},{"location":"api/reference/io_service-class/#io_serviceclose","title":"io_service::close","text":"<p>\u5173\u95ed\u4fe1\u9053\u6216\u8005\u4f20\u8f93\u4f1a\u8bdd\u3002</p> <pre><code>void close(transport_handle_t transport);\nvoid close(int cindex);\n</code></pre>"},{"location":"api/reference/io_service-class/#_17","title":"\u53c2\u6570","text":"<p>transport \u5c06\u8981\u5173\u95ed\u7684\u4f20\u8f93\u4f1a\u8bdd\u3002</p> <p>cindex \u5c06\u8981\u5173\u95ed\u7684\u4fe1\u9053\u3002</p>"},{"location":"api/reference/io_service-class/#_18","title":"\u6ce8\u610f","text":"<p>\u5bf9\u4e8e<code>TCP</code>\uff0c \u5c06\u4f1a\u53d1\u8d774\u6b21\u63e1\u624b\u6765\u7ec8\u6b62\u8fde\u63a5\u3002</p>"},{"location":"api/reference/io_service-class/#io_serviceis_open","title":"io_service::is_open","text":"<p>\u5224\u65ad\u4fe1\u9053\u6216\u4f20\u8f93\u4f1a\u8bdd\u662f\u5426\u5904\u4e8e\u6253\u5f00\u72b6\u6001\u3002</p> <pre><code>bool is_open(transport_handle_t transport) const;\nbool is_open(int cindex) const;\n</code></pre>"},{"location":"api/reference/io_service-class/#_19","title":"\u53c2\u6570","text":"<p>transport \u4f20\u8f93\u4f1a\u8bdd\u53e5\u67c4\u3002</p> <p>cindex \u4fe1\u9053\u7d22\u5f15\u3002</p>"},{"location":"api/reference/io_service-class/#_20","title":"\u8fd4\u56de\u503c","text":"<p><code>true</code>: \u6253\u5f00\uff0c<code>false</code>: \u672a\u6253\u5f00</p>"},{"location":"api/reference/io_service-class/#io_servicedispatch","title":"io_service::dispatch","text":"<p>\u5206\u6d3e\u7f51\u7edc\u7ebf\u7a0b\u4ea7\u751f\u7684\u4e8b\u4ef6\u3002</p> <pre><code>void dispatch(int max_count);\n</code></pre>"},{"location":"api/reference/io_service-class/#_21","title":"\u53c2\u6570","text":"<p>max_count \u672c\u6b21\u6700\u5927\u5206\u6d3e\u4e8b\u4ef6\u6570\u3002</p>"},{"location":"api/reference/io_service-class/#_22","title":"\u6ce8\u610f","text":"<p>\u901a\u5e38\u6b64\u65b9\u6cd5\u5e94\u5f53\u5728\u5173\u5fc3\u7f51\u7edc\u4e8b\u4ef6\u7684\u4e1a\u52a1\u903b\u8f91\u7ebf\u7a0b\u8c03\u7528, \u4f8b\u5982Cocos2d-x\u7684\u6e32\u67d3\u7ebf\u7a0b\uff0c\u4ee5\u53ca\u5176\u4ed6\u6e38\u620f\u5f15\u64ce(Unity,UE4)\u7684\u4e3b\u903b\u8f91\u7ebf\u7a0b\u3002</p> <p>\u6b64\u65b9\u6cd5\u5bf9\u4e8e\u5b89\u5168\u5730\u66f4\u65b0\u6e38\u620f\u754c\u9762\u975e\u5e38\u6709\u7528\u3002</p>"},{"location":"api/reference/io_service-class/#_23","title":"\u793a\u4f8b","text":"<pre><code>yasio_shared_service()-&gt;dispatch(128);\n</code></pre>"},{"location":"api/reference/io_service-class/#io_servicewrite","title":"io_service::write","text":"<p>\u5411\u4f20\u8f93\u4f1a\u8bdd\u8fdc\u7aef\u53d1\u9001\u6570\u636e\u3002</p> <pre><code>int write(\ntransport_handle_t thandle,\nyasio::sbyte_buffer buffer,\nio_completion_cb_t completion_handler = nullptr\n);\n</code></pre>"},{"location":"api/reference/io_service-class/#_24","title":"\u53c2\u6570","text":"<p>thandle \u4f20\u8f93\u4f1a\u8bdd\u53e5\u67c4\u3002</p> <p>buffer \u8981\u53d1\u9001\u7684\u4e8c\u8fdb\u5236\u7f13\u51b2\u533a\u3002</p> <p>completion_handler \u53d1\u9001\u5b8c\u6210\u56de\u8c03\u3002</p>"},{"location":"api/reference/io_service-class/#_25","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u53d1\u9001\u6570\u636e\u5b57\u8282\u6570, <code>&lt; 0</code>: \u8bf4\u660e\u53d1\u751f\u9519\u8bef\u3002</p>"},{"location":"api/reference/io_service-class/#_26","title":"\u6ce8\u610f","text":"<p>completion_handler \u4e0d\u652f\u6301 <code>KCP</code>\u3002</p> <p>\u7a7abuffer\u4f1a\u76f4\u63a5\u88ab\u5ffd\u7565\uff0c\u4e5f\u4e0d\u4f1a\u89e6\u53d1 completion_handler \u3002</p>"},{"location":"api/reference/io_service-class/#io_servicewrite_to","title":"io_service::write_to","text":"<p>\u5411UDP\u4f20\u8f93\u4f1a\u8bdd\u53d1\u9001\u6570\u636e\u3002</p> <pre><code>int write_to(\ntransport_handle_t thandle,\nyasio::sbyte_buffer buffer,\nconst ip::endpoint&amp; to,\nio_completion_cb_t completion_handler = nullptr\n);\n</code></pre>"},{"location":"api/reference/io_service-class/#_27","title":"\u53c2\u6570","text":"<p>thandle \u4f20\u8f93\u4f1a\u8bdd\u53e5\u67c4\u3002</p> <p>buffer \u8981\u53d1\u9001\u7684buffer\u3002</p> <p>to \u8981\u53d1\u9001\u7684\u8fdc\u7aef\u5730\u5740\u3002</p> <p>completion_handler \u53d1\u9001\u5b8c\u6210\u56de\u8c03\u3002</p>"},{"location":"api/reference/io_service-class/#_28","title":"\u8fd4\u56de\u503c","text":"<p>\u6210\u529f\u53d1\u9001\u7684\u5b57\u8282\u6570, \u5f53 <code>&lt; 0</code> \u65f6\u8bf4\u660e\u53d1\u751f\u9519\u8bef\uff0c\u901a\u5e38\u662f\u4f20\u8f93\u4f1a\u8bdd\u5df2\u5173\u95ed(TCP\u8fde\u63a5\u65ad\u5f00\u7b49)\u3002</p>"},{"location":"api/reference/io_service-class/#_29","title":"\u6ce8\u610f","text":"<p>\u6b64\u51fd\u6570\u4ec5\u53ef\u7528\u4e8e DGRAM \u4f20\u8f93\u4f1a\u8bdd\uff0c\u5373 <code>UDP,KCP</code>\u3002</p> <p>\u53d1\u9001\u5b8c\u6210\u56de\u8c03 completion_handler \u4e0d\u652f\u6301 <code>KCP</code>\u3002</p> <p>\u7a7abuffer\u4f1a\u76f4\u63a5\u88ab\u5ffd\u7565\uff0c\u4e5f\u4e0d\u4f1a\u89e6\u53d1 completion_handler \u3002</p>"},{"location":"api/reference/io_service-class/#io_serviceschedule","title":"io_service::schedule","text":"<p>\u6ce8\u518c\u4e00\u4e2a\u5b9a\u65f6\u5668\u3002</p> <pre><code>highp_timer_ptr schedule(\nconst std::chrono::microseconds&amp; duration,\ntimer_cb_t cb\n);\n</code></pre>"},{"location":"api/reference/io_service-class/#_30","title":"\u53c2\u6570","text":"<p>duration \u5b9a\u65f6\u5668\u8d85\u65f6\u65f6\u95f4\uff0c\u6beb\u79d2\u7ea7\u3002</p> <p>cb \u5f53\u5b9a\u65f6\u5668\u5230\u671f\u540e\u56de\u8c03\u3002</p>"},{"location":"api/reference/io_service-class/#_31","title":"\u8fd4\u56de\u503c","text":"<p><code>std::shared_ptr</code> \u5305\u88c5\u7684\u5b9a\u65f6\u5668\u5bf9\u8c61\uff0c\u4ee5\u4fbf\u7528\u6237\u5bf9\u5b9a\u65f6\u5668\u5b89\u5168\u5730\u8fdb\u884c\u5fc5\u8981\u64cd\u4f5c\u3002</p>"},{"location":"api/reference/io_service-class/#_32","title":"\u793a\u4f8b","text":"<pre><code>// Register a once timer, timeout is 3 seconds.\nyasio_shared_service()-&gt;schedule(std::chrono::seconds(3), []()-&gt;bool{\nprintf(\"time called!\\n\");\nreturn true;\n});\n// Register a loop timer, interval is 5 seconds.\nauto loopTimer = yasio_shared_service()-&gt;schedule(std::chrono::seconds(5), []()-&gt;bool{\nprintf(\"time called!\\n\");\nreturn false;\n});\n</code></pre>"},{"location":"api/reference/io_service-class/#io_serviceinit_globals","title":"io_service::init_globals","text":"<p>\u9759\u6001\u65b9\u6cd5\uff0c\u663e\u793a\u5730\u521d\u59cb\u5316\u5168\u5c40\u6570\u636e</p> <pre><code>static void init_globals(print_fn2_t print_fn);\n</code></pre>"},{"location":"api/reference/io_service-class/#_33","title":"\u53c2\u6570","text":"<p>print_fn \u81ea\u5b9a\u4e49\u7f51\u7edc\u65e5\u5fd7\u6253\u5370\u51fd\u6570\u3002</p>"},{"location":"api/reference/io_service-class/#_34","title":"\u6ce8\u610f","text":"<p>\u6b64\u51fd\u6570\u662f\u53ef\u9009\u8c03\u7528\uff0c\u4f46\u662f\u5f53\u7528\u6237\u9700\u8981\u5c06\u7f51\u7edc\u65e5\u5fd7\u91cd\u5b9a\u5411\u5230\u81ea\u5b9a\u4e49\u65e5\u5fd7\u7cfb\u7edf\u65f6\uff0c \u5219\u975e\u5e38\u6709\u7528\uff0c\u4f8b\u5982\u91cd\u5b9a\u5411\u5230UE4\u548cU3D\u7684\u65e5\u5fd7\u8f93\u51fa\u3002</p>"},{"location":"api/reference/io_service-class/#_35","title":"\u793a\u4f8b","text":"<pre><code>// yasio_uelua.cpp\n// compile with: /EHsc\n#include \"yasio_uelua.h\"\n#include \"yasio/platform/yasio_ue4.hpp\"\n#include \"lua.hpp\"\n#if defined(NS_SLUA)\nusing namespace NS_SLUA;\n#endif\n#include \"yasio/bindings/lyasio.cpp\"\nDECLARE_LOG_CATEGORY_EXTERN(yasio_ue4, Log, All);\nDEFINE_LOG_CATEGORY(yasio_ue4);\nvoid yasio_uelua_init(void* L)\n{\nauto Ls            = (lua_State*)L;\nprint_fn2_t log_cb = [](int level, const char* msg) {\nFString text(msg);\nconst TCHAR* tstr = *text;\nUE_LOG(yasio_ue4, Log, L\"%s\", tstr);\n};\nio_service::init_globals(log_cb);\nluaregister_yasio(Ls);\n}\nvoid yasio_uelua_cleanup()\n{\nio_service::cleanup_globals();\n}\n</code></pre>"},{"location":"api/reference/io_service-class/#io_servicecleanup_globals","title":"io_service::cleanup_globals","text":"<p>\u9759\u6001\u65b9\u6cd5\uff0c\u663e\u793a\u5730\u6e05\u7406\u5168\u5c40\u6570\u636e\u3002</p> <pre><code>static void cleanup_globals();\n</code></pre>"},{"location":"api/reference/io_service-class/#_36","title":"\u6ce8\u610f","text":"<p>\u5f53\u7528\u6237\u9700\u8981\u5378\u8f7d\u5305\u542b\u81ea\u5b9a\u4e49\u65e5\u5fd7\u6253\u5370\u56de\u8c03\u7684\u52a8\u6001\u5e93(.dll,.so)\u524d\u5fc5\u987b\u8c03\u7528\u6b64\u51fd\u6570\uff0c\u8c28\u9632\u5e94\u7528\u7a0b\u5e8f\u95ea\u9000\u3002</p>"},{"location":"api/reference/io_service-class/#io_servicechannel_at","title":"io_service::channel_at","text":"<p>\u901a\u8fc7\u4fe1\u9053\u7d22\u5f15\u83b7\u53d6\u4fe1\u9053\u53e5\u67c4\u3002</p> <pre><code>io_channel* channel_at(size_t cindex) const;\n</code></pre>"},{"location":"api/reference/io_service-class/#_37","title":"\u53c2\u6570","text":"<p>cindex \u4fe1\u9053\u7d22\u5f15</p>"},{"location":"api/reference/io_service-class/#_38","title":"\u8fd4\u56de\u503c","text":"<p>\u4fe1\u9053\u53e5\u67c4\u6307\u9488, \u5f53\u7d22\u5f15\u503c\u8d85\u51fa\u8303\u56f4\u65f6\uff0c\u8fd4\u56de <code>nullptr</code>\u3002</p>"},{"location":"api/reference/io_service-class/#io_serviceset_option","title":"io_service::set_option","text":"<p>\u8bbe\u7f6e\u9009\u9879\u3002</p> <pre><code>void set_option(int opt, ...);\n</code></pre>"},{"location":"api/reference/io_service-class/#_39","title":"\u53c2\u6570","text":"<p>opt \u9009\u9879\u679a\u4e3e, \u8bf7\u67e5\u770b YOPT_X_XXX.</p>"},{"location":"api/reference/io_service-class/#_40","title":"\u793a\u4f8b","text":"<pre><code>#include \"yasio/yasio.hpp\"\nint main(){\nusing namespace yasio;\nio_hostent hosts[] = {\n{\"192.168.1.66\", 20336},\n{\"192.168.1.88\", 20337},\n};\nauto service = std::make_shared&lt;io_service&gt;(hosts, YASIO_ARRAYSIZE(hosts));\n// for application protocol with length field, you just needs set this option.\n// it's similar to java netty length frame based decode.\n// such as when your protocol define as following\n//    packet.header: (header.len=12bytes)\n//           code:int16_t\n//           datalen:int32_t (not contains packet.header.len)\n//           timestamp:int32_t\n//           crc16:int16_t\n//    packet.data\nservice-&gt;set_option(YOPT_C_UNPACK_PARAMS,\n0,     // channelIndex, the channel index\n65535, // maxFrameLength, max packet size\n2,     // lenghtFieldOffset, the offset of length field\n4,     // lengthFieldLength, the size of length field, can be 1,2,4\n12    // lengthAdjustment\uff1aif the value of length feild == packet.header.len + packet.data.len, this parameter should be 0, otherwise should be sizeof(packet.header)\n);\n// for application protocol without length field, just sets length field size to -1.\n// then io_service will dispatch any packet received from server immediately,\n// such as http request, this is default behavior of channel.\nservice-&gt;set_option(YOPT_C_UNPACK_PARAMS, 1, 65535, -1, 0, 0);\nreturn 0;\n}\n</code></pre>"},{"location":"api/reference/io_service-class/#_41","title":"\u8bf7\u53c2\u9605","text":"<p>io_event Class</p> <p>io_channel Class</p> <p>io_service Options</p> <p>xxsocket Class</p> <p>obstream Class</p> <p>ibstream_view Class</p> <p>ibstream Class</p>"},{"location":"api/reference/io_service-options/","title":"io_service options","text":"<p>io_service\u652f\u6301\u7684\u6240\u6709\u9009\u9879\u3002</p> Name Description YOPT_S_DEFER_EVENT_CB Set defer event callbackparams: callback:defer_event_cb_tremarks:a. User can do custom packet resolve at network thread, such as decompress and crc check.b. Return true, io_service will continue enque to event queue.c. Return false, io_service will drop the event. YOPT_S_DEFERRED_EVENT Set whether deferred dispatch event, default is: 1params: deferred_event:int(1) YOPT_S_RESOLV_FN Set custom resolve function, native C++ ONLYparams: func:resolv_fn_t* YOPT_S_PRINT_FN Set custom print function native C++ ONLYparmas: func:print_fn_tremarks: you must ensure thread safe of it YOPT_S_PRINT_FN2 Set custom print function with log levelparmas: func:print_fn2_tyou must ensure thread safe of it YOPT_S_EVENT_CB Set event callbackparams: func:event_cb_t* YOPT_S_TCP_KEEPALIVE Set tcp keepalive in seconds, probes is tries.params: idle:int(7200), interal:int(75), probes:int(10) YOPT_S_NO_NEW_THREAD Don't start a new thread to run event loop.params: value:int(0) YOPT_S_SSL_CACERT Sets ssl verification cert, if empty, don't verify.params: path:const char* YOPT_S_SSL_CERT Sets ssl server cert and private key, if empty, the ssl server doesn't work.params: cert_file:const char*params: key_file:const char* YOPT_S_CONNECT_TIMEOUT Set connect timeout in seconds.params: connect_timeout:int(10) YOPT_S_CONNECT_TIMEOUTMS Set connect timeout in milliseconds.params: connect_timeout:int(10000) YOPT_S_DNS_CACHE_TIMEOUT Set dns cache timeout in seconds.params: dns_cache_timeout : int(600) YOPT_S_DNS_CACHE_TIMEOUTMS Set dns cache timeout in milliseconds.params: dns_cache_timeout : int(600000) YOPT_S_DNS_QUERIES_TIMEOUT Set dns queries timeout in seconds, default is: 5.params: dns_queries_timeout : int(5)remark: a. this option must be set before 'io_service::start'b. only works when have c-aresc. since v3.33.0 it's milliseconds, previous is seconds.d. the timeout algorithm of c-ares is complicated, usually, by default, dns querieswill failed with timeout after more than 75 seconds.e. for more detail, please see:https://c-ares.haxx.se/ares_init_options.html YOPT_S_DNS_QUERIES_TIMEOUTMS Set dns queries timeout in seconds, see also YOPT_S_DNS_QUERIES_TIMEOUT YOPT_S_DNS_QUERIES_TRIES Set dns queries tries when timeout reached, default is: 5.params: dns_queries_tries : int(5)remarks:a. this option must be set before 'io_service::start'b. relative option: YOPT_S_DNS_QUERIES_TIMEOUT YOPT_S_DNS_DIRTY Set dns server dirty.params: reserved : int(1)remarks:a. this option only works with c-ares enabledb. you should set this option after your mobile network changed YOPT_S_DNS_LIST Set dns server list.params: servers : const char*(\"xxx.xxx.xxx.xxx[:port],xxx.xxx.xxx.xxx[:port]\") YOPT_C_UNPACK_FN Sets channel length field based frame decode function.params: index:int, func:decode_len_fn_t*remark: native C++ ONLY YOPT_C_UNPACK_PARAMS Sets channel length field based frame decode params.params:index:int,max_frame_length:int(10MBytes),length_field_offset:int(-1),length_field_length:int(4),length_adjustment:int(0), YOPT_C_UNPACK_STRIP Sets channel length field based frame decode initial bytes to strip.params:index:int,initial_bytes_to_strip:int(0) YOPT_C_REMOTE_HOST Sets channel remote host.params: index:int, ip:const char* YOPT_C_REMOTE_PORT Sets channel remote port.params: index:int, port:int YOPT_C_REMOTE_ENDPOINT Sets channel remote endpoint.params: index:int, ip:const char*, port:int YOPT_C_LOCAL_HOST Sets local host for client channel only.params: index:int, ip:const char* YOPT_C_LOCAL_PORT Sets local port for client channel only.params: index:int, port:int YOPT_C_LOCAL_ENDPOINT Sets local endpoint for client channel only.params: index:int, ip:const char*, port:int YOPT_C_MOD_FLAGS Mods channl flags.params: index:int, flagsToAdd:int, flagsToRemove:int YOPT_C_ENABLE_MCAST Enable channel multicast mode.params: index:int, multi_addr:const char*, loopback:int YOPT_C_DISABLE_MCAST Disable channel multicast mode.params: index:int YOPT_C_KCP_CONV The kcp conv id, must equal in two endpoint from the same connection.params: index:int, conv:int YOPT_T_CONNECT Change 4-tuple association for io_transport_udp.params: transport:transport_handle_tremark: only works for udp client transport YOPT_T_DISCONNECT Dissolve 4-tuple association for io_transport_udp.params: transport:transport_handle_tremark: only works for udp client transport YOPT_B_SOCKOPT Sets io_base sockopt.params: io_base*,level:int,optname:int,optval:int,optlen:int"},{"location":"api/reference/io_service-options/#_1","title":"\u8bf7\u53c2\u9605","text":"<p>io_service Class</p>"},{"location":"api/reference/obstream-class/","title":"obstream Class","text":"<p>\u63d0\u4f9b\u4e8c\u8fdb\u5236\u5e8f\u5217\u5316\u529f\u80fd\u3002</p> <p>\u6ce8\u610f</p> <ul> <li><code>yasio::obstream</code> \u7b49\u4ef7\u4e8e <code>yasio::obstream_any&lt;yasio::dynamic_extent&gt;</code></li> <li>\u81ea3.39.0\u8d77\uff0c\u65b0\u589e<code>obstream_span</code>\u53ef\u5e8f\u5217\u5316\u5230<code>std::string</code>\u6216<code>std::vector&lt;char&gt;</code>\uff0c\u8bf7\u67e5\u770b\u793a\u4f8b\u5e8f\u5217\u5316\u5230stl\u5bb9\u5668</li> <li>\u81ea3.37.5\u8d77\uff0c\u65b0\u589e<code>obstream_any</code>\u7c7b\u6a21\u677f\u5177\u5907\u5e8f\u5217\u5316\u5df2\u77e5\u5927\u5c0f\u7684\u5c0f\u5757\u6808\u5185\u5b58\u80fd\u529b\uff0c\u8bf7\u67e5\u770b\u793a\u4f8b: \u4f7f\u7528\u6808\u7a7a\u95f4\u5e8f\u5217\u5316</li> <li> <p>\u81ea3.35.0\u8d77\uff0c\u4f18\u5316\u4e3a\u7c7b\u6a21\u677fbasic_obstream\u5b9e\u73b0\uff0c\u4f53\u73b0\u4e86C++\u6a21\u677f\u5f3a\u5927\u7684\u4ee3\u7801\u590d\u7528\u80fd\u529b\u3002</p> </li> <li> <p><code>obstream</code> \u5f53\u5199\u5165int16~int64\u548cfloat/double\u7c7b\u578b\u65f6, \u4f1a\u81ea\u52a8\u5c06\u4e3b\u673a\u5b57\u8282\u5e8f\u8f6c\u6362\u4e3a\u7f51\u7edc\u5b57\u8282\u5e8f\u3002</p> </li> <li> <p><code>fast_obstream</code> \u4e0d\u4f1a\u8f6c\u6362\u4efb\u4f55\u5b57\u8282\u5e8f\u3002</p> </li> </ul>"},{"location":"api/reference/obstream-class/#_1","title":"\u8bed\u6cd5","text":"<pre><code>namespace yasio { template &lt;size_t _Extent&gt;\nusing obstream_any = basic_obstream&lt;convert_traits&lt;network_convert_tag&gt;, _Extent&gt;;\nusing obstream     = obstream_any&lt;dynamic_extent&gt;;\ntemplate &lt;size_t _Extent&gt;\nusing fast_obstream_any = basic_obstream&lt;convert_traits&lt;host_convert_tag&gt;, _Extent&gt;;\nusing fast_obstream     = fast_obstream_any&lt;dynamic_extent&gt;;\n}\ntemplate &lt;typename _Cont&gt;\nusing obstream_span = basic_obstream_span&lt;convert_traits&lt;network_convert_tag&gt;, _Cont&gt;;\ntemplate &lt;typename _Cont&gt;\nusing fast_obstream_span = basic_obstream_span&lt;convert_traits&lt;host_convert_tag&gt;, _Cont&gt;;\n</code></pre>"},{"location":"api/reference/obstream-class/#_2","title":"\u6210\u5458","text":""},{"location":"api/reference/obstream-class/#_3","title":"\u516c\u5171\u6784\u9020\u51fd\u6570","text":"Name Description obstream::obstream \u6784\u90201\u4e2a<code>obstream</code> \u5bf9\u8c61"},{"location":"api/reference/obstream-class/#_4","title":"\u516c\u5171\u65b9\u6cd5","text":"Name Description obstream::write \u51fd\u6570\u6a21\u677f\uff0c\u5199\u5165\u6570\u503c obstream::write_ix \u51fd\u6570\u6a21\u677f\uff0c\u5199\u5165(7bit Encoded Int/Int64)\u6570\u503c obstream::write_v \u5199\u5165\u5e26\u957f\u5ea6\u57df(7bit Encoded Int)\u7684\u4e8c\u8fdb\u5236\u6570\u636e obstream::write_byte \u5199\u51651\u4e2a\u5b57\u8282 obstream::write_bytes \u5199\u5165\u6307\u5b9a\u957f\u5ea6\u4e8c\u8fdb\u5236\u6570\u636e obstream::empty \u68c0\u67e5\u6d41\u662f\u5426\u4e3a\u7a7a obstream::data \u83b7\u53d6\u6d41\u6570\u636e\u6307\u9488 obstream::length \u83b7\u53d6\u6d41\u6570\u636e\u5927\u5c0f obstream::buffer \u83b7\u53d6\u6d41\u5185\u90e8\u7f13\u51b2\u533a obstream::clear \u6e05\u7406\u6d41\uff0c\u4ee5\u4fbf\u590d\u7528 obstream::shrink_to_fit \u91ca\u653e\u6d41\u5185\u90e8\u7f13\u51b2\u533a\u591a\u4f59\u5185\u5b58 obstream::save \u4fdd\u5b58\u6d41\u4e8c\u8fdb\u5236\u6570\u636e\u5230\u6587\u4ef6\u7cfb\u7edf"},{"location":"api/reference/obstream-class/#_5","title":"\u8981\u6c42","text":"<p>\u5934\u6587\u4ef6: obstream.hpp</p>"},{"location":"api/reference/obstream-class/#obstreamobstream","title":"obstream::obstream","text":"<p>\u6784\u9020 <code>obstream</code> \u5bf9\u8c61\u3002</p> <pre><code>obstream(size_t capacity = 128);\nobstream(const obstream&amp; rhs);\nobstream(obstream&amp;&amp; rhs);\n</code></pre>"},{"location":"api/reference/obstream-class/#obstreamwrite","title":"obstream::write","text":"<p>\u5199\u5165\u6570\u503c\u7c7b\u578b</p> <pre><code>template&lt;typename _Nty&gt;\nvoid obstream::write(_Nty value);\n</code></pre>"},{"location":"api/reference/obstream-class/#_6","title":"\u53c2\u6570","text":"<p>value \u8981\u5199\u5165\u7684\u503c</p>"},{"location":"api/reference/obstream-class/#_7","title":"\u6ce8\u610f","text":"<p>_Nty \u5b9e\u9645\u7c7b\u578b\u53ef\u4ee5\u662f\u4efb\u610f1~8\u5b57\u8282\u6574\u6570\u7c7b\u578b\u6216\u6d6e\u70b9\u7c7b\u578b\u3002</p>"},{"location":"api/reference/obstream-class/#obstreamwrite_ix","title":"obstream::write_ix","text":"<p>\u5c0632/64\u4f4d\u6574\u6570\u503c\u4ee57Bit Encoded Int\u65b9\u5f0f\u538b\u7f29\u540e\u5199\u5165\u6d41\u3002</p> <pre><code>template&lt;typename _Intty&gt;\nvoid obstream::write_ix(_Intty value);\n</code></pre>"},{"location":"api/reference/obstream-class/#_8","title":"\u53c2\u6570","text":"<p>value \u8981\u5199\u5165\u7684\u503c\u3002</p>"},{"location":"api/reference/obstream-class/#_9","title":"\u6ce8\u610f","text":"<p>_Intty \u7c7b\u578b\u53ea\u80fd\u662f\u5982\u4e0b\u7c7b\u578b</p> <ul> <li>int32_t</li> <li>int64_t</li> </ul> <p>\u6b64\u51fd\u6570\u538b\u7f29\u7f16\u7801\u65b9\u5f0f\u517c\u5bb9\u5fae\u8f6fdotnet\u5982\u4e0b\u51fd\u6570</p> <ul> <li>BinaryWriter.Write7BitEncodedInt</li> <li>BinaryWriter.Write7BitEncodedInt64</li> </ul>"},{"location":"api/reference/obstream-class/#obstreamwrite_v","title":"obstream::write_v","text":"<p>\u5199\u5165\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u5305\u542b\u957f\u5ea6\u5b57\u6bb5(7Bit Encoded Int).</p> <pre><code>void write_v(cxx17::string_view sv);\n</code></pre>"},{"location":"api/reference/obstream-class/#_10","title":"\u53c2\u6570","text":"<p>sv \u8981\u5199\u5165\u7684\u6570\u636e\u3002</p>"},{"location":"api/reference/obstream-class/#_11","title":"\u6ce8\u610f","text":"<p>\u6b64\u51fd\u6570\u5148\u4ee57Bit Encoded\u7f16\u7801\u65b9\u5f0f\u5199\u5165\u6570\u636e\u957f\u5ea6, \u518d\u8c03\u7528 write_bytes \u5199\u5165\u5b57\u8282\u6570\u636e.</p>"},{"location":"api/reference/obstream-class/#obstreamwrite_byte","title":"obstream::write_byte","text":"<p>\u5199\u51651\u4e2a\u5b57\u8282\u3002</p> <pre><code>void write_byte(uint8_t value);\n</code></pre>"},{"location":"api/reference/obstream-class/#_12","title":"\u53c2\u6570","text":"<p>value \u8981\u5199\u5165\u7684\u503c\u3002</p>"},{"location":"api/reference/obstream-class/#_13","title":"\u6ce8\u610f","text":"<p>\u6b64\u51fd\u6570\u529f\u80fd\u7b49\u4ef7\u4e8e <code>obstream::write&lt;uint8_t&gt;</code></p>"},{"location":"api/reference/obstream-class/#obstreamwrite_bytes","title":"obstream::write_bytes","text":"<p>\u5199\u5165\u5b57\u8282\u6570\u7ec4\u3002</p> <pre><code>void write_bytes(cxx17::string_view sv);\nvoid write_bytes(const void* data, int length);\nvoid write_bytes(std::streamoff offset, const void* data, int length);\n</code></pre>"},{"location":"api/reference/obstream-class/#_14","title":"\u53c2\u6570","text":"<p>sv \u5199\u5165string_view\u5305\u88c5\u7684\u5b57\u8282\u6570\u7ec4.</p> <p>data \u8981\u5199\u5165\u5b57\u8282\u6570\u7ec4\u7684\u9996\u5730\u5740.</p> <p>length \u8981\u5199\u5165\u5b57\u8282\u6570\u7ec4\u7684\u957f\u5ea6.</p> <p>offset \u8981\u5199\u5165\u5b57\u8282\u6570\u7ec4\u7684\u76ee\u6807\u504f\u79fb.</p>"},{"location":"api/reference/obstream-class/#_15","title":"\u6ce8\u610f","text":"<p><code>offset + length</code> \u7684\u503c\u5fc5\u987b\u5c0f\u4e8e <code>obstream::length</code></p>"},{"location":"api/reference/obstream-class/#obstreamempty","title":"obstream::empty","text":"<p>\u5224\u65ad\u6d41\u662f\u5426\u4e3a\u7a7a\u3002</p> <pre><code>bool empty() const;\n</code></pre>"},{"location":"api/reference/obstream-class/#_16","title":"\u8fd4\u56de\u503c","text":"<p><code>true</code> \u7a7a; <code>false</code> \u975e\u7a7a\u3002</p>"},{"location":"api/reference/obstream-class/#_17","title":"\u6ce8\u610f","text":"<p>\u6b64\u51fd\u6570\u7b49\u4ef7\u4e8e length == 0\u3002</p>"},{"location":"api/reference/obstream-class/#obstreamdata","title":"obstream::data","text":"<p>\u83b7\u53d6\u6570\u636e\u6307\u9488\u3002</p> <pre><code>const char* data() const;\nchar* data();\n</code></pre>"},{"location":"api/reference/obstream-class/#_18","title":"\u8fd4\u56de\u503c","text":"<p>\u5b57\u8282\u6d41\u6570\u636e\u9996\u5730\u5740\u3002</p>"},{"location":"api/reference/obstream-class/#obstreamlength","title":"obstream::length","text":"<p>\u83b7\u53d6\u6d41\u957f\u5ea6\u3002</p> <pre><code>size_t length() const;\n</code></pre>"},{"location":"api/reference/obstream-class/#_19","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u6d41\u4e2d\u5305\u542b\u7684\u603b\u5b57\u8282\u6570\u3002</p>"},{"location":"api/reference/obstream-class/#obstreambuffer","title":"obstream::buffer","text":"<p>\u83b7\u53d6\u6d41\u5185\u90e8\u7f13\u51b2\u533a\u3002</p> <pre><code>const yasio::sbyte_buffer&amp; buffer() const;\nyasio::sbyte_buffer&amp; buffer();\n</code></pre>"},{"location":"api/reference/obstream-class/#_20","title":"\u8fd4\u56de\u503c","text":"<p>\u6d41\u5185\u90e8\u7f13\u51b2\u533a\u5f15\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>std::move</code> \u53d6\u8d70\u3002</p>"},{"location":"api/reference/obstream-class/#_21","title":"\u793a\u4f8b","text":"<pre><code>// obstream_buffer.cpp\n// compile with: /EHsc\n#include \"yasio/obstream.hpp\"\nint main( )\n{\nusing namespace yasio;\nusing namespace cxx17;\nobstream obs;\nobs.write_v(\"hello world!\");\nconst auto&amp; const_buffer = obs.buffer();\n// after this line, the obs will be empty\nauto move_buffer = std::move(obs.buffer());\nreturn 0;\n}\n</code></pre>"},{"location":"api/reference/obstream-class/#obstreamclear","title":"obstream::clear","text":"<p>\u6e05\u7406\u6d41\uff0c\u4ee5\u4fbf\u590d\u7528\u3002</p> <pre><code>void clear();\n</code></pre>"},{"location":"api/reference/obstream-class/#_22","title":"\u6ce8\u610f","text":"<p>\u6b64\u51fd\u6570\u4e0d\u4f1a\u91ca\u653ebuffer\u5185\u5b58\uff0c\u5bf9\u4e8e\u9ad8\u6548\u5730\u590d\u7528\u5e8f\u5217\u5316\u5668\u975e\u5e38\u6709\u7528\u3002</p>"},{"location":"api/reference/obstream-class/#obstreamshrink_to_fit","title":"obstream::shrink_to_fit","text":"<p>\u91ca\u653e\u6d41\u5185\u90e8\u7f13\u51b2\u533a\u591a\u4f59\u5185\u5b58\u3002</p> <pre><code>void shrink_to_fit();\n</code></pre>"},{"location":"api/reference/obstream-class/#obstreamsave","title":"obstream::save","text":"<p>\u5c06\u6d41\u4e2d\u7684\u4e8c\u8fdb\u5236\u5b57\u8282\u6570\u636e\u4fdd\u5b58\u5230\u6587\u4ef6\u3002</p> <pre><code>void save(const char* filename) const;\n</code></pre>"},{"location":"api/reference/obstream-class/#_23","title":"\u793a\u4f8b","text":"<pre><code>// obstream_save.cpp\n// compile with: /EHsc\n#include \"yasio/obstream.hpp\"\n#include \"yasio/ibstream.hpp\"\nint main( )\n{\nusing namespace yasio;\nusing namespace cxx17;\nobstream obs;\nobs.write_v(\"hello world!\");\nobs.save(\"obstream_save.bin\");\nibstream ibs;\nif(ibs.load(\"obstream_save.bin\")) {\n// output should be: hello world!\ntry {\nstd::count &lt;&lt; ibs.read_v() &lt;&lt; \"\\n\";\n}\ncatch(const std::exception&amp; ex) {\nstd::count &lt;&lt; \"read_v fail: \" &lt;&lt;\n&lt;&lt; ex.message() &lt;&lt; \"\\n\";\n}\n}\nreturn 0;\n}\n</code></pre>"},{"location":"api/reference/obstream-class/#_24","title":"\u4f7f\u7528\u6808\u5185\u5b58\u5e8f\u5217\u5316\u793a\u4f8b","text":""},{"location":"api/reference/obstream-class/#_25","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u5e8f\u5217\u5316\u8fc7\u7a0b\u4e2d\uff0c\u5f53 <code>fixed_buffer</code> \u68c0\u6d4b\u5230\u5185\u5b58\u7a7a\u95f4\u4e0d\u8db3\u65f6\u4f1a\u629b\u51fa <code>std::out_of_range</code> \u5f02\u5e38</li> </ul>"},{"location":"api/reference/obstream-class/#obstream_any","title":"obstream_any\u7528\u6cd5","text":"<pre><code>#include \"yasio/obstream.hpp\"\nint main() {\nyasio::obstream_any&lt;128&gt; obs; // \u4f7f\u7528\u6808\u7a7a\u95f4, \u6ce8\u610f\u4e0d\u8981\u592a\u5927\uff0c\u9632\u6b62\u6808\u7a7a\u95f4\u6ea2\u51fa\nauto where = obs.push&lt;uint16_t&gt;();\nobs.write(3.141592654);\nobs.write(1.17723f);\nobs.write_ix&lt;int32_t&gt;(20201125);\nobs.write_ix&lt;int64_t&gt;(-9223372036854775807);\nobs.pop&lt;uint16_t&gt;(where);\nreturn 0;\n}\n</code></pre>"},{"location":"api/reference/obstream-class/#obstream_span-stdarray","title":"obstream_span + std::array\u7528\u6cd5","text":"<pre><code>#include \"yasio/obstream.hpp\"\nint main() {\nstd::array&lt;char, 128&gt; fb; // \u4f7f\u7528\u6808\u7a7a\u95f4, \u6ce8\u610f\u4e0d\u8981\u592a\u5927\uff0c\u9632\u6b62\u6808\u7a7a\u95f4\u6ea2\u51fa\nyasio::obstream_span&lt;yasio::fixed_buffer_span&gt; obs(fb);\nauto where = obs.push&lt;uint16_t&gt;();\nobs.write(3.141592654);\nobs.write(1.17723f);\nobs.write_ix&lt;int32_t&gt;(20201125);\nobs.write_ix&lt;int64_t&gt;(-9223372036854775807);\nobs.pop&lt;uint16_t&gt;(where);\nreturn 0;\n}\n</code></pre>"},{"location":"api/reference/obstream-class/#obstream_span-char","title":"obstream_span + char[]\u7528\u6cd5","text":"<pre><code>#include \"yasio/obstream.hpp\"\nint main() {\nchar raw_fb[128]; // \u4f7f\u7528\u6808\u7a7a\u95f4, \u6ce8\u610f\u4e0d\u8981\u592a\u5927\uff0c\u9632\u6b62\u6808\u7a7a\u95f4\u6ea2\u51fa\nyasio::obstream_span&lt;yasio::fixed_buffer_span&gt; obs(raw_fb);\nauto where = obs.push&lt;uint16_t&gt;();\nobs.write(3.141592654);\nobs.write(1.17723f);\nobs.write_ix&lt;int32_t&gt;(20201125);\nobs.write_ix&lt;int64_t&gt;(-9223372036854775807);\nobs.pop&lt;uint16_t&gt;(where);\nreturn 0;\n}\n</code></pre>"},{"location":"api/reference/obstream-class/#stdvectorstdstring","title":"\u5e8f\u5217\u5316\u5230std::vector\u548cstd::string","text":""},{"location":"api/reference/obstream-class/#obstream_span-stdvector","title":"obstream_span + std::vector\u7528\u6cd5 <pre><code>#include \"yasio/obstream.hpp\"\n\nint main() {\n    std::vector&lt;char&gt; buf;\n    yasio::obstream_span&lt;std::vector&lt;char&gt;&gt; obs(buf);\n    auto where = obs.push&lt;uint16_t&gt;();\n    obs.write(3.141592654);\n    obs.write(1.17723f);\n    obs.write_ix&lt;int32_t&gt;(20201125);\n    obs.write_ix&lt;int64_t&gt;(-9223372036854775807);\n    obs.pop&lt;uint16_t&gt;(where);\n    return 0;\n}\n</code></pre>","text":""},{"location":"api/reference/obstream-class/#obstream_span-stdstring","title":"obstream_span + std::string\u7528\u6cd5 <pre><code>#include \"yasio/obstream.hpp\"\n\nint main() {\n    std::string buf;\n    yasio::obstream_span&lt;std::string&gt; obs(buf);\n    auto where = obs.push&lt;uint16_t&gt;();\n    obs.write(3.141592654);\n    obs.write(1.17723f);\n    obs.write_ix&lt;int32_t&gt;(20201125);\n    obs.write_ix&lt;int64_t&gt;(-9223372036854775807);\n    obs.pop&lt;uint16_t&gt;(where);\n    return 0;\n}\n</code></pre>","text":""},{"location":"api/reference/obstream-class/#_26","title":"\u8bf7\u53c2\u9605 <p>ibstream_view Class</p> <p>ibstream Class</p>","text":""},{"location":"api/reference/others/","title":"\u5176\u4ed6\u5e38\u7528API","text":""},{"location":"api/reference/others/#_1","title":"\u547d\u540d\u7a7a\u95f4","text":"<pre><code>namespace yasio {}\n</code></pre>"},{"location":"api/reference/others/#_2","title":"\u516c\u5171\u65b9\u6cd5","text":"Name Description yasio::host_to_network \u4e3b\u673a\u5b57\u8282\u5e8f\u8f6c\u7f51\u7edc\u5b57\u8282\u5e8f yasio::network_to_host \u7f51\u7edc\u5b57\u8282\u5e8f\u8f6c\u4e3b\u673a\u5b57\u8282\u5e8f yasio::xhighp_clock \u83b7\u53d6\u7eb3\u79d2\u7ea7\u65f6\u95f4\u6233 yasio::highp_clock \u83b7\u53d6\u5fae\u79d2\u7ea7\u65f6\u95f4\u6233 yasio::clock \u83b7\u53d6\u6beb\u79d2\u7ea7\u65f6\u95f4\u6233 yasio::set_thread_name \u8bbe\u7f6e\u8c03\u7528\u8005\u7ebf\u7a0b\u540d yasio::basic_strfmt \u683c\u5f0f\u5316\u5b57\u7b26\u4e32"},{"location":"api/reference/others/#yasiohost_to_network","title":"yasio::host_to_network","text":"<p>\u4e3b\u673a\u5b57\u8282\u5e8f\u8f6c\u7f51\u7edc\u5b57\u8282\u5e8f\u3002</p>"},{"location":"api/reference/others/#_3","title":"\u5934\u6587\u4ef6","text":"<p><code>yasio/detail/endian_portable.hpp</code></p> <pre><code>template &lt;typename _Ty&gt;\ninline _Ty host_to_network(_Ty value);\ninline int host_to_network(int value, int size);\n</code></pre>"},{"location":"api/reference/others/#_4","title":"\u53c2\u6570","text":"<p>value \u8981\u8f6c\u6362\u7684\u6570\u503c\uff0cvalue\u7c7b\u578b _Ty \u53ef\u4ee5\u662f\u4efb\u610f1~8\u5b57\u8282\u6570\u503c\u7c7b\u578b\u3002</p> <p>size \u8981\u8f6c\u6362\u7684\u6570\u503c\u6709\u6548\u5b57\u8282\u6570\uff0c\u53ea\u80fd\u662f1~4\u5b57\u8282\u3002</p>"},{"location":"api/reference/others/#_5","title":"\u8fd4\u56de\u503c","text":"<p>\u7f51\u7edc\u5b57\u8282\u5e8f\u6570\u503c\u3002</p>"},{"location":"api/reference/others/#_6","title":"\u793a\u4f8b","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;inttypes.h&gt;\n#include \"yasio/detail/endian_portable.hpp\"\nint main(){\nuint16_t v1 = 0x1122;\nuint32_t v2 = 0x11223344;\nuint64_t v3 = 0x1122334455667788;\n// output will be: net.v1=2211, net.v2=44332211, net.v3=8877665544332211\nprintf(\"net.v1=%04\" PRIx16 \", net.v2=%08\" PRIx32 \", net.v3=%016\" PRIx64 \"\\n\",\nyasio::host_to_network(v1),\nyasio::host_to_network(v2),\nyasio::host_to_network(v3));\nreturn 0;\n}\n</code></pre>"},{"location":"api/reference/others/#yasionetwork_to_host","title":"yasio::network_to_host","text":"<p>\u7f51\u7edc\u5b57\u8282\u5e8f\u8f6c\u4e3b\u673a\u5b57\u8282\u5e8f\u3002</p>"},{"location":"api/reference/others/#_7","title":"\u5934\u6587\u4ef6","text":"<p><code>yasio/detail/endian_portable.hpp</code></p> <pre><code>template &lt;typename _Ty&gt;\ninline _Ty network_to_host(_Ty value);\ninline int network_to_host(int value, int size);\n</code></pre>"},{"location":"api/reference/others/#_8","title":"\u53c2\u6570","text":"<p>value \u8981\u8f6c\u6362\u7684\u6570\u503c\uff0cvalue\u7c7b\u578b _Ty \u53ef\u4ee5\u662f\u4efb\u610f1~8\u5b57\u8282\u6570\u503c\u7c7b\u578b\u3002</p> <p>size \u8981\u8f6c\u6362\u7684\u6570\u503c\u6709\u6548\u5b57\u8282\u6570\uff0c\u53ea\u80fd\u662f1~4\u5b57\u8282\u3002</p>"},{"location":"api/reference/others/#_9","title":"\u8fd4\u56de\u503c","text":"<p>\u4e3b\u673a\u5b57\u8282\u5e8f\u6570\u503c\u3002</p>"},{"location":"api/reference/others/#_10","title":"\u793a\u4f8b","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;inttypes.h&gt;\n#include \"yasio/detail/endian_portable.hpp\"\nint main(){\nuint16_t v1 = 0x2211;\nuint32_t v2 = 0x44332211;\nuint64_t v3 = 0x8877665533442211;\n// output will be: net.v1=1122, net.v2=11223344, net.v3=1122334455667788\nprintf(\"host.v1=%04\" PRIx16 \", host.v2=%08\" PRIx32 \", host.v3=%016\" PRIx64 \"\\n\",\nyasio::network_to_host(v1),\nyasio::network_to_host(v2),\nyasio::network_to_host(v3));\nreturn 0;\n}\n</code></pre>"},{"location":"api/reference/others/#yasioxhighp_clock","title":"yasio::xhighp_clock","text":"<p>\u83b7\u53d6\u7eb3\u79d2\u7ea7\u65f6\u95f4\u6233\u3002</p>"},{"location":"api/reference/others/#_11","title":"\u5934\u6587\u4ef6","text":"<p><code>yasio/detail/utils.hpp</code></p> <pre><code>template &lt;typename _Ty = steady_clock_t&gt;\ninline highp_time_t xhighp_clock();\n</code></pre>"},{"location":"api/reference/others/#_12","title":"\u6a21\u677f\u53c2\u6570","text":"<p>_Ty</p> <ul> <li>yasio::steady_clock_t: \u8fd4\u56de\u5f53\u524d\u7cfb\u7edf\u65f6\u95f4\u65e0\u5173\u7684\u65f6\u95f4\u6233</li> <li>yasio::system_clock_t: \u8fd4\u56de\u7cfb\u7edfUTC\u65f6\u95f4\u6233</li> </ul>"},{"location":"api/reference/others/#_13","title":"\u8fd4\u56de\u503c","text":"<p>\u7eb3\u79d2\u7ea7\u65f6\u95f4\u6233\u3002</p>"},{"location":"api/reference/others/#yasiohighp_clock","title":"yasio::highp_clock","text":"<p>\u83b7\u53d6\u5fae\u79d2\u7ea7\u65f6\u95f4\u6233\u3002</p>"},{"location":"api/reference/others/#_14","title":"\u5934\u6587\u4ef6","text":"<p><code>yasio/detail/utils.hpp</code></p> <pre><code>template &lt;typename _Ty = steady_clock_t&gt;\ninline highp_time_t highp_clock();\n</code></pre>"},{"location":"api/reference/others/#_15","title":"\u6a21\u677f\u53c2\u6570","text":"<p>_Ty</p> <ul> <li><code>yasio::steady_clock_t</code>: \u8fd4\u56de\u5f53\u524d\u7cfb\u7edf\u65f6\u95f4\u65e0\u5173\u7684\u65f6\u95f4\u6233</li> <li><code>yasio::system_clock_t</code>: \u8fd4\u56de\u7cfb\u7edfUTC\u65f6\u95f4\u6233</li> </ul>"},{"location":"api/reference/others/#_16","title":"\u8fd4\u56de\u503c","text":"<p>\u5fae\u79d2\u7ea7\u65f6\u95f4\u6233\u3002</p>"},{"location":"api/reference/others/#yasioclock","title":"yasio::clock","text":"<p>\u83b7\u53d6\u6beb\u79d2\u7ea7\u65f6\u95f4\u6233\u3002</p>"},{"location":"api/reference/others/#_17","title":"\u5934\u6587\u4ef6","text":"<p><code>yasio/detail/utils.hpp</code></p> <pre><code>template &lt;typename _Ty = steady_clock_t&gt;\ninline highp_time_t clock();\n</code></pre>"},{"location":"api/reference/others/#_18","title":"\u6a21\u677f\u53c2\u6570","text":"<p>_Ty</p> <ul> <li><code>yasio::steady_clock_t</code>: \u8fd4\u56de\u5f53\u524d\u7cfb\u7edf\u65f6\u95f4\u65e0\u5173\u7684\u65f6\u95f4\u6233</li> <li><code>yasio::system_clock_t</code>: \u8fd4\u56de\u7cfb\u7edfUTC\u65f6\u95f4\u6233</li> </ul>"},{"location":"api/reference/others/#_19","title":"\u8fd4\u56de\u503c","text":"<p>\u6beb\u79d2\u7ea7\u65f6\u95f4\u6233\u3002</p>"},{"location":"api/reference/others/#yasioset_thread_name","title":"yasio::set_thread_name","text":"<p>\u8bbe\u7f6e\u8c03\u7528\u8005\u7ebf\u7a0b\u540d\u3002</p>"},{"location":"api/reference/others/#_20","title":"\u5934\u6587\u4ef6","text":"<p><code>yasio/detail/thread_name.hpp</code></p> <pre><code>inline void set_thread_name(const char* name);\n</code></pre>"},{"location":"api/reference/others/#_21","title":"\u53c2\u6570","text":"<p>name \u9700\u8981\u8bbe\u7f6e\u7ebf\u7a0b\u540d\u79f0</p>"},{"location":"api/reference/others/#_22","title":"\u6ce8\u610f","text":"<p>\u6b64\u51fd\u6570\u7528\u4e8e\u8bca\u65ad\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u975e\u5e38\u6709\u7528\u3002</p>"},{"location":"api/reference/others/#yasiobasic_strfmt","title":"yasio::basic_strfmt","text":"<p>\u51fd\u6570\u6a21\u677f\uff0c\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6216\u8005\u5bbd\u5b57\u7b26\u4e32\u3002</p>"},{"location":"api/reference/others/#_23","title":"\u5934\u6587\u4ef6","text":"<p><code>yasio/detail/strfmt.hpp</code></p> <pre><code>template &lt;class _Elem, class _Traits = std::char_traits&lt;_Elem&gt;,\nclass _Alloc = std::allocator&lt;_Elem&gt;&gt;\ninline std::basic_string&lt;_Elem, _Traits, _Alloc&gt; basic_strfmt(size_t n, const _Elem* format, ...);\n</code></pre>"},{"location":"api/reference/others/#_24","title":"\u53c2\u6570","text":"<p>n \u521d\u59cbbuffer\u5927\u5c0f</p> <p>format \u683c\u5f0f\u5b57\u7b26\u4e32\uff0c\u548c\u6807\u51c6\u5e93<code>printf</code>\u76f8\u540c</p>"},{"location":"api/reference/others/#_25","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u683c\u5f0f\u5316\u540e\u7684<code>std::string</code>\u7c7b\u578b\u5b57\u7b26\u4e32\u3002</p>"},{"location":"api/reference/others/#_26","title":"\u6ce8\u610f","text":"<p>\u5b9e\u9645\u4f7f\u7528\uff0c\u53ef\u76f4\u63a5\u4f7f\u7528\u5df2\u7ecf\u5b9a\u4e49\u597d\u7684\u522b\u540d</p> <ul> <li><code>yasio::strfmt</code>: \u683c\u5f0f\u5316\u5b57\u7b26\u4e32</li> <li><code>yasio::wcsfmt</code>: \u683c\u5f0f\u5316\u5bbd\u5b57\u7b26\u4e32</li> </ul>"},{"location":"api/reference/others/#_27","title":"\u793a\u4f8b","text":"<pre><code>#include \"yasio/detail/strfmt.hpp\"\nint main() {\nstd::string str1 = yasio::strfmt(64, \"My age is %d\", 19);\nstd::wstring str2 = yasio::wcsfmt(64, L\"My age is %d\", 19);\nreturn 0;\n}\n</code></pre>"},{"location":"api/reference/xxsocket-class/","title":"xxsocket Class","text":"<p>\u5c01\u88c5\u5e95\u5c42bsd socket\u5e38\u7528API\uff0c\u5c4f\u853d\u5404\u64cd\u4f5c\u7cfb\u7edf\u5e73\u53f0\u5dee\u5f02\uff0cyasio\u7684\u8d77\u6e90\u3002</p> <p>\u7279\u522b\u6ce8\u610f</p> <p>xxsocket\u9664\u4e86 <code>accept_n</code>\u4ee5\u5916\u7684\u6240\u6709 <code>xxx_n</code> \u63a5\u53e3\u5747\u4f1a\u5c06\u5f53\u524dsocket\u5bf9\u8c61\u5e95\u5c42\u63cf\u8ff0\u7b26\u8bbe\u7f6e\u4e3a\u975e\u963b\u585e\u6a21\u5f0f\uff0c\u4e14\u4e0d\u4f1a\u6062\u590d\u3002</p>"},{"location":"api/reference/xxsocket-class/#_1","title":"\u8bed\u6cd5","text":"<pre><code>namespace yasio { inline namespace inet { class xxsocket; } }\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_2","title":"\u6210\u5458","text":"Name Description xxsocket::xxsocket \u6784\u9020\u4e00\u4e2a <code>xxsocket</code> \u5bf9\u8c61"},{"location":"api/reference/xxsocket-class/#_3","title":"\u516c\u5171\u65b9\u6cd5","text":"Name Description xxsocket::xpconnect \u5efa\u7acbTCP\u8fde\u63a5 xxsocket::xpconnect_n \u975e\u963b\u585e\u65b9\u5f0f\u5efa\u7acbTCP\u8fde\u63a5 xxsocket::pconnect \u5efa\u7acbTCP\u8fde\u63a5 xxsocket::pconnect_n \u975e\u963b\u585e\u65b9\u5f0f\u5efa\u7acbTCP\u8fde\u63a5 xxsocket::pserve \u521b\u5efatcp\u670d\u52a1\u7aef xxsocket::swap \u4ea4\u6362socket\u63cf\u8ff0\u7b26\u53e5\u67c4 xxsocket::open \u6253\u5f00socket xxsocket::reopen \u91cd\u65b0\u6253\u5f00socket xxsocket::is_open \u68c0\u67e5socket\u662f\u5426\u6253\u5f00 xxsocket::native_handle \u83b7\u53d6socket\u53e5\u67c4 xxsocket::release_handle \u91ca\u653esocket\u53e5\u67c4\u63a7\u5236\u6743 xxsocket::set_nonblocking \u5c06socket\u8bbe\u7f6e\u4e3a\u975e\u963b\u585e\u6a21\u5f0f xxsocket::test_nonblocking \u68c0\u6d4bsocket\u662f\u5426\u4e3a\u975e\u963b\u585e\u6a21\u5f0f xxsocket::bind \u7ed1\u5b9a\u6307\u5b9a\u672c\u5730\u6307\u5b9a\u7f51\u5361\u5730\u5740 xxsocket::bind_any \u7ed1\u5b9a\u672c\u5730\u4efb\u610f\u5730\u5740 xxsocket::listen \u5f00\u59cbTCP\u76d1\u542c xxsocket::accept \u63a5\u53d7\u4e00\u4e2aTCP\u5ba2\u6237\u7aef\u8fde\u63a5 xxsocket::accept_n \u975e\u963b\u585e\u65b9\u5f0f\u63a5\u53d7TCP\u8fde\u63a5 xxsocket::connect \u5efa\u7acb\u8fde\u63a5 xxsocket::connect_n \u975e\u963b\u585e\u65b9\u5f0f\u5efa\u7acb\u8fde\u63a5 xxsocket::disconnect \u65ad\u5f00UDP\u548c\u8fdc\u7a0b\u5730\u5740\u7684\u7ed1\u5b9a xxsocket::send \u53d1\u9001\u6570\u636e xxsocket::send_n \u975e\u963b\u585e\u65b9\u5f0f\u53d1\u9001\u6570\u636e xxsocket::recv \u63a5\u53d7\u6570\u636e xxsocket::recv_n \u975e\u963b\u585e\u65b9\u5f0f\u63a5\u53d7\u6570\u636e xxsocket::sendto \u53d1\u9001DGRAM\u6570\u636e\u5230\u6307\u5b9a\u5730\u5740 xxsocket::recvfrom \u63a5\u53d7DGRAM\u6570\u636e xxsocket::handle_write_ready \u7b49\u5f85socket\u53ef\u5199 xxsocket::handle_read_ready \u7b49\u5f85socket\u53ef\u8bfb xxsocket::local_endpoint \u83b7\u53d6socket\u672c\u5730\u5730\u5740 xxsocket::peer_endpoint \u83b7\u53d6socket\u8fdc\u7aef\u5730\u5740 xxsocket::set_keepalive \u8bbe\u7f6etcp keepalive xxsocket::reuse_address \u8bbe\u7f6esocket\u662f\u5426\u91cd\u7528\u5730\u5740 xxsocket::exclusive_address \u8bbe\u7f6esocket\u662f\u5426\u963b\u6b62\u5730\u5740\u91cd\u7528 xxsocket::select \u76d1\u542csocket\u4e8b\u4ef6 xxsocket::shutdown \u505c\u6b62socket\u6536\u53d1 xxsocket::close \u5173\u95edsocket xxsocket::tcp_rtt \u83b7\u53d6tcp rtt. xxsocket::get_last_errno \u83b7\u53d6\u6700\u8fd1socket\u9519\u8bef\u7801 xxsocket::set_last_errno \u8bbe\u7f6e\u6700\u8fd1socket\u9519\u8bef\u7801 xxsocket::strerror \u5c06socket\u9519\u8bef\u7801\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32 xxsocket::strerror_r \u5c06socket\u9519\u8bef\u7801\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff0c\u7ebf\u7a0b\u5b89\u5168 xxsocket::gai_strerror \u5c06getaddrinfo\u8fd4\u56de\u503c\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32 xxsocket::resolve \u89e3\u6790\u57df\u540d xxsocket::resolve_v4 \u89e3\u6790\u57df\u540d\u5305\u542b\u7684ipv4\u5730\u5740 xxsocket::resolve_v6 \u89e3\u6790\u57df\u540d\u5305\u542b\u7684ipv6\u5730\u5740 xxsocket::resolve_v4to6 \u89e3\u6790\u57df\u540d\u5305\u542b\u7684ipv4\u5730\u5740\u5e76\u8f6c\u6362\u4e3aipv6\u7684V4MAPPED\u683c\u5f0f xxsocket::resolve_tov6 \u89e3\u6790\u57df\u540d\u5305\u542b\u7684\u6240\u6709\u5730\u5740\uff0cipv4\u5730\u5740\u4f1a\u8f6c\u6362\u4e3aipv6\u7684V4MAPPED\u683c\u5f0f xxsocket::getipsv \u83b7\u53d6\u672c\u673a\u652f\u6301\u7684ip\u534f\u8bae\u6808\u7248\u672c\u6807\u5fd7\u4f4d xxsocket::traverse_local_address \u679a\u4e3e\u672c\u673a\u5730\u5740"},{"location":"api/reference/xxsocket-class/#xxsocketxxsocket","title":"xxsocket::xxsocket","text":"<p>\u6784\u9020 <code>xxsocket</code> \u5bf9\u8c61\u3002</p> <pre><code>xxsocket::xxsocket();\nxxsocket::xxsocket(socket_native_type handle);\nxxsocket::xxsocket(xxsocket&amp;&amp; right);\nxxsocket::xxsocket(int af, int type, int protocol);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_4","title":"\u53c2\u6570","text":"<p>handle \u901a\u8fc7\u5df2\u6709socket\u53e5\u67c4\u6784\u9020 <code>xxsocket</code> \u5bf9\u8c61\u3002</p> <p>right move\u6784\u9020\u51fd\u6570\u53f3\u503c\u5f15\u7528\u3002</p> <p>af ip\u534f\u8bae\u5730\u5740\u7c7b\u578b\u3002</p> <p>protocol \u534f\u8bae\u7c7b\u578b\uff0c\u5bf9\u4e8eTCP/UDP\u76f4\u63a5\u4f20 <code>0</code> \u5c31\u53ef\u4ee5\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketxpconnect","title":"xxsocket::xpconnect","text":"<p>\u548c\u8fdc\u7a0b\u670d\u52a1\u5668\u5efa\u7acbTCP\u8fde\u63a5\u3002</p> <pre><code>int xxsocket::xpconnect(const char* hostname, u_short port, u_short local_port = 0);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_5","title":"\u53c2\u6570","text":"<p>hostname \u8981\u8fde\u63a5\u670d\u52a1\u5668\u4e3b\u673a\u540d\uff0c\u53ef\u4ee5\u662f <code>IP\u5730\u5740</code> \u6216 <code>\u57df\u540d</code>\u3002</p> <p>port \u8981\u8fde\u63a5\u670d\u52a1\u5668\u7684\u7aef\u53e3\u3002</p> <p>local_port \u672c\u5730\u901a\u4fe1\u7aef\u53e3\u53f7\uff0c\u9ed8\u8ba4\u503c <code>0</code> \u8868\u793a\u968f\u673a\u5206\u914d\u3002</p>"},{"location":"api/reference/xxsocket-class/#_6","title":"\u6ce8\u610f","text":"<p>\u4f1a\u81ea\u52a8\u68c0\u6d4b\u672c\u673a\u652f\u6301\u7684ip\u534f\u8bae\u6808\u7248\u672c\u3002</p>"},{"location":"api/reference/xxsocket-class/#_7","title":"\u8fd4\u56de\u503c","text":"<p><code>0</code>: \u6210\u529f\uff0c <code>&lt; 0</code>\u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketxpconnect_n","title":"xxsocket::xpconnect_n","text":"<p>\u548c\u8fdc\u7a0b\u670d\u52a1\u5668\u5efa\u7acbTCP\u8fde\u63a5\u3002</p> <pre><code>int xxsocket::xpconnect_n(const char* hostname, u_short port, const std::chrono::microseconds&amp; wtimeout, u_short local_port = 0);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_8","title":"\u53c2\u6570","text":"<p>hostname \u8981\u8fde\u63a5\u670d\u52a1\u5668\u4e3b\u673a\u540d\uff0c\u53ef\u4ee5\u662f <code>IP\u5730\u5740</code> \u6216 <code>\u57df\u540d</code>\u3002</p> <p>port \u8981\u8fde\u63a5\u670d\u52a1\u5668\u7684\u7aef\u53e3\u3002</p> <p>local_port \u672c\u5730\u901a\u4fe1\u7aef\u53e3\u53f7\uff0c\u9ed8\u8ba4\u503c <code>0</code> \u8868\u793a\u968f\u673a\u5206\u914d\u3002</p> <p>wtimeout \u5efa\u7acb\u8fde\u63a5\u8d85\u65f6\u65f6\u95f4\u3002</p>"},{"location":"api/reference/xxsocket-class/#_9","title":"\u8fd4\u56de\u503c","text":"<p><code>0</code>: \u6210\u529f\uff0c <code>&lt; 0</code>\u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#_10","title":"\u6ce8\u610f","text":"<p>\u4f1a\u81ea\u52a8\u68c0\u6d4b\u672c\u673a\u652f\u6301\u7684ip\u534f\u8bae\u6808\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketpconnect","title":"xxsocket::pconnect","text":"<p>\u548c\u8fdc\u7a0b\u670d\u52a1\u5668\u5efa\u7acbTCP\u8fde\u63a5\u3002</p> <pre><code>int xxsocket::pconnect(const char* hostname, u_short port, u_short local_port = 0);\nint xxsocket::pconnect(const endpoint&amp; ep, u_short local_port = 0);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_11","title":"\u53c2\u6570","text":"<p>hostname \u8981\u8fde\u63a5\u670d\u52a1\u5668\u4e3b\u673a\u540d\uff0c\u53ef\u4ee5\u662f <code>IP\u5730\u5740</code> \u6216 <code>\u57df\u540d</code>\u3002</p> <p>ep \u8981\u8fde\u63a5\u670d\u52a1\u5668\u7684\u5730\u5740\u3002</p> <p>port \u8981\u8fde\u63a5\u670d\u52a1\u5668\u7684\u7aef\u53e3\u3002</p> <p>local_port \u672c\u5730\u901a\u4fe1\u7aef\u53e3\u53f7\uff0c\u9ed8\u8ba4\u503c <code>0</code> \u8868\u793a\u968f\u673a\u5206\u914d\u3002</p>"},{"location":"api/reference/xxsocket-class/#_12","title":"\u8fd4\u56de\u503c","text":"<p><code>0</code>: \u6210\u529f\uff0c <code>&lt; 0</code>\u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#_13","title":"\u6ce8\u610f","text":"<p>\u4e0d\u4f1a\u68c0\u6d4b\u672c\u673a\u652f\u6301\u7684ip\u534f\u8bae\u6808\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketpconnect_n","title":"xxsocket::pconnect_n","text":"<p>\u548c\u8fdc\u7a0b\u670d\u52a1\u5668\u5efa\u7acbTCP\u8fde\u63a5\u3002</p> <pre><code>int pconnect_n(const char* hostname, u_short port, const std::chrono::microseconds&amp; wtimeout, u_short local_port = 0);\nint pconnect_n(const char* hostname, u_short port, u_short local_port = 0);\nint pconnect_n(const endpoint&amp; ep, const std::chrono::microseconds&amp; wtimeout, u_short local_port = 0);\nint pconnect_n(const endpoint&amp; ep, u_short local_port = 0);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_14","title":"\u53c2\u6570","text":"<p>hostname \u8981\u8fde\u63a5\u670d\u52a1\u5668\u4e3b\u673a\u540d\uff0c\u53ef\u4ee5\u662f <code>IP\u5730\u5740</code> \u6216 <code>\u57df\u540d</code>\u3002</p> <p>ep \u8981\u8fde\u63a5\u670d\u52a1\u5668\u7684\u5730\u5740\u3002</p> <p>port \u8981\u8fde\u63a5\u670d\u52a1\u5668\u7684\u7aef\u53e3\u3002</p> <p>local_port \u672c\u5730\u901a\u4fe1\u7aef\u53e3\u53f7\uff0c\u9ed8\u8ba4\u503c <code>0</code> \u8868\u793a\u968f\u673a\u5206\u914d\u3002</p> <p>wtimeout \u5efa\u7acb\u8fde\u63a5\u8d85\u65f6\u65f6\u95f4\u3002</p>"},{"location":"api/reference/xxsocket-class/#_15","title":"\u8fd4\u56de\u503c","text":"<p><code>0</code>: \u6210\u529f\uff0c <code>&lt; 0</code>\u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketpserve","title":"xxsocket::pserve","text":"<p>\u5f00\u542f\u672c\u5730TCP\u670d\u52a1\u76d1\u542c\u3002</p> <pre><code>int pserve(const char* addr, u_short port);\nint pserve(const endpoint&amp; ep);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_16","title":"\u53c2\u6570","text":"<p>addr \u672c\u673a\u6307\u5b9a\u7f51\u5361 <code>IP\u5730\u5740</code>\u3002</p> <p>ep \u672c\u673a\u5730\u5740\u3002</p> <p>port TCP\u76d1\u542c\u7aef\u53e3\u3002</p>"},{"location":"api/reference/xxsocket-class/#_17","title":"\u8fd4\u56de\u503c","text":"<p><code>0</code>: \u6210\u529f\uff0c <code>&lt; 0</code>\u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#_18","title":"\u793a\u4f8b","text":"<pre><code>// xxsocket-serve.cpp\n#include &lt;signal.h&gt;\n#include &lt;vector&gt;\n#include \"yasio/xxsocket.hpp\"\nusing namespace yasio;\nxxsocket g_server;\nstatic bool g_stopped = false;\nvoid process_exit(int sig)\n{\nif (sig == SIGINT)\n{\ng_stopped = true;\ng_server.close();\n}\nprintf(\"exit\");\n}\nint main()\n{\nsignal(SIGINT, process_exit);\nif (g_server.pserve(\"0.0.0.0\", 1219) != 0)\nreturn -1;\nconst char reply_msg[] = \"hi, I'm server\\n\";\ndo\n{\nxxsocket cs = g_server.accept();\nif (cs.is_open())\n{\ncs.send(reply_msg, sizeof(reply_msg) - 1);\nstd::this_thread::sleep_for(std::chrono::milliseconds(100));\n}\n} while (!g_stopped);\nreturn 0;\n}\n</code></pre>"},{"location":"api/reference/xxsocket-class/#xxsocketswap","title":"xxsocket::swap","text":"<p>\u4ea4\u6362\u5e95\u5c42socket\u53e5\u67c4\u3002</p> <pre><code>xxsocket&amp; swap(xxsocket&amp; who);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_19","title":"\u53c2\u6570","text":"<p>who \u4ea4\u6362\u5bf9\u8c61\u3002</p>"},{"location":"api/reference/xxsocket-class/#_20","title":"\u8fd4\u56de\u503c","text":"<p><code>xxsocket</code> \u5de6\u503c\u5bf9\u8c61\u7684\u5f15\u7528\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketopen","title":"xxsocket::open","text":"<p>\u6253\u5f00\u4e00\u4e2asocket\u3002</p> <pre><code>bool open(int af = AF_INET, int type = SOCK_STREAM, int protocol = 0);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_21","title":"\u53c2\u6570","text":"<p>af \u5730\u5740\u7c7b\u578b\uff0c\u4f8b\u5982 <code>AF_INET</code> (ipv4)\uff0c<code>AF_INET6</code> (ipv6)\u3002</p> <p>type socket\u7c7b\u578b\uff0c <code>SOCK_STREAM</code> (TCP), <code>SOCK_DGRAM</code> (UDP)\u3002</p> <p>protocol \u534f\u8bae\uff0c\u5bf9\u4e8eTCP/UDP\uff0c\u4f20 <code>0</code> \u5373\u53ef\u3002</p>"},{"location":"api/reference/xxsocket-class/#_22","title":"\u8fd4\u56de\u503c","text":"<p><code>true</code>: \u6210\u529f\uff0c <code>false</code>\u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketreopen","title":"xxsocket::reopen","text":"<p>\u6253\u5f00\u4e00\u4e2asocket\u3002</p> <pre><code>bool reopen(int af = AF_INET, int type = SOCK_STREAM, int protocol = 0);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_23","title":"\u53c2\u6570","text":"<p>af \u5730\u5740\u7c7b\u578b\uff0c\u4f8b\u5982 <code>AF_INET</code> (ipv4)\uff0c<code>AF_INET6</code> (ipv6)\u3002</p> <p>type socket\u7c7b\u578b\uff0c <code>SOCK_STREAM</code> (TCP), <code>SOCK_DGRAM</code> (UDP)\u3002</p> <p>protocol \u534f\u8bae\uff0c\u5bf9\u4e8eTCP/UDP\uff0c\u4f20 <code>0</code> \u5373\u53ef\u3002</p>"},{"location":"api/reference/xxsocket-class/#_24","title":"\u8fd4\u56de\u503c","text":"<p><code>true</code>: \u6210\u529f\uff0c <code>false</code>\u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#_25","title":"\u6ce8\u610f","text":"<p>\u5982\u679csocket\u5df2\u6253\u5f00\uff0c\u6b64\u51fd\u6570\u4f1a\u5148\u5173\u95ed\uff0c\u518d\u91cd\u65b0\u6253\u5f00\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketis_open","title":"xxsocket::is_open","text":"<p>\u5224\u65adsocket\u662f\u5426\u5df2\u6253\u5f00\u3002</p> <pre><code>bool is_open() const;\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_26","title":"\u8fd4\u56de\u503c","text":"<p><code>true</code>: \u5df2\u6253\u5f00\uff0c <code>false</code>: \u672a\u6253\u5f00\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketnative_handle","title":"xxsocket::native_handle","text":"<p>\u83b7\u53d6socket\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002</p> <pre><code>socket_native_type native_handle() const;\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_27","title":"\u8fd4\u56de\u503c","text":"<p>socket\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c<code>yasio::inet::invalid_socket</code> \u8868\u793a\u65e0\u6548socket\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketrelease_handle","title":"xxsocket::release_handle","text":"<p>\u91ca\u653e\u5e95\u5c42socket\u63cf\u8ff0\u7b26\u63a7\u5236\u6743\u3002</p> <pre><code>socket_native_type release_handle() const;\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_28","title":"\u8fd4\u56de\u503c","text":"<p>\u91ca\u653e\u524d\u7684socket\u6587\u4ef6\u63cf\u8ff0\u7b26</p>"},{"location":"api/reference/xxsocket-class/#xxsocketset_nonblocking","title":"xxsocket::set_nonblocking","text":"<p>\u8bbe\u7f6esocket\u7684\u975e\u963b\u585e\u6a21\u5f0f\u3002</p> <pre><code>int set_nonblocking(bool nonblocking) const;\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_29","title":"\u53c2\u6570","text":"<p>nonblocking <code>true</code>: \u975e\u963b\u585e\u6a21\u5f0f\uff0c<code>false</code>: \u963b\u585e\u6a21\u5f0f\u3002</p>"},{"location":"api/reference/xxsocket-class/#_30","title":"\u8fd4\u56de\u503c","text":"<p><code>0</code>: \u6210\u529f\uff0c <code>&lt; 0</code>\u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsockettest_nonblocking","title":"xxsocket::test_nonblocking","text":"<p>\u68c0\u6d4bsocket\u662f\u5426\u4e3a\u975e\u963b\u585e\u6a21\u5f0f\u3002</p> <pre><code>int test_nonblocking() const;\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_31","title":"\u8fd4\u56de\u503c","text":"<p><code>1</code>: \u975e\u963b\u585e\u6a21\u5f0f\uff0c <code>0</code>: \u963b\u585e\u6a21\u5f0f\u3002</p>"},{"location":"api/reference/xxsocket-class/#_32","title":"\u6ce8\u610f","text":"<p>\u5bf9\u4e8ewinsock2\uff0c\u672a\u8fde\u63a5\u7684 <code>SOCK_STREAM</code> \u7c7b\u578bsocket\u4f1a\u8fd4\u56de <code>-1</code>\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketbind","title":"xxsocket::bind","text":"<p>\u7ed1\u5b9asocket\u672c\u673a\u5730\u5740\u3002</p> <pre><code>int bind(const char* addr, unsigned short port) const;\nint bind(const endpoint&amp; ep) const;\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_33","title":"\u53c2\u6570","text":"<p>addr \u672c\u673a\u6307\u5b9a\u7f51\u5361ip\u5730\u5740\u3002</p> <p>port \u8981\u7ed1\u5b9a\u7684\u7aef\u53e3\u3002</p> <p>ep \u8981\u7ed1\u5b9a\u7684\u672c\u673a\u5730\u5740\u3002</p>"},{"location":"api/reference/xxsocket-class/#_34","title":"\u8fd4\u56de\u503c","text":"<p><code>0</code>: \u6210\u529f\uff0c <code>&lt; 0</code>\u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketbind_any","title":"xxsocket::bind_any","text":"<p>\u7ed1\u5b9asocket\u672c\u673a\u4efb\u610f\u5730\u5740\u3002</p> <pre><code>int bind_any(bool ipv6) const;\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_35","title":"\u53c2\u6570","text":"<p>ipv6 \u662f\u5426\u7ed1\u5b9a\u672c\u673a\u4efb\u610fIPv6\u5730\u5740</p>"},{"location":"api/reference/xxsocket-class/#_36","title":"\u8fd4\u56de\u503c","text":"<p><code>0</code>: \u6210\u529f\uff0c <code>&lt; 0</code>\u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketlisten","title":"xxsocket::listen","text":"<p>\u5f00\u59cb\u76d1\u542c\u6765\u81eaTCP\u5ba2\u6237\u7aef\u7684\u63e1\u624b\u8bf7\u6c42\u3002</p> <pre><code>int listen(int backlog = SOMAXCONN) const;\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_37","title":"\u53c2\u6570","text":"<p>backlog \u6700\u5927\u76d1\u542c\u6570\u3002</p>"},{"location":"api/reference/xxsocket-class/#_38","title":"\u8fd4\u56de\u503c","text":"<p><code>0</code>: \u6210\u529f\uff0c <code>&lt; 0</code>\u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketaccept","title":"xxsocket::accept","text":"<p>\u63a5\u53d7\u4e00\u4e2a\u5ba2\u6237\u7aef\u8fde\u63a5\u3002</p> <pre><code>xxsocket accept() const;\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_39","title":"\u8fd4\u56de\u503c","text":"<p>\u548c\u5ba2\u6237\u7aef\u901a\u4fe1\u7684 <code>xxsocket</code> \u5bf9\u8c61\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketaccept_n","title":"xxsocket::accept_n","text":"<p>\u975e\u963b\u585e\u65b9\u5f0f\u63a5\u53d7\u4e00\u4e2a\u5ba2\u6237\u7aef\u8fde\u63a5\u3002</p> <pre><code>int accept_n(socket_native_type&amp; new_sock) const;\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_40","title":"\u53c2\u6570","text":"<p>new_sock \u8f93\u51fa\u53c2\u6570\uff0c\u548c\u5ba2\u6237\u7aef\u901a\u4fe1\u7684\u5e95\u5c42socket\u53e5\u67c4\u5f15\u7528</p>"},{"location":"api/reference/xxsocket-class/#_41","title":"\u8fd4\u56de\u503c","text":"<p><code>0</code>: \u6210\u529f\uff0c <code>&lt; 0</code>\u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#_42","title":"\u6ce8\u610f","text":"<p>\u5982\u679c\u6b64\u51fd\u6570\u8fd4\u56de<code>0</code>\uff0cnew_sock \u4f1a\u88ab\u8bbe\u7f6e\u4e3a\u975e\u963b\u585e\u6a21\u5f0f\u3002</p> <p>\u8c03\u7528\u6b64\u51fd\u6570\u4e4b\u524d\uff0c\u8bf7\u624b\u52a8\u8c03\u7528 <code>xxsocket::set_nonblocking</code> \u5c06socket\u8bbe\u7f6e\u4e3a\u975e\u963b\u585e\u6a21\u5f0f\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketconnect","title":"xxsocket::connect","text":"<p>\u5efa\u7acb\u8fde\u63a5\u3002</p> <pre><code>int connect(const char* addr, u_short port);\nint connect(const endpoint&amp; ep);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_43","title":"\u53c2\u6570","text":"<p>addr \u8fdc\u7a0b\u4e3b\u673aip\u5730\u5740\u3002</p> <p>port \u8fdc\u7a0b\u4e3b\u673a\u7aef\u53e3\u3002</p> <p>ep \u8fdc\u7a0b\u4e3b\u673a\u5730\u5740\u3002</p>"},{"location":"api/reference/xxsocket-class/#_44","title":"\u8fd4\u56de\u503c","text":"<p><code>0</code>: \u6210\u529f\uff0c <code>&lt; 0</code>\u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#_45","title":"\u6ce8\u610f","text":"<p>TCP: \u53d1\u8d77TCP\u4e09\u6b21\u63e1\u624b  </p> <p>UDP: \u5efa\u7acb4\u5143\u7ec4\u7ed1\u5b9a</p>"},{"location":"api/reference/xxsocket-class/#xxsocketconnect_n","title":"xxsocket::connect_n","text":"<p>\u5efa\u7acb\u8fde\u63a5\u3002</p> <pre><code>int connect_n(const char* addr, u_short port, const std::chrono::microseconds&amp; wtimeout);\nint connect_n(const endpoint&amp; ep, const std::chrono::microseconds&amp; wtimeout);\nint connect_n(const endpoint&amp; ep);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_46","title":"\u53c2\u6570","text":"<p>addr \u8fdc\u7a0b\u4e3b\u673aip\u5730\u5740\u3002</p> <p>port \u8fdc\u7a0b\u4e3b\u673a\u7aef\u53e3\u3002</p> <p>ep \u8fdc\u7a0b\u4e3b\u673a\u5730\u5740\u3002</p> <p>wtimeout \u5efa\u7acb\u8fde\u63a5\u7684\u8d85\u65f6\u65f6\u95f4\u3002</p>"},{"location":"api/reference/xxsocket-class/#_47","title":"\u8fd4\u56de\u503c","text":"<p><code>0</code>: \u6210\u529f\uff0c <code>&lt; 0</code>\u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#_48","title":"\u6ce8\u610f","text":"<p>TCP: \u53d1\u8d77TCP\u4e09\u6b21\u63e1\u624b  </p> <p>UDP: \u5efa\u7acb4\u5143\u7ec4\u7ed1\u5b9a</p>"},{"location":"api/reference/xxsocket-class/#xxsocketdisconnect","title":"xxsocket::disconnect","text":"<p>\u89e3\u9664socket\u548c\u8fdc\u7a0b\u4e3b\u673a\u76844\u5143\u7ec4\u7ed1\u5b9a\u3002</p> <pre><code>int disconnect() const;\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_49","title":"\u8fd4\u56de\u503c","text":"<p><code>0</code>: \u6210\u529f\uff0c <code>&lt; 0</code>\u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#_50","title":"\u6ce8\u610f","text":"<p>\u4ec5\u652f\u6301UDP</p>"},{"location":"api/reference/xxsocket-class/#_51","title":"\u8fd4\u56de\u503c","text":"<p><code>0</code>: \u6210\u529f\uff0c <code>&lt; 0</code>\u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#_52","title":"\u6ce8\u610f","text":"<p>\u53ea\u7528\u4e8e <code>SOCK_DGRAM</code>(UDP) \u7c7b\u578bsocket\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketsend","title":"xxsocket::send","text":"<p>\u5411\u8fdc\u7aef\u53d1\u9001\u6307\u5b9a\u957f\u5ea6\u6570\u636e\u3002</p> <pre><code>int send(const void* buf, int len, int flags = 0);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_53","title":"\u53c2\u6570","text":"<p>buf \u8981\u53d1\u9001\u6570\u636e\u7684\u8d77\u59cb\u5b57\u8282\u5730\u5740\u3002</p> <p>len \u8981\u53d1\u9001\u6570\u636e\u7684\u957f\u5ea6\u3002</p> <p>flags \u53d1\u9001\u6570\u636e\u5e95\u5c42\u6807\u8bb0\u3002</p>"},{"location":"api/reference/xxsocket-class/#_54","title":"\u8fd4\u56de\u503c","text":"<p><code>==len</code>: \u6210\u529f\uff0c <code>&lt; len</code>\u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketsend_n","title":"xxsocket::send_n","text":"<p>\u5728\u8d85\u65f6\u65f6\u95f4\u5185\u5c3d\u529b\u5411\u8fdc\u7aef\u53d1\u9001\u6307\u5b9a\u957f\u5ea6\u6570\u636e\u3002</p> <pre><code>int send_n(const void* buf, int len, const std::chrono::microseconds&amp; wtimeout, int flags = 0);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_55","title":"\u53c2\u6570","text":"<p>buf \u8981\u53d1\u9001\u6570\u636e\u7684\u8d77\u59cb\u5b57\u8282\u5730\u5740\u3002</p> <p>len \u8981\u53d1\u9001\u6570\u636e\u7684\u957f\u5ea6\u3002</p> <p>wtimeout \u53d1\u9001\u8d85\u65f6\u65f6\u95f4\u3002</p> <p>flags \u53d1\u9001\u6570\u636e\u5e95\u5c42\u6807\u8bb0\u3002</p>"},{"location":"api/reference/xxsocket-class/#_56","title":"\u8fd4\u56de\u503c","text":"<p><code>==len</code>: \u6210\u529f\uff0c <code>&lt; len</code>\u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketrecv","title":"xxsocket::recv","text":"<p>\u4ece\u5185\u6838\u53bb\u9664\u8fdc\u7a0b\u4e3b\u673a\u53d1\u9001\u8fc7\u6765\u7684\u6570\u636e\u3002</p> <pre><code>int recv(void* buf, int len, int flags = 0) const;\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_57","title":"\u53c2\u6570","text":"<p>buf \u63a5\u6536\u6570\u636e\u7f13\u51b2\u533a\u3002</p> <p>len \u63a5\u6536\u6570\u636e\u7f13\u51b2\u533a\u957f\u5ea6\u3002</p> <p>flags \u63a5\u6536\u6570\u636e\u5e95\u5c42\u6807\u8bb0\u3002</p>"},{"location":"api/reference/xxsocket-class/#_58","title":"\u8fd4\u56de\u503c","text":"<p><code>==len</code>: \u6210\u529f\uff0c <code>&lt; len</code>\u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#_59","title":"\u6ce8\u610f","text":"<p>\u6b64\u51fd\u6570\u662f\u5426\u7acb\u5373\u8fd4\u56de\uff0c\u53d6\u51b3\u4e8esocket\u672c\u8eab\u662f\u5426\u662f <code>\u975e\u963b\u585e\u6a21\u5f0f</code>\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketrecv_n","title":"xxsocket::recv_n","text":"<p>\u5728\u8d85\u65f6\u65f6\u95f4\u5185\u5c3d\u529b\u4ece\u5185\u6838\u53d6\u51fa\u6307\u5b9a\u957f\u5ea6\u6570\u636e\u3002</p> <pre><code>int recv_n(void* buf, int len, const std::chrono::microseconds&amp; wtimeout, int flags = 0) const;\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_60","title":"\u53c2\u6570","text":"<p>buf \u63a5\u6536\u6570\u636e\u7f13\u51b2\u533a\u3002</p> <p>len \u63a5\u6536\u6570\u636e\u7f13\u51b2\u533a\u957f\u5ea6\u3002</p> <p>wtimeout \u63a5\u6536\u8d85\u65f6\u65f6\u95f4\u3002</p> <p>flags \u63a5\u6536\u6570\u636e\u5e95\u5c42\u6807\u8bb0\u3002</p>"},{"location":"api/reference/xxsocket-class/#_61","title":"\u8fd4\u56de\u503c","text":"<p><code>==len</code>: \u6210\u529f\uff0c <code>&lt; len</code>\u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketsendto","title":"xxsocket::sendto","text":"<p>\u5411\u8fdc\u7a0b\u4e3b\u673a\u53d1\u9001 <code>DGRAM</code> \uff08UDP\uff09\u6570\u636e\u3002</p> <pre><code>int sendto(const void* buf, int len, const endpoint&amp; to, int flags = 0) const;\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_62","title":"\u53c2\u6570","text":"<p>buf \u5f85\u53d1\u9001\u6570\u636e\u7f13\u51b2\u533a\u3002</p> <p>len \u5f85\u53d1\u9001\u6570\u636e\u7f13\u51b2\u533a\u957f\u5ea6\u3002</p> <p>to \u53d1\u9001\u76ee\u6807\u5730\u5740\u3002</p> <p>flags \u53d1\u9001\u6570\u636e\u5e95\u5c42\u6807\u8bb0\u3002</p>"},{"location":"api/reference/xxsocket-class/#_63","title":"\u8fd4\u56de\u503c","text":"<p><code>==len</code>: \u6210\u529f\uff0c <code>&lt; len</code>\u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketrecvfrom","title":"xxsocket::recvfrom","text":"<p>\u4ece\u5185\u6838\u53bb\u9664\u8fdc\u7a0b\u4e3b\u673a\u53d1\u9001\u8fc7\u6765\u7684\u6570\u636e\u3002</p> <pre><code>int recvfrom(void* buf, int len, endpoint&amp; peer, int flags = 0) const;\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_64","title":"\u53c2\u6570","text":"<p>buf \u63a5\u6536\u6570\u636e\u7f13\u51b2\u533a\u3002</p> <p>len \u63a5\u6536\u6570\u636e\u7f13\u51b2\u533a\u957f\u5ea6\u3002</p> <p>peer \u63a5\u6536\u6570\u636e\u6765\u6e90\uff0c\u8f93\u51fa\u53c2\u6570\u3002</p> <p>flags \u63a5\u6536\u6570\u636e\u5e95\u5c42\u6807\u8bb0\u3002</p>"},{"location":"api/reference/xxsocket-class/#_65","title":"\u8fd4\u56de\u503c","text":"<p><code>==len</code>: \u6210\u529f\uff0c <code>&lt; len</code>\u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#_66","title":"\u6ce8\u610f","text":"<p>\u6b64\u51fd\u6570\u662f\u5426\u7acb\u5373\u8fd4\u56de\uff0c\u53d6\u51b3\u4e8esocket\u672c\u8eab\u662f\u5426\u662f <code>\u975e\u963b\u585e\u6a21\u5f0f</code>\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsockethandle_write_ready","title":"xxsocket::handle_write_ready","text":"<p>\u7b49\u5f85socket\u53ef\u5199\u3002</p> <pre><code>int handle_write_ready(const std::chrono::microseconds&amp; wtimeout) const;\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_67","title":"\u53c2\u6570","text":"<p>wtimeout \u7b49\u5f85\u8d85\u65f6\u65f6\u95f4\u3002</p>"},{"location":"api/reference/xxsocket-class/#_68","title":"\u8fd4\u56de\u503c","text":"<p><code>0</code>: \u8d85\u65f6\uff0c <code>1</code>: \u6210\u529f\uff0c <code>&lt; 0</code>: \u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#_69","title":"\u6ce8\u610f","text":"<p>\u901a\u5e38\u5f53\u5185\u6838\u53d1\u9001\u7f13\u51b2\u533a\u6ca1\u6ee1\u7684\u60c5\u51b5\u4e0b\uff0c\u6b64\u51fd\u6570\u4f1a\u7acb\u5373\u8fd4\u56de\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsockethandle_read_ready","title":"xxsocket::handle_read_ready","text":"<p>\u7b49\u5f85socket\u53ef\u8bfb\u3002</p> <pre><code>int handle_read_ready(const std::chrono::microseconds&amp; wtimeout) const;\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_70","title":"\u53c2\u6570","text":"<p>wtimeout \u7b49\u5f85\u8d85\u65f6\u65f6\u95f4\u3002</p>"},{"location":"api/reference/xxsocket-class/#_71","title":"\u8fd4\u56de\u503c","text":"<p><code>0</code>: \u8d85\u65f6\uff0c <code>1</code>: \u6210\u529f\uff0c <code>&lt; 0</code>: \u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketlocal_endpoint","title":"xxsocket::local_endpoint","text":"<p>\u83b7\u53d64\u5143\u7ec4\u901a\u4fe1\u7684\u672c\u5730\u5730\u5740\u3002</p> <pre><code>endpoint local_endpoint() const;\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_72","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u672c\u5730\u5730\u5740\u3002</p>"},{"location":"api/reference/xxsocket-class/#_73","title":"\u6ce8\u610f","text":"<p>\u5982\u679c\u6ca1\u6709\u8c03\u7528\u8fc7 <code>xxsocket::connect</code> \u6216\u8005TCP\u8fde\u63a53\u6b21\u63e1\u624b\u672a\u5b8c\u6210\uff0c\u90a3\u4e48\u8fd4\u56de\u7684\u5730\u5740\u662f <code>0.0.0.0</code></p>"},{"location":"api/reference/xxsocket-class/#xxsocketpeer_endpoint","title":"xxsocket::peer_endpoint","text":"<p>\u83b7\u53d64\u5143\u7ec4\u901a\u4fe1\u7684\u5bf9\u7aef\u5730\u5740\u3002</p> <pre><code>endpoint peer_endpoint() const;\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_74","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u672c\u5730\u5730\u5740\u3002</p>"},{"location":"api/reference/xxsocket-class/#_75","title":"\u6ce8\u610f","text":"<p>\u5982\u679c\u6ca1\u6709\u8c03\u7528\u8fc7 <code>xxsocket::connect</code> \u6216\u8005TCP\u8fde\u63a53\u6b21\u63e1\u624b\u672a\u5b8c\u6210\uff0c\u90a3\u4e48\u8fd4\u56de\u7684\u5730\u5740\u662f <code>0.0.0.0</code></p>"},{"location":"api/reference/xxsocket-class/#xxsocketset_keepalive","title":"xxsocket::set_keepalive","text":"<p>\u8bbe\u7f6eTCP\u5e95\u5c42\u534f\u8bae\u7684\u5fc3\u8df3\u53c2\u6570\u3002</p> <pre><code>int set_keepalive(int flag = 1, int idle = 7200, int interval = 75, int probes = 10);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_76","title":"\u53c2\u6570","text":"<p>flag <code>1</code>: \u5f00\u542f\u5e95\u5c42\u534f\u8bae\u5fc3\u8df3\uff0c<code>0</code>: \u5173\u95ed\u3002</p> <p>idle \u5f53\u5e94\u7528\u5c42\u6ca1\u6709\u4efb\u4f55\u6d88\u606f\u4ea4\u4e92\u540e\uff0c\u542f\u52a8\u5e95\u5c42\u534f\u8bae\u5fc3\u8df3\u63a2\u6d4b\u7684\u6700\u5927\u8d85\u65f6\u65f6\u95f4\uff0c\u5355\u4f4d\uff08\u79d2\uff09\u3002</p> <p>interval \u5f53\u6ca1\u6709\u6536\u5230\u5fc3\u8df3\u56de\u5e94\u65f6\uff0c\u91cd\u590d\u53d1\u9001\u5fc3\u8df3\u63a2\u6d4b\u62a5\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\uff08\u79d2\uff09\u3002</p> <p>probes \u5f53\u6ca1\u6709\u6536\u5230\u5fc3\u8df3\u56de\u5e94\u65f6\uff0c\u6700\u5927\u63a2\u6d4b\u6b21\u6570\uff0c\u8d85\u8fc7\u63a2\u6d4b\u6b21\u6570\u540e\uff0c\u4f1a\u89e6\u53d1\u5e94\u7528\u5c42\u8fde\u63a5\u65ad\u5f00\u3002</p>"},{"location":"api/reference/xxsocket-class/#_77","title":"\u8fd4\u56de\u503c","text":"<p><code>0</code>: \u6210\u529f\uff0c <code>&lt; 0</code>\u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#_78","title":"\u793a\u4f8b","text":"<pre><code>// xxsocket-keepalive.cpp\n#include \"yasio/xxsocket.hpp\"\nusing namespace yasio;\nusing namespace inet;\nint main(){\nxxsocket client;\nif(0 == client.pconnect(\"192.168.1.19\", 80)) {\nclient.set_keepalive(1, 5, 10, 2);\n}\nreturn 0;\n}\n</code></pre>"},{"location":"api/reference/xxsocket-class/#xxsocketreuse_address","title":"xxsocket::reuse_address","text":"<p>\u8bbe\u7f6esocket\u662f\u5426\u5141\u8bb8\u91cd\u7528\u5730\u5740\u3002</p> <pre><code>void reuse_address(bool reuse);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_79","title":"\u53c2\u6570","text":"<p>reuse \u662f\u5426\u91cd\u7528\u3002</p>"},{"location":"api/reference/xxsocket-class/#_80","title":"\u6ce8\u610f","text":"<p>\u6b64\u51fd\u6570\u4e00\u822c\u7528\u4e8e\u670d\u52a1\u5668\u6216\u8005\u7ec4\u64ad\u76d1\u542c\u7aef\u53e3\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketexclusive_address","title":"xxsocket::exclusive_address","text":"<p>\u662f\u5426\u660e\u786e\u4e0d\u5141\u8bb8\u5730\u5740\u91cd\u7528\uff0c\u4ee5\u4fdd\u62a4\u901a\u4fe1\u53cc\u65b9\u5b89\u5168\u3002</p> <pre><code>void exclusive_address(bool exclusive);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_81","title":"\u53c2\u6570","text":"<p>exclusive <code>true</code>: \u4e0d\u5141\u8bb8\uff0c<code>false</code>: \u5141\u8bb8</p>"},{"location":"api/reference/xxsocket-class/#_82","title":"\u6ce8\u610f","text":"<p>\u70b9\u51fb \u67e5\u770b <code>winsock</code> \u5b89\u5168\u62a5\u544a\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketset_optval","title":"xxsocket::set_optval","text":"<p>\u8bbe\u7f6esocket\u9009\u9879\u3002</p> <pre><code>template &lt;typename _Ty&gt; int set_optval(int level, int optname, const _Ty&amp; optval);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_83","title":"\u53c2\u6570","text":"<p>level socket\u9009\u9879\u7ea7\u522b\u3002</p> <p>optname \u9009\u9879\u7c7b\u578b\u3002</p> <p>optval \u9009\u9879\u503c\u3002</p>"},{"location":"api/reference/xxsocket-class/#_84","title":"\u8fd4\u56de\u503c","text":"<p><code>0</code>: \u6210\u529f\uff0c <code>&lt; 0</code>\u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#_85","title":"\u6ce8\u610f","text":"<p>\u6b64\u51fd\u6570\u540cbsd socket <code>setsockopt</code>\u529f\u80fd\u76f8\u540c\uff0c\u53ea\u662f\u4f7f\u7528\u6a21\u677f\u5c01\u88c5\uff0c\u66f4\u65b9\u4fbf\u4f7f\u7528\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketget_optval","title":"xxsocket::get_optval","text":"<p>\u8bbe\u7f6esocket\u9009\u9879\u3002</p> <pre><code>template &lt;typename _Ty&gt; _Ty get_optval(int level, int optname) const\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_86","title":"\u53c2\u6570","text":"<p>level socket\u9009\u9879\u7ea7\u522b\u3002</p> <p>optname \u9009\u9879\u7c7b\u578b\u3002</p>"},{"location":"api/reference/xxsocket-class/#_87","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u9009\u9879\u503c\u3002</p>"},{"location":"api/reference/xxsocket-class/#_88","title":"\u6ce8\u610f","text":"<p>\u6b64\u51fd\u6570\u540cbsd socket <code>getsockopt</code>\u529f\u80fd\u76f8\u540c\uff0c\u53ea\u662f\u4f7f\u7528\u6a21\u677f\u5c01\u88c5\uff0c\u66f4\u65b9\u4fbf\u4f7f\u7528\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketselect","title":"xxsocket::select","text":"<p>\u76d1\u542csocket\u5185\u6838\u4e8b\u4ef6\u3002</p> <pre><code>int select(fd_set* readfds, fd_set* writefds, fd_set* exceptfds, const std::chrono::microseconds&amp; wtimeout)\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_89","title":"\u53c2\u6570","text":"<p>readfds \u53ef\u8bfb\u4e8b\u4ef6\u63cf\u8ff0\u7b26\u6570\u7ec4\u3002</p> <p>writefds \u53ef\u5199\u4e8b\u4ef6\u63cf\u8ff0\u7b26\u6570\u7ec4\u3002</p> <p>exceptfds \u5f02\u5e38\u4e8b\u4ef6\u63cf\u8ff0\u7b26\u6570\u7ec4\u3002</p> <p>wtimeout \u7b49\u5f85\u4e8b\u4ef6\u8d85\u65f6\u4e8b\u4ef6\u3002</p>"},{"location":"api/reference/xxsocket-class/#_90","title":"\u8fd4\u56de\u503c","text":"<p><code>0</code>: \u8d85\u65f6\uff0c<code>&gt; 0</code>: \u6210\u529f\uff0c <code>&lt; 0</code>: \u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketshutdown","title":"xxsocket::shutdown","text":"<p>\u5173\u95edTCP\u4f20\u8f93\u901a\u9053\u3002</p> <pre><code>int shutdown(int how = SD_BOTH) const;\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_91","title":"\u53c2\u6570","text":"<p>how \u5173\u95ed\u901a\u9053\u7c7b\u578b\uff0c\u53ef\u4f20\u4ee5\u4e0b\u679a\u4e3e\u503c</p> <ul> <li><code>SD_SEND</code>: \u53d1\u9001\u901a\u9053</li> <li><code>SD_RECEIVE</code>: \u63a5\u53d7\u901a\u9053</li> <li><code>SD_BOTH</code>: \u5168\u90e8\u5173\u95ed</li> </ul>"},{"location":"api/reference/xxsocket-class/#_92","title":"\u8fd4\u56de\u503c","text":"<p><code>0</code>: \u6210\u529f\uff0c <code>&lt; 0</code>: \u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketclose","title":"xxsocket::close","text":"<p>\u5173\u95edsocket\uff0c\u91ca\u653e\u7cfb\u7edf\u8d44\u6e90\u3002</p> <pre><code>void close(int shut_how = SD_BOTH);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_93","title":"\u53c2\u6570","text":"<p>shut_how \u5173\u95ed\u901a\u9053\u7c7b\u578b\uff0c\u53ef\u4ee5\u4f20\u4ee5\u4e0b\u679a\u4e3e\u503c</p> <ul> <li><code>SD_SEND</code>: \u53d1\u9001\u901a\u9053</li> <li><code>SD_RECEIVE</code>: \u63a5\u53d7\u901a\u9053</li> <li><code>SD_BOTH</code>: \u5168\u90e8\u5173\u95ed</li> <li><code>SD_NONE</code>: \u5168\u90e8\u5173\u95ed</li> </ul>"},{"location":"api/reference/xxsocket-class/#_94","title":"\u8fd4\u56de\u503c","text":"<p><code>0</code>: \u6210\u529f\uff0c <code>&lt; 0</code>: \u5931\u8d25\uff0c\u901a\u8fc7 <code>xxsocket::get_last_errno</code> \u83b7\u53d6\u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#_95","title":"\u6ce8\u610f","text":"<p>\u5982\u679c shut_how != <code>SD_NONE</code>\uff0c\u6b64\u51fd\u6570\u4f1a\u5148\u8c03\u7528 <code>shutdown</code>\uff0c\u518d\u8c03\u7528\u5e95\u5c42 <code>close</code>\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsockettcp_rtt","title":"xxsocket::tcp_rtt","text":"<p>\u83b7\u53d6TCP\u8fde\u63a5\u7684RTT\u3002</p> <pre><code>uint32_t tcp_rtt() const;\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_96","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56deTCP\u7684RTT\u65f6\u95f4\uff0c\u5355\u4f4d: <code>\u5fae\u79d2</code>\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketget_last_errno","title":"xxsocket::get_last_errno","text":"<p>\u83b7\u53d6\u6700\u8fd1\u4e00\u6b21socket\u64cd\u4f5c\u9519\u8bef\u7801\u3002</p> <pre><code> static int get_last_errno();\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_97","title":"\u8fd4\u56de\u503c","text":"<p><code>0</code>: \u65e0\u9519\u8bef\uff0c <code>&gt; 0</code> \u901a\u8fc7 <code>xxsocket::strerror</code> \u8f6c\u6362\u4e3a\u8be6\u7ec6\u9519\u8bef\u4fe1\u606f\u3002</p>"},{"location":"api/reference/xxsocket-class/#_98","title":"\u6ce8\u610f","text":"<p>\u6b64\u51fd\u6570\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketset_last_errno","title":"xxsocket::set_last_errno","text":"<p>\u8bbe\u7f6esocket\u64cd\u4f5c\u9519\u8bef\u7801\u3002</p> <pre><code>static void set_last_errno(int error);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_99","title":"\u53c2\u6570","text":"<p>error \u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#_100","title":"\u6ce8\u610f","text":"<p>\u6b64\u51fd\u6570\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketnot_send_error","title":"xxsocket::not_send_error","text":"<p>\u5224\u65ad\u662f\u5426\u662f\u53d1\u9001\u65f6socket\u51fa\u73b0\u65e0\u6cd5\u7ee7\u7eed\u7684\u9519\u8bef\u3002</p> <pre><code>static bool not_send_error(int error);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_101","title":"\u53c2\u6570","text":"<p>error \u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#_102","title":"\u8fd4\u56de\u503c","text":"<p><code>true</code>: socket\u6b63\u5e38\uff0c<code>false</code>: socket\u72b6\u6001\u5df2\u7ecf\u53d1\u751f\u9519\u8bef\uff0c\u5e94\u5f53\u5173\u95edsocket\u7ec8\u6b62\u901a\u8baf\u3002</p>"},{"location":"api/reference/xxsocket-class/#_103","title":"\u6ce8\u610f","text":"<p>\u4ec5\u5f53\u53d1\u9001\u64cd\u4f5c\u8fd4\u56de\u503c <code>&lt; 0</code>\u65f6\uff0c\u8c03\u7528\u6b64\u51fd\u6570\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketnot_recv_error","title":"xxsocket::not_recv_error","text":"<p>\u5224\u65ad\u662f\u5426\u662f\u63a5\u6536\u65f6socket\u51fa\u73b0\u65e0\u6cd5\u7ee7\u7eed\u7684\u9519\u8bef\u3002</p> <pre><code>static bool not_recv_error(int error);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_104","title":"\u53c2\u6570","text":"<p>error \u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#_105","title":"\u8fd4\u56de\u503c","text":"<p><code>true</code>: socket\u6b63\u5e38\uff0c<code>false</code>: socket\u72b6\u6001\u5df2\u7ecf\u53d1\u751f\u9519\u8bef\uff0c\u5e94\u5f53\u5173\u95edsocket\u7ec8\u6b62\u901a\u8baf\u3002</p>"},{"location":"api/reference/xxsocket-class/#_106","title":"\u6ce8\u610f","text":"<p>\u4ec5\u5f53\u63a5\u6536\u64cd\u4f5c\u8fd4\u56de\u503c <code>&lt; 0</code>\u65f6\uff0c\u8c03\u7528\u6b64\u51fd\u6570\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketstrerror","title":"xxsocket::strerror","text":"<p>\u5c06\u9519\u8bef\u7801\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u3002</p> <pre><code>static const char* strerror(int error);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_107","title":"\u53c2\u6570","text":"<p>error \u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#_108","title":"\u8fd4\u56de\u503c","text":"<p>\u9519\u8bef\u4fe1\u606f\u7684\u5b57\u7b26\u4e32\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketstrerror_r","title":"xxsocket::strerror_r","text":"<p>\u5c06\u9519\u8bef\u7801\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff0c\u529f\u80fd\u548c<code>xxsocket::strerror</code>\u4e00\u6837\uff0c\u4f46\u6b64\u51fd\u6570\u7ebf\u7a0b\u5b89\u5168\u7684\u3002</p> <pre><code>static const char* strerror_r(int error, char *buf, size_t buflen);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_109","title":"\u53c2\u6570","text":"<p>error \u9519\u8bef\u7801\u3002</p> <p>buf \u63a5\u53d7\u9519\u8bef\u4fe1\u606f\u5b57\u7b26\u4e32\u7684\u7f13\u51b2\u533a</p> <p>buflen \u63a5\u53d7\u9519\u8bef\u4fe1\u606f\u5b57\u7b26\u4e32\u7684\u7f13\u51b2\u533a\u5927\u5c0f</p>"},{"location":"api/reference/xxsocket-class/#_110","title":"\u8fd4\u56de\u503c","text":"<p>\u9519\u8bef\u4fe1\u606f\u7684\u5b57\u7b26\u4e32\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketgai_strerror","title":"xxsocket::gai_strerror","text":"<p>\u5c06<code>getaddrinfo</code>\u9519\u8bef\u7801\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u3002</p> <pre><code>static const char* gai_strerror(int error);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_111","title":"\u53c2\u6570","text":"<p>error \u9519\u8bef\u7801\u3002</p>"},{"location":"api/reference/xxsocket-class/#_112","title":"\u8fd4\u56de\u503c","text":"<p>\u9519\u8bef\u4fe1\u606f\u7684\u5b57\u7b26\u4e32\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketresolve","title":"xxsocket::resolve","text":"<p>\u89e3\u6790\u57df\u540d\u5305\u542b\u7684\u6240\u6709\u5730\u5740\u3002</p> <pre><code>int resolve(std::vector&lt;endpoint&gt;&amp; endpoints, const char* hostname, unsigned short port = 0, int socktype = SOCK_STREAM);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_113","title":"\u53c2\u6570","text":"<p>endpoints \u8f93\u51fa\u53c2\u6570\u3002</p> <p>hostname \u57df\u540d\u3002</p> <p>port \u7aef\u53e3\u3002</p> <p>socktype socket\u7c7b\u578b\u3002</p>"},{"location":"api/reference/xxsocket-class/#_114","title":"\u8fd4\u56de\u503c","text":"<p><code>0</code>: \u65e0\u9519\u8bef\uff0c <code>&gt; 0</code> \u901a\u8fc7 <code>xxsocket::strerror</code> \u8f6c\u6362\u4e3a\u8be6\u7ec6\u9519\u8bef\u4fe1\u606f\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketresolve_v4","title":"xxsocket::resolve_v4","text":"<p>\u89e3\u6790\u57df\u540d\u5305\u542b\u7684IPv4\u5730\u5740\u3002</p> <pre><code>int resolve_v4(std::vector&lt;endpoint&gt;&amp; endpoints, const char* hostname, unsigned short port = 0, int socktype = SOCK_STREAM);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_115","title":"\u53c2\u6570","text":"<p>endpoints \u8f93\u51fa\u53c2\u6570\u3002</p> <p>hostname \u57df\u540d\u3002</p> <p>port \u7aef\u53e3\u3002</p> <p>socktype socket\u7c7b\u578b\u3002</p>"},{"location":"api/reference/xxsocket-class/#_116","title":"\u8fd4\u56de\u503c","text":"<p><code>0</code>: \u65e0\u9519\u8bef\uff0c <code>&gt; 0</code> \u901a\u8fc7 <code>xxsocket::strerror</code> \u8f6c\u6362\u4e3a\u8be6\u7ec6\u9519\u8bef\u4fe1\u606f\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketresolve_v6","title":"xxsocket::resolve_v6","text":"<p>\u89e3\u6790\u57df\u540d\u5305\u542b\u7684IPv6\u5730\u5740\u3002</p> <pre><code>int resolve_v6(std::vector&lt;endpoint&gt;&amp; endpoints, const char* hostname, unsigned short port = 0, int socktype = SOCK_STREAM);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_117","title":"\u53c2\u6570","text":"<p>endpoints \u8f93\u51fa\u53c2\u6570\u3002</p> <p>hostname \u57df\u540d\u3002</p> <p>port \u7aef\u53e3\u3002</p> <p>socktype socket\u7c7b\u578b\u3002</p>"},{"location":"api/reference/xxsocket-class/#_118","title":"\u8fd4\u56de\u503c","text":"<p><code>0</code>: \u65e0\u9519\u8bef\uff0c <code>&gt; 0</code> \u901a\u8fc7 <code>xxsocket::strerror</code> \u8f6c\u6362\u4e3a\u8be6\u7ec6\u9519\u8bef\u4fe1\u606f\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketresolve_v4to6","title":"xxsocket::resolve_v4to6","text":"<p>\u4ec5\u89e3\u6790\u57df\u540d\u5305\u542b\u7684IPv4\u5730\u5740\u5e76\u8f6c\u6362\u4e3aIPv6 V4MAPPED\u683c\u5f0f\u3002</p> <pre><code>int resolve_v4to6(std::vector&lt;endpoint&gt;&amp; endpoints, const char* hostname, unsigned short port = 0, int socktype = SOCK_STREAM);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_119","title":"\u53c2\u6570","text":"<p>endpoints \u8f93\u51fa\u53c2\u6570\u3002</p> <p>hostname \u57df\u540d\u3002</p> <p>port \u7aef\u53e3\u3002</p> <p>socktype socket\u7c7b\u578b\u3002</p>"},{"location":"api/reference/xxsocket-class/#_120","title":"\u8fd4\u56de\u503c","text":"<p><code>0</code>: \u65e0\u9519\u8bef\uff0c <code>&gt; 0</code> \u901a\u8fc7 <code>xxsocket::strerror</code> \u8f6c\u6362\u4e3a\u8be6\u7ec6\u9519\u8bef\u4fe1\u606f\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketresolve_tov6","title":"xxsocket::resolve_tov6","text":"<p>\u89e3\u6790\u57df\u540d\u5305\u542b\u7684\u6240\u6709\u5730\u5740\uff0cIPv4\u5730\u5740\u4f1a\u8f6c\u6362\u4e3aIPv6 V4MAPPED\u683c\u5f0f\u3002</p> <pre><code>int resolve_tov6(std::vector&lt;endpoint&gt;&amp; endpoints, const char* hostname, unsigned short port = 0, int socktype = SOCK_STREAM);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_121","title":"\u53c2\u6570","text":"<p>endpoints \u8f93\u51fa\u53c2\u6570\u3002</p> <p>hostname \u57df\u540d\u3002</p> <p>port \u7aef\u53e3\u3002</p> <p>socktype socket\u7c7b\u578b\u3002</p>"},{"location":"api/reference/xxsocket-class/#_122","title":"\u8fd4\u56de\u503c","text":"<p><code>0</code>: \u65e0\u9519\u8bef\uff0c <code>&gt; 0</code> \u901a\u8fc7 <code>xxsocket::strerror</code> \u8f6c\u6362\u4e3a\u8be6\u7ec6\u9519\u8bef\u4fe1\u606f\u3002</p>"},{"location":"api/reference/xxsocket-class/#xxsocketgetipsv","title":"xxsocket::getipsv","text":"<p>\u83b7\u53d6\u672c\u673a\u652f\u6301\u7684IP\u534f\u8bae\u6808\u6807\u5fd7\u4f4d\u3002</p> <pre><code>static int getipsv();\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_123","title":"\u8fd4\u56de\u503c","text":"<ul> <li><code>ipsv_ipv4</code>: \u672c\u673a\u53ea\u652f\u6301IPv4\u534f\u8bae\u3002</li> <li><code>ipsv_ipv6</code>: \u672c\u673a\u53ea\u652f\u6301IPv6\u534f\u8bae\u3002</li> <li><code>ipsv_dual_stack</code>: \u672c\u673a\u652f\u6301IPv4\u548cIPv6\u53cc\u6808\u534f\u8bae\u3002</li> </ul>"},{"location":"api/reference/xxsocket-class/#_124","title":"\u6ce8\u610f","text":"<p>\u5f53\u8fd4\u56de\u503c\u652f\u6301\u53cc\u6808\u534f\u8bae\u662f\uff0c\u7528\u6237\u5e94\u5f53\u59cb\u7ec8\u4f18\u5148\u4f7f\u7528IPv4\u901a\u4fe1\uff0c \u4f8b\u5982<code>\u667a\u80fd\u624b\u673a\u8bbe\u5907</code>\u5728\u540c\u65f6\u5f00\u542f<code>wifi</code>\u548c<code>\u8702\u7a9d\u7f51\u7edc</code>\u65f6\uff0c\u5c06\u4f1a\u4f18\u5148\u9009\u62e9wifi\uff0c \u800cwifi\u901a\u5e38\u662fIPv4\uff0c\u8be6\u89c1: https://github.com/halx99/yasio/issues/130</p>"},{"location":"api/reference/xxsocket-class/#_125","title":"\u793a\u4f8b","text":"<pre><code>// xxsocket-ipsv.cpp\n#include &lt;vector&gt;\n#include \"yasio/xxsocket.hpp\"\nusing namespace yasio;\nint main(){\nconst char* host = \"github.com\";\nstd::vector&lt;ip::endpoint&gt; eps;\nint flags = xxsocket::get_ipsv();\nif(flags &amp; ipsv_ipv4) {\nxxsocket::resolve_v4(eps, host, 80);\n}\nelse if(flags &amp; ipsv_ipv6) {\nxxsocket::resolve_tov6(eps, host, 80);\n}\nelse {\nstd::cerr &lt;&lt; \"Local network not available!\\n\";\n}\nreturn 0;\n}\n</code></pre>"},{"location":"api/reference/xxsocket-class/#xxsockettraverse_local_address","title":"xxsocket::traverse_local_address","text":"<p>\u679a\u4e3e\u672c\u673a\u5730\u5740\u3002</p> <pre><code>static void traverse_local_address(std::function&lt;bool(const ip::endpoint&amp;)&gt; handler);\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_126","title":"\u53c2\u6570","text":"<p>handler \u679a\u4e3e\u5730\u5740\u56de\u8c03\u3002</p>"},{"location":"api/reference/xxsocket-class/#_127","title":"\u793a\u4f8b","text":"<pre><code>// xxsocket-traverse.cpp\n#include &lt;vector&gt;\n#include \"yasio/xxsocket.hpp\"\nusing namespace yasio;\nint main(){\nint flags = 0;\nxxsocket::traverse_local_address([&amp;](const ip::endpoint&amp; ep) -&gt; bool {\nswitch (ep.af())\n{\ncase AF_INET:\nflags |= ipsv_ipv4;\nbreak;\ncase AF_INET6:\nflags |= ipsv_ipv6;\nbreak;\n}\nreturn (flags == ipsv_dual_stack);\n});\nYASIO_LOG(\"Supported ip stack flags=%d\", flags);\nreturn flags;\n}\n</code></pre>"},{"location":"api/reference/xxsocket-class/#_128","title":"\u8bf7\u53c2\u9605","text":"<p>io_service Class</p>"}]}